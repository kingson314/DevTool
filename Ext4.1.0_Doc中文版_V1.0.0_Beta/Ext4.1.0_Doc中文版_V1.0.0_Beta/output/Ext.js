Ext.data.JsonP.Ext({"tagname":"class","name":"Ext","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"code_type":"nop","inheritable":false,"inheritdoc":null,"meta":{"docauthor":["译者: 曹成博<caochengbo12@qq.com>"]},"id":"class-Ext","members":{"cfg":[],"property":[{"name":"BLANK_IMAGE_URL","tagname":"property","owner":"Ext","meta":{},"id":"property-BLANK_IMAGE_URL"},{"name":"Logger","tagname":"property","owner":"Ext","meta":{"private":true},"id":"property-Logger"},{"name":"SSL_SECURE_URL","tagname":"property","owner":"Ext","meta":{},"id":"property-SSL_SECURE_URL"},{"name":"USE_NATIVE_JSON","tagname":"property","owner":"Ext","meta":{},"id":"property-USE_NATIVE_JSON"},{"name":"browser","tagname":"property","owner":"Ext","meta":{},"id":"property-browser"},{"name":"chromeVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-chromeVersion"},{"name":"emptyFn","tagname":"property","owner":"Ext","meta":{},"id":"property-emptyFn"},{"name":"emptyString","tagname":"property","owner":"Ext","meta":{},"id":"property-emptyString"},{"name":"enableFx","tagname":"property","owner":"Ext","meta":{},"id":"property-enableFx"},{"name":"enableGarbageCollector","tagname":"property","owner":"Ext","meta":{},"id":"property-enableGarbageCollector"},{"name":"enableListenerCollection","tagname":"property","owner":"Ext","meta":{},"id":"property-enableListenerCollection"},{"name":"enableNestedListenerRemoval","tagname":"property","owner":"Ext","meta":{},"id":"property-enableNestedListenerRemoval"},{"name":"enumerables","tagname":"property","owner":"Ext","meta":{},"id":"property-enumerables"},{"name":"features","tagname":"property","owner":"Ext","meta":{},"id":"property-features"},{"name":"firefoxVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-firefoxVersion"},{"name":"functionFactoryCache","tagname":"property","owner":"Ext","meta":{"private":true},"id":"property-functionFactoryCache"},{"name":"ieVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-ieVersion"},{"name":"isChrome","tagname":"property","owner":"Ext","meta":{},"id":"property-isChrome"},{"name":"isFF10","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF10"},{"name":"isFF3_0","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF3_0"},{"name":"isFF3_5","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF3_5"},{"name":"isFF3_6","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF3_6"},{"name":"isFF4","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF4"},{"name":"isFF5","tagname":"property","owner":"Ext","meta":{},"id":"property-isFF5"},{"name":"isGecko","tagname":"property","owner":"Ext","meta":{},"id":"property-isGecko"},{"name":"isGecko10","tagname":"property","owner":"Ext","meta":{},"id":"property-isGecko10"},{"name":"isGecko3","tagname":"property","owner":"Ext","meta":{},"id":"property-isGecko3"},{"name":"isGecko4","tagname":"property","owner":"Ext","meta":{},"id":"property-isGecko4"},{"name":"isGecko5","tagname":"property","owner":"Ext","meta":{},"id":"property-isGecko5"},{"name":"isIE","tagname":"property","owner":"Ext","meta":{},"id":"property-isIE"},{"name":"isIE6","tagname":"property","owner":"Ext","meta":{},"id":"property-isIE6"},{"name":"isIE7","tagname":"property","owner":"Ext","meta":{},"id":"property-isIE7"},{"name":"isIE8","tagname":"property","owner":"Ext","meta":{},"id":"property-isIE8"},{"name":"isIE9","tagname":"property","owner":"Ext","meta":{},"id":"property-isIE9"},{"name":"isLinux","tagname":"property","owner":"Ext","meta":{},"id":"property-isLinux"},{"name":"isMac","tagname":"property","owner":"Ext","meta":{},"id":"property-isMac"},{"name":"isOpera","tagname":"property","owner":"Ext","meta":{},"id":"property-isOpera"},{"name":"isOpera10_5","tagname":"property","owner":"Ext","meta":{},"id":"property-isOpera10_5"},{"name":"isReady","tagname":"property","owner":"Ext","meta":{},"id":"property-isReady"},{"name":"isSafari","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari"},{"name":"isSafari2","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari2"},{"name":"isSafari3","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari3"},{"name":"isSafari4","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari4"},{"name":"isSafari5","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari5"},{"name":"isSafari5_0","tagname":"property","owner":"Ext","meta":{},"id":"property-isSafari5_0"},{"name":"isSecure","tagname":"property","owner":"Ext","meta":{},"id":"property-isSecure"},{"name":"isWebKit","tagname":"property","owner":"Ext","meta":{},"id":"property-isWebKit"},{"name":"isWindows","tagname":"property","owner":"Ext","meta":{},"id":"property-isWindows"},{"name":"name","tagname":"property","owner":"Ext","meta":{},"id":"property-name"},{"name":"operaVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-operaVersion"},{"name":"os","tagname":"property","owner":"Ext","meta":{},"id":"property-os"},{"name":"resetCls","tagname":"property","owner":"Ext","meta":{},"id":"property-resetCls"},{"name":"safariVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-safariVersion"},{"name":"scopeResetCSS","tagname":"property","owner":"Ext","meta":{},"id":"property-scopeResetCSS"},{"name":"useShims","tagname":"property","owner":"Ext","meta":{},"id":"property-useShims"},{"name":"webKitVersion","tagname":"property","owner":"Ext","meta":{},"id":"property-webKitVersion"}],"method":[{"name":"addBehaviors","tagname":"method","owner":"Ext","meta":{},"id":"method-addBehaviors"},{"name":"application","tagname":"method","owner":"Ext","meta":{},"id":"method-application"},{"name":"apply","tagname":"method","owner":"Ext","meta":{},"id":"method-apply"},{"name":"applyIf","tagname":"method","owner":"Ext","meta":{},"id":"method-applyIf"},{"name":"bind","tagname":"method","owner":"Ext","meta":{},"id":"method-bind"},{"name":"callback","tagname":"method","owner":"Ext","meta":{},"id":"method-callback"},{"name":"clean","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#clean} 代替本方法"}},"id":"method-clean"},{"name":"clone","tagname":"method","owner":"Ext","meta":{},"id":"method-clone"},{"name":"copyTo","tagname":"method","owner":"Ext","meta":{},"id":"method-copyTo"},{"name":"create","tagname":"method","owner":"Ext","meta":{},"id":"method-create"},{"name":"createByAlias","tagname":"method","owner":"Ext","meta":{},"id":"method-createByAlias"},{"name":"createWidget","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"使用 {@link Ext#widget} 代替."}},"id":"method-createWidget"},{"name":"decode","tagname":"method","owner":"Ext","meta":{},"id":"method-decode"},{"name":"defer","tagname":"method","owner":"Ext","meta":{},"id":"method-defer"},{"name":"define","tagname":"method","owner":"Ext","meta":{"markdown":true},"id":"method-define"},{"name":"destroy","tagname":"method","owner":"Ext","meta":{},"id":"method-destroy"},{"name":"destroyMembers","tagname":"method","owner":"Ext","meta":{},"id":"method-destroyMembers"},{"name":"each","tagname":"method","owner":"Ext","meta":{},"id":"method-each"},{"name":"encode","tagname":"method","owner":"Ext","meta":{},"id":"method-encode"},{"name":"escapeRe","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"采用 {@link Ext.String#escapeRegex} 来代替"}},"id":"method-escapeRe"},{"name":"exclude","tagname":"method","owner":"Ext","meta":{},"id":"method-exclude"},{"name":"extend","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"采用{@link Ext#define Ext.define}来代替"}},"id":"method-extend"},{"name":"flatten","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#flatten} 代替本方法"}},"id":"method-flatten"},{"name":"fly","tagname":"method","owner":"Ext","meta":{},"id":"method-fly"},{"name":"get","tagname":"method","owner":"Ext","meta":{},"id":"method-get"},{"name":"getBody","tagname":"method","owner":"Ext","meta":{},"id":"method-getBody"},{"name":"getClass","tagname":"method","owner":"Ext","meta":{},"id":"method-getClass"},{"name":"getClassName","tagname":"method","owner":"Ext","meta":{},"id":"method-getClassName"},{"name":"getCmp","tagname":"method","owner":"Ext","meta":{},"id":"method-getCmp"},{"name":"getDoc","tagname":"method","owner":"Ext","meta":{},"id":"method-getDoc"},{"name":"getDom","tagname":"method","owner":"Ext","meta":{},"id":"method-getDom"},{"name":"getHead","tagname":"method","owner":"Ext","meta":{},"id":"method-getHead"},{"name":"getOrientation","tagname":"method","owner":"Ext","meta":{},"id":"method-getOrientation"},{"name":"getScrollBarWidth","tagname":"method","owner":"Ext","meta":{"deprecated":{"text":""}},"id":"method-getScrollBarWidth"},{"name":"getScrollbarSize","tagname":"method","owner":"Ext","meta":{},"id":"method-getScrollbarSize"},{"name":"getStore","tagname":"method","owner":"Ext","meta":{},"id":"method-getStore"},{"name":"getUniqueGlobalNamespace","tagname":"method","owner":"Ext","meta":{"private":true},"id":"method-getUniqueGlobalNamespace"},{"name":"htmlDecode","tagname":"method","owner":"Ext","meta":{"deprecated":{"text":"使用{@link Ext.String#htmlDecode}代替"}},"id":"method-htmlDecode"},{"name":"htmlEncode","tagname":"method","owner":"Ext","meta":{"deprecated":{"text":"使用{@link Ext.String#htmlEncode}代替"}},"id":"method-htmlEncode"},{"name":"id","tagname":"method","owner":"Ext","meta":{},"id":"method-id"},{"name":"invoke","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"将在下一个主要版本中移除"}},"id":"method-invoke"},{"name":"isArray","tagname":"method","owner":"Ext","meta":{},"id":"method-isArray"},{"name":"isBoolean","tagname":"method","owner":"Ext","meta":{},"id":"method-isBoolean"},{"name":"isDate","tagname":"method","owner":"Ext","meta":{},"id":"method-isDate"},{"name":"isDefined","tagname":"method","owner":"Ext","meta":{},"id":"method-isDefined"},{"name":"isElement","tagname":"method","owner":"Ext","meta":{},"id":"method-isElement"},{"name":"isEmpty","tagname":"method","owner":"Ext","meta":{"markdown":true},"id":"method-isEmpty"},{"name":"isFunction","tagname":"method","owner":"Ext","meta":{},"id":"method-isFunction"},{"name":"isIterable","tagname":"method","owner":"Ext","meta":{},"id":"method-isIterable"},{"name":"isNumber","tagname":"method","owner":"Ext","meta":{},"id":"method-isNumber"},{"name":"isNumeric","tagname":"method","owner":"Ext","meta":{},"id":"method-isNumeric"},{"name":"isObject","tagname":"method","owner":"Ext","meta":{},"id":"method-isObject"},{"name":"isPrimitive","tagname":"method","owner":"Ext","meta":{},"id":"method-isPrimitive"},{"name":"isSimpleObject","tagname":"method","owner":"Ext","meta":{"private":true},"id":"method-isSimpleObject"},{"name":"isString","tagname":"method","owner":"Ext","meta":{},"id":"method-isString"},{"name":"isTextNode","tagname":"method","owner":"Ext","meta":{},"id":"method-isTextNode"},{"name":"iterate","tagname":"method","owner":"Ext","meta":{"markdown":true},"id":"method-iterate"},{"name":"log","tagname":"method","owner":"Ext","meta":{},"id":"method-log"},{"name":"max","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#max} 代替本方法"}},"id":"method-max"},{"name":"mean","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#mean} 代替本方法"}},"id":"method-mean"},{"name":"merge","tagname":"method","owner":"Ext","meta":{},"id":"method-merge"},{"name":"min","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#min} 代替本方法"}},"id":"method-min"},{"name":"namespace","tagname":"method","owner":"Ext","meta":{},"id":"method-namespace"},{"name":"ns","tagname":"method","owner":"Ext","meta":{},"id":"method-ns"},{"name":"num","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"Please use {@link Ext.Number#from} instead."}},"id":"method-num"},{"name":"onDocumentReady","tagname":"method","owner":"Ext","meta":{},"id":"method-onDocumentReady"},{"name":"onReady","tagname":"method","owner":"Ext","meta":{},"id":"method-onReady"},{"name":"override","tagname":"method","owner":"Ext","meta":{},"id":"method-override"},{"name":"partition","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"将在下一个主要版本中移除"}},"id":"method-partition"},{"name":"pass","tagname":"method","owner":"Ext","meta":{},"id":"method-pass"},{"name":"pluck","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#pluck Ext.Array.pluck} 代替本方法"}},"id":"method-pluck"},{"name":"preg","tagname":"method","owner":"Ext","meta":{},"id":"method-preg"},{"name":"query","tagname":"method","owner":"Ext","meta":{},"id":"method-query"},{"name":"regModel","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"使用 {@link Ext#define} 来代替。"}},"id":"method-regModel"},{"name":"regStore","tagname":"method","owner":"Ext","meta":{},"id":"method-regStore"},{"name":"removeNode","tagname":"method","owner":"Ext","meta":{},"id":"method-removeNode"},{"name":"require","tagname":"method","owner":"Ext","meta":{},"id":"method-require"},{"name":"select","tagname":"method","owner":"Ext","meta":{},"id":"method-select"},{"name":"sum","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#sum} 代替本方法"}},"id":"method-sum"},{"name":"syncRequire","tagname":"method","owner":"Ext","meta":{},"id":"method-syncRequire"},{"name":"toArray","tagname":"method","owner":"Ext","meta":{},"id":"method-toArray"},{"name":"toSentence","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"将在下一个主要版本中移除"}},"id":"method-toSentence"},{"name":"type","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"使用{@link Ext#typeOf}来代替"}},"id":"method-type"},{"name":"typeOf","tagname":"method","owner":"Ext","meta":{"markdown":true},"id":"method-typeOf"},{"name":"unique","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用 {@link Ext.Array#unique} 代替本方法"}},"id":"method-unique"},{"name":"urlAppend","tagname":"method","owner":"Ext","meta":{"deprecated":{"text":"使用{@link Ext.String#urlAppend}代替"}},"id":"method-urlAppend"},{"name":"urlDecode","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用{@link Ext.Object#fromQueryString}代替本方法"}},"id":"method-urlDecode"},{"name":"urlEncode","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"请使用{@link Ext.Object#toQueryString}代替本方法"}},"id":"method-urlEncode"},{"name":"value","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"采用 {@link Ext#valueFrom} 来代替"}},"id":"method-value"},{"name":"valueFrom","tagname":"method","owner":"Ext","meta":{},"id":"method-valueFrom"},{"name":"widget","tagname":"method","owner":"Ext","meta":{},"id":"method-widget"},{"name":"zip","tagname":"method","owner":"Ext","meta":{"deprecated":{"version":"4.0.0","text":"将在下一个主要版本中移除"}},"id":"method-zip"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"Ext-more.js","href":"Ext-more.html#Ext"},{"filename":"Ext-more.js","href":"Ext-more.html#Ext"},{"filename":"Ext.js","href":"Ext.html#Ext"}],"private":null,"html_meta":{"docauthor":null},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Ext-more.html#Ext' target='_blank'>Ext-more.js</a></div><div class='dependency'><a href='source/Ext-more.html#Ext' target='_blank'>Ext-more.js</a></div><div class='dependency'><a href='source/Ext.html#Ext' target='_blank'>Ext.js</a></div></pre><div class='doc-contents'><p>Ext 命名空间(全局对象)封装了所有类、单例和 Sencha\n库所提供的实用方法。</p>\n\n<p>大多数用户界面组件在一个较低的层次嵌套在命名空间中，\n但是提供的许多常见的实用函数作为 Ext 命名空间的直接属性。</p>\n\n<p>此外提供许多常用的方法，从其他类作为 Ext 命名空间内的快捷方式。\n例如 <a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">Ext.getCmp</a> 就是\n<a href=\"#!/api/Ext.ComponentManager-method-get\" rel=\"Ext.ComponentManager-method-get\" class=\"docClass\">Ext.ComponentManager.get</a> 的别名。</p>\n\n<p>一旦DOM准备好，许多应用程序启动，调用<a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>。\n这可以确保已加载所有脚本，\n防止依赖性问题。例如:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function(){\n    new <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>({\n        renderTo: document.body,\n        html: 'DOM ready!'\n    });\n});\n</code></pre>\n\n<p>有关如何使用Ext类的更多信息，请参见:</p>\n\n<ul>\n<li><a href=\"http://www.sencha.com/learn/\">The Learning Center</a></li>\n<li><a href=\"http://www.sencha.com/learn/Ext_FAQ\">The FAQ</a></li>\n<li><a href=\"http://www.sencha.com/forum/\">The forums</a></li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-BLANK_IMAGE_URL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-BLANK_IMAGE_URL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-BLANK_IMAGE_URL' class='name expandable'>BLANK_IMAGE_URL</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>一个1x1的透明gif图像，Ext使用它来和CSS一起创建内嵌的图标的URL。 ...</div><div class='long'><p>一个1x1的透明gif图像，Ext使用它来和CSS一起创建内嵌的图标的URL。\n在旧版本的IE浏览器，默认路径为\"http://sencha.com/s.gif\"，\n并且你必须把它改成你自己的服务器上的图片路径。\n对于其他浏览器使用内联数据的URL。</p>\n</div></div></div><div id='property-Logger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-Logger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-Logger' class='name not-expandable'>Logger</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-SSL_SECURE_URL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-SSL_SECURE_URL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-SSL_SECURE_URL' class='name expandable'>SSL_SECURE_URL</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>使用 Ext 时，在安全模式下，iframe src 和 onReady src\n防止 IE 不安全内容警告的空白文件的 URL 。 ...</div><div class='long'><p>使用 Ext 时，在安全模式下，iframe src 和 onReady src\n防止 IE 不安全内容警告的空白文件的 URL 。\n(<code>'about:blank'</code>，除了为IE的安全模式，这个是 <code>'javascript:\"\"'</code>).</p>\n</div></div></div><div id='property-USE_NATIVE_JSON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-USE_NATIVE_JSON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-USE_NATIVE_JSON' class='name expandable'>USE_NATIVE_JSON</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>指示是否使用本地浏览器解析JSON方法。 ...</div><div class='long'><p>指示是否使用本地浏览器解析JSON方法。\n如果浏览器不支持原生JSON方法这个选项将被忽略。</p>\n\n<p><strong>注意:</strong> 原生 JSON 方法与具有函数的对象将无法工作。\n此外，属性名称必须用引号，否则数据将不能解析。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-browser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Browser.html#Ext-property-browser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-browser' class='name not-expandable'>browser</a><span> : <a href=\"#!/api/Ext.env.Browser\" rel=\"Ext.env.Browser\" class=\"docClass\">Ext.env.Browser</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Ext.env.Browser\" rel=\"Ext.env.Browser\" class=\"docClass\">Ext.env.Browser</a>的全局实例</p>\n</div><div class='long'><p><a href=\"#!/api/Ext.env.Browser\" rel=\"Ext.env.Browser\" class=\"docClass\">Ext.env.Browser</a>的全局实例</p>\n</div></div></div><div id='property-chromeVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-chromeVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-chromeVersion' class='name not-expandable'>chromeVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>当前Chrome的版本 (如果浏览器不是 Chrome 则返回0)。</p>\n</div><div class='long'><p>当前Chrome的版本 (如果浏览器不是 Chrome 则返回0)。</p>\n</div></div></div><div id='property-emptyFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-emptyFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-emptyFn' class='name not-expandable'>emptyFn</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>一个可复用的空函数</p>\n</div><div class='long'><p>一个可复用的空函数</p>\n</div></div></div><div id='property-emptyString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-emptyString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-emptyString' class='name not-expandable'>emptyString</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>一个零长度的字符串，将通过真实测试。用于传递给方法，\n它们使用一个真实测试，来拒绝<i>falsy</i>值一个字符串的值，则必须清除。</p>\n</div><div class='long'><p>一个零长度的字符串，将通过真实测试。用于传递给方法，\n它们使用一个真实测试，来拒绝<i>falsy</i>值一个字符串的值，则必须清除。</p>\n</div></div></div><div id='property-enableFx' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-enableFx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-enableFx' class='name not-expandable'>enableFx</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> 类是可用的则为true。</p>\n</div><div class='long'><p>如果<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> 类是可用的则为true。</p>\n</div></div></div><div id='property-enableGarbageCollector' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-enableGarbageCollector' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-enableGarbageCollector' class='name expandable'>enableGarbageCollector</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果为true，则允许自动周期性的清空孤立的Ext.Elements ...</div><div class='long'><p>如果为true，则允许自动周期性的清空孤立的Ext.Elements</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-enableListenerCollection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-enableListenerCollection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-enableListenerCollection' class='name expandable'>enableListenerCollection</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果为true，则在自动清空缓存中的元素后移除相应的监听器 ...</div><div class='long'><p>如果为true，则在自动清空缓存中的元素后移除相应的监听器</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-enableNestedListenerRemoval' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-enableNestedListenerRemoval' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-enableNestedListenerRemoval' class='name expandable'>enableNestedListenerRemoval</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>实验。 ...</div><div class='long'><p><strong>实验。</strong> 设置为true，删除一个元素时，级联监听器删除子元素。\n目前未优化的性能。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-enumerables' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-enumerables' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-enumerables' class='name not-expandable'>enumerables</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span></div><div class='description'><div class='short'><p>一个数组，包含额外可枚举的低版本浏览器</p>\n</div><div class='long'><p>一个数组，包含额外可枚举的低版本浏览器</p>\n</div></div></div><div id='property-features' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/FeatureDetector.html#Ext-property-features' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-features' class='name not-expandable'>features</a><span> : <a href=\"#!/api/Ext.env.FeatureDetector\" rel=\"Ext.env.FeatureDetector\" class=\"docClass\">Ext.env.FeatureDetector</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Ext.env.FeatureDetector\" rel=\"Ext.env.FeatureDetector\" class=\"docClass\">Ext.env.FeatureDetector</a>的全局实例。</p>\n</div><div class='long'><p><a href=\"#!/api/Ext.env.FeatureDetector\" rel=\"Ext.env.FeatureDetector\" class=\"docClass\">Ext.env.FeatureDetector</a>的全局实例。</p>\n</div></div></div><div id='property-firefoxVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-firefoxVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-firefoxVersion' class='name not-expandable'>firefoxVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>当前Firefox的版本 (如果浏览器不是 Firefox 则返回0)。</p>\n</div><div class='long'><p>当前Firefox的版本 (如果浏览器不是 Firefox 则返回0)。</p>\n</div></div></div><div id='property-functionFactoryCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-functionFactoryCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-functionFactoryCache' class='name expandable'>functionFactoryCache</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-ieVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-ieVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-ieVersion' class='name expandable'>ieVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>当前IE的版本 (如果浏览器不是IE则为0)。 ...</div><div class='long'><p>当前IE的版本 (如果浏览器不是IE则为0)。\n这并不能说明当前页面的 documentMode ，这是考虑到<a href=\"#!/api/Ext-property-isIE7\" rel=\"Ext-property-isIE7\" class=\"docClass\">isIE7</a>，\n<a href=\"#!/api/Ext-property-isIE8\" rel=\"Ext-property-isIE8\" class=\"docClass\">isIE8</a> 和 <a href=\"#!/api/Ext-property-isIE9\" rel=\"Ext-property-isIE9\" class=\"docClass\">isIE9</a>。因此，这并不总是正确的:</p>\n\n<pre><code><a href=\"#!/api/Ext-property-isIE8\" rel=\"Ext-property-isIE8\" class=\"docClass\">Ext.isIE8</a> == (<a href=\"#!/api/Ext-property-ieVersion\" rel=\"Ext-property-ieVersion\" class=\"docClass\">Ext.ieVersion</a> == 8)\n</code></pre>\n</div></div></div><div id='property-isChrome' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isChrome' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isChrome' class='name not-expandable'>isChrome</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Chrome则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Chrome则返回true。</p>\n</div></div></div><div id='property-isFF10' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF10' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF10' class='name not-expandable'>isFF10</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 10则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 10则返回true。</p>\n</div></div></div><div id='property-isFF3_0' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF3_0' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF3_0' class='name not-expandable'>isFF3_0</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 3.0则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 3.0则返回true。</p>\n</div></div></div><div id='property-isFF3_5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF3_5' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF3_5' class='name not-expandable'>isFF3_5</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 3.5则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 3.5则返回true。</p>\n</div></div></div><div id='property-isFF3_6' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF3_6' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF3_6' class='name not-expandable'>isFF3_6</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 3.6则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 3.6则返回true。</p>\n</div></div></div><div id='property-isFF4' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF4' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF4' class='name not-expandable'>isFF4</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 4则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 4则返回true。</p>\n</div></div></div><div id='property-isFF5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isFF5' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isFF5' class='name not-expandable'>isFF5</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用FireFox 5则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用FireFox 5则返回true。</p>\n</div></div></div><div id='property-isGecko' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isGecko' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isGecko' class='name not-expandable'>isGecko</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用Gecko布局引擎则返回true(例如，Mozilla，Firefox)。</p>\n</div><div class='long'><p>如果检测到浏览器使用Gecko布局引擎则返回true(例如，Mozilla，Firefox)。</p>\n</div></div></div><div id='property-isGecko10' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isGecko10' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isGecko10' class='name not-expandable'>isGecko10</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器中使用 Gecko 5.0+ 布局引擎则返回true(例如Firefox 5.x)。</p>\n</div><div class='long'><p>如果检测到浏览器中使用 Gecko 5.0+ 布局引擎则返回true(例如Firefox 5.x)。</p>\n</div></div></div><div id='property-isGecko3' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isGecko3' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isGecko3' class='name not-expandable'>isGecko3</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器中使用 Gecko 1.9 + 布局引擎则返回true(例如Firefox 3.x)。</p>\n</div><div class='long'><p>如果检测到浏览器中使用 Gecko 1.9 + 布局引擎则返回true(例如Firefox 3.x)。</p>\n</div></div></div><div id='property-isGecko4' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isGecko4' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isGecko4' class='name not-expandable'>isGecko4</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器中使用 Gecko 2.0+ 布局引擎则返回true(例如Firefox 4.x)。</p>\n</div><div class='long'><p>如果检测到浏览器中使用 Gecko 2.0+ 布局引擎则返回true(例如Firefox 4.x)。</p>\n</div></div></div><div id='property-isGecko5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isGecko5' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isGecko5' class='name not-expandable'>isGecko5</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器中使用 Gecko 5.0+ 布局引擎则返回true(例如Firefox 5.x)。</p>\n</div><div class='long'><p>如果检测到浏览器中使用 Gecko 5.0+ 布局引擎则返回true(例如Firefox 5.x)。</p>\n</div></div></div><div id='property-isIE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isIE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isIE' class='name not-expandable'>isIE</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Internet Explorer则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Internet Explorer则返回true。</p>\n</div></div></div><div id='property-isIE6' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isIE6' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isIE6' class='name not-expandable'>isIE6</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Internet Explorer 6.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Internet Explorer 6.x则返回true。</p>\n</div></div></div><div id='property-isIE7' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isIE7' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isIE7' class='name not-expandable'>isIE7</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Internet Explorer 7.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Internet Explorer 7.x则返回true。</p>\n</div></div></div><div id='property-isIE8' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isIE8' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isIE8' class='name not-expandable'>isIE8</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Internet Explorer 8.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Internet Explorer 8.x则返回true。</p>\n</div></div></div><div id='property-isIE9' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isIE9' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isIE9' class='name not-expandable'>isIE9</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Internet Explorer 9.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Internet Explorer 9.x则返回true。</p>\n</div></div></div><div id='property-isLinux' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isLinux' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isLinux' class='name not-expandable'>isLinux</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到的平台是 Linux，则返回 true。</p>\n</div><div class='long'><p>如果检测到的平台是 Linux，则返回 true。</p>\n</div></div></div><div id='property-isMac' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isMac' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isMac' class='name not-expandable'>isMac</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到的平台是 Mac OS，则返回 true。</p>\n</div><div class='long'><p>如果检测到的平台是 Mac OS，则返回 true。</p>\n</div></div></div><div id='property-isOpera' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isOpera' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isOpera' class='name not-expandable'>isOpera</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Opera则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Opera则返回true。</p>\n</div></div></div><div id='property-isOpera10_5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isOpera10_5' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isOpera10_5' class='name not-expandable'>isOpera10_5</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Opera 10.5x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Opera 10.5x则返回true。</p>\n</div></div></div><div id='property-isReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isReady' class='name expandable'>isReady</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>当文档完全初始化并且准备好工作的时候为true ...</div><div class='long'><p>当文档完全初始化并且准备好工作的时候为true</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-isSafari' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari' class='name not-expandable'>isSafari</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari则返回true。</p>\n</div></div></div><div id='property-isSafari2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari2' class='name not-expandable'>isSafari2</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari 2.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari 2.x则返回true。</p>\n</div></div></div><div id='property-isSafari3' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari3' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari3' class='name not-expandable'>isSafari3</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari 3.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari 3.x则返回true。</p>\n</div></div></div><div id='property-isSafari4' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari4' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari4' class='name not-expandable'>isSafari4</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari 4.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari 4.x则返回true。</p>\n</div></div></div><div id='property-isSafari5' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari5' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari5' class='name not-expandable'>isSafari5</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari 5.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari 5.x则返回true。</p>\n</div></div></div><div id='property-isSafari5_0' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSafari5_0' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSafari5_0' class='name not-expandable'>isSafari5_0</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器是Safari 5.0.x则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器是Safari 5.0.x则返回true。</p>\n</div></div></div><div id='property-isSecure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isSecure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isSecure' class='name not-expandable'>isSecure</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果页面通过SSL运行则返回true</p>\n</div><div class='long'><p>如果页面通过SSL运行则返回true</p>\n</div></div></div><div id='property-isWebKit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isWebKit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isWebKit' class='name not-expandable'>isWebKit</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到浏览器使用WebKit，则返回true。</p>\n</div><div class='long'><p>如果检测到浏览器使用WebKit，则返回true。</p>\n</div></div></div><div id='property-isWindows' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-isWindows' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-isWindows' class='name not-expandable'>isWindows</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>如果检测到的平台是 Windows，则返回 true。</p>\n</div><div class='long'><p>如果检测到的平台是 Windows，则返回 true。</p>\n</div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-name' class='name expandable'>name</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>在全局命名空间中属性的名称(window在浏览器环境中)，引用当前Ext的实例。 ...</div><div class='long'><p>在全局命名空间中属性的名称(<code>window</code>在浏览器环境中)，引用当前Ext的实例。</p>\n\n\n<p>这通常是<code>\"Ext\"</code>，但如果使用的是 ExtJS 的沙盒生成，这将是一个另类的名称。</p>\n\n\n<p>如果代码通过<code>eval</code>来生成使用，或创建一个<code>新的Function</code>，\n并且Ext的全局实例必须被应用，这是应该放在代码中生成的名称。</p>\n\n<p>Defaults to: <code>&quot;Ext&quot;</code></p></div></div></div><div id='property-operaVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-operaVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-operaVersion' class='name not-expandable'>operaVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>当前Opera的版本 (如果浏览器不是 Opera 则返回0)。</p>\n</div><div class='long'><p>当前Opera的版本 (如果浏览器不是 Opera 则返回0)。</p>\n</div></div></div><div id='property-os' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/OS.html#Ext-property-os' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-os' class='name not-expandable'>os</a><span> : <a href=\"#!/api/Ext.env.OS\" rel=\"Ext.env.OS\" class=\"docClass\">Ext.env.OS</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Ext.env.OS\" rel=\"Ext.env.OS\" class=\"docClass\">Ext.env.OS</a>的全局实例。</p>\n</div><div class='long'><p><a href=\"#!/api/Ext.env.OS\" rel=\"Ext.env.OS\" class=\"docClass\">Ext.env.OS</a>的全局实例。</p>\n</div></div></div><div id='property-resetCls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-resetCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-resetCls' class='name not-expandable'>resetCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>当使用<a href=\"#!/api/Ext-property-scopeResetCSS\" rel=\"Ext-property-scopeResetCSS\" class=\"docClass\">scopeResetCSS</a>选项时，\nCSS类用于包装Ext组件。</p>\n</div><div class='long'><p>当使用<a href=\"#!/api/Ext-property-scopeResetCSS\" rel=\"Ext-property-scopeResetCSS\" class=\"docClass\">scopeResetCSS</a>选项时，\nCSS类用于包装Ext组件。</p>\n</div></div></div><div id='property-safariVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-safariVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-safariVersion' class='name not-expandable'>safariVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>当前Safari的版本 (如果浏览器不是 Safari 则返回0)。</p>\n</div><div class='long'><p>当前Safari的版本 (如果浏览器不是 Safari 则返回0)。</p>\n</div></div></div><div id='property-scopeResetCSS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-scopeResetCSS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-scopeResetCSS' class='name expandable'>scopeResetCSS</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true，则要重置的 CSS 只适用于 Ext 组件的作用域。 ...</div><div class='long'><p>设置为true，则要重置的 CSS 只适用于 Ext 组件的作用域。\n注意，根包装容器包含附加元素。\n此外记得当你设置这个选项，你必须使用 ext 的全局作用域\n(除非您使用 bootstrap.js 来加载您的 javascript，在这种情况下它会为您处理)。</p>\n</div></div></div><div id='property-useShims' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-useShims' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-useShims' class='name expandable'>useShims</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>默认情况下，Ext会只能决定是否填充浮动元素。 ...</div><div class='long'><p>默认情况下，Ext会只能决定是否填充浮动元素。\n如果你使用flash，那个这个就需要设置为true。</p>\n</div></div></div><div id='property-webKitVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-property-webKitVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-webKitVersion' class='name not-expandable'>webKitVersion</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>当前WebKit的版本 (如果浏览器没有使用 WebKit 则返回0)。</p>\n</div><div class='long'><p>当前WebKit的版本 (如果浏览器没有使用 WebKit 则返回0)。</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addBehaviors' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-addBehaviors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-addBehaviors' class='name expandable'>addBehaviors</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> obj</span> )</div><div class='description'><div class='short'>当文档就绪的时候，通过选择符为指定的元素添加事件监听器。 ...</div><div class='long'><p>当文档就绪的时候，通过选择符为指定的元素添加事件监听器。\n被指定的事件名称具有一个 <code>@</code> 后缀。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-addBehaviors\" rel=\"Ext-method-addBehaviors\" class=\"docClass\">Ext.addBehaviors</a>({\n    // 在id为foo的元素中的所有锚点上添加一个单击事件的侦听器\n    '#foo a@click' : function(e, t){\n        // 做一些事情\n    },\n\n    // 把相同的监听器添加到多个选择符上(在@符号前使用逗号分隔)\n    '#foo a, #bar span.some-class@mouseover' : function(){\n        // 做一些事情\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要应用的行为列表</p>\n</div></li></ul></div></div></div><div id='method-application' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-application' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-application' class='name expandable'>application</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )</div><div class='description'><div class='short'>加载 Ext.app.Application 类，并在页面准备好之后与给定的配置启动它。 ...</div><div class='long'><p>加载 <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a> 类，并在页面准备好之后与给定的配置启动它。</p>\n\n<p>细节参见 <a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-apply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-apply' class='name expandable'>apply</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> object, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> defaults]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>将配置的所有属性都复制到指定的对象。 ...</div><div class='long'><p>将配置的所有属性都复制到指定的对象。\n需要注意的是，如果递归合并和克隆不需要引用原始对象/数组，\n使用<a href=\"#!/api/Ext.Object-method-merge\" rel=\"Ext.Object-method-merge\" class=\"docClass\">Ext.Object.merge</a>来代替。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>属性接受者</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>属性提供者</p>\n</div></li><li><span class='pre'>defaults</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>一个不同的对象，属性可以作为默认值被拷贝</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回obj对象</p>\n</div></li></ul></div></div></div><div id='method-applyIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-applyIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-applyIf' class='name expandable'>applyIf</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> object, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>如果指定对象不存在相同的属性，将配置的属性拷贝到指定对象。 ...</div><div class='long'><p>如果指定对象不存在相同的属性，将配置的属性拷贝到指定对象。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>属性接受者</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>属性提供者</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回obj对象</p>\n</div></li></ul></div></div></div><div id='method-bind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Function2.html#Ext-method-bind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-bind' class='name expandable'>bind</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> appendArgs</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></div><div class='description'><div class='short'>根据指定函数 fn 创建一个代理函数，更改 this 作用域为传入的作用域，\n可以选择重写调用的参数。(默认为该函数的参数列表)\n\nExt.bind是Ext.Function.bind的别名 ...</div><div class='long'><p>根据指定函数 <code>fn</code> 创建一个代理函数，更改 <code>this</code> 作用域为传入的作用域，\n可以选择重写调用的参数。(默认为该函数的参数列表)</p>\n\n<p><a href=\"#!/api/Ext-method-bind\" rel=\"Ext-method-bind\" class=\"docClass\">Ext.bind</a>是<a href=\"#!/api/Ext.Function-method-bind\" rel=\"Ext.Function-method-bind\" class=\"docClass\">Ext.Function.bind</a>的别名</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>需要被代理的原始函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选) 该函数执行的作用域(<code>this</code>引用)。\n<strong>如果省略，默认指向默认的全局环境对象(通常是window)。</strong></p>\n\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>(可选) 覆盖原函数的参数列表（默认为该函数的参数列表）。</p>\n\n</div></li><li><span class='pre'>appendArgs</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>(可选) 如果该参数为true，将参数加载到该函数的后面，\n如果该参数为数字类型，则将参数将插入到所指定的位置。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'><p>新产生的函数</p>\n\n</div></li></ul></div></div></div><div id='method-callback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-callback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-callback' class='name expandable'>callback</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> delay]</span> )</div><div class='description'><div class='short'>在一个指定的作用域内执行一个回调函数。如果没有传递函数则调用将被忽略。 ...</div><div class='long'><p>在一个指定的作用域内执行一个回调函数。如果没有传递函数则调用将被忽略。</p>\n\n<p>例如，这些行是等效的:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-callback\" rel=\"Ext-method-callback\" class=\"docClass\">Ext.callback</a>(myFunc, this, [arg1, arg2]);\n<a href=\"#!/api/Ext-method-isFunction\" rel=\"Ext-method-isFunction\" class=\"docClass\">Ext.isFunction</a>(myFunc) &amp;&amp; myFunc.apply(this, [arg1, arg2]);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要执行的回调函数</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>执行的回调函数的作用域</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> (optional)<div class='sub-desc'><p>要传递给函数的参数</p>\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>传递一个数字作为延迟调用的毫秒数。</p>\n</div></li></ul></div></div></div><div id='method-clean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-clean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-clean' class='name expandable'>clean</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> array</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.clean 的旧别名\n\n过滤掉数组里的空值，空值的定义见 Ext.isEmpty\n\n参见 Ext.Array.filter ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-clean\" rel=\"Ext.Array-method-clean\" class=\"docClass\">Ext.Array.clean</a> 的旧别名</p>\n\n<p>过滤掉数组里的空值，空值的定义见 <a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">Ext.isEmpty</a></p>\n\n<p>参见 <a href=\"#!/api/Ext.Array-method-filter\" rel=\"Ext.Array-method-filter\" class=\"docClass\">Ext.Array.filter</a></p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-clean\" rel=\"Ext.Array-method-clean\" class=\"docClass\">Ext.Array.clean</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>结果</p>\n\n</div></li></ul></div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-clone' class='name expandable'>clone</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> item</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>克隆简单变量包括数组，{}-像没有保持旧引用的对象、DOM节点和日期。 ...</div><div class='long'><p>克隆简单变量包括数组，{}-像没有保持旧引用的对象、DOM节点和日期。\n如果它不是对象的直接后裔，返回对象本身的引用。\n关于模型克隆，参见Model.copy。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The variable to clone</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>clone</p>\n</div></li></ul></div></div></div><div id='method-copyTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-copyTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-copyTo' class='name expandable'>copyTo</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> dest, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> source, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] names, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> usePrototypeKeys]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>复制源对象身上指定的属性到目标对象。 ...</div><div class='long'><p>复制源对象身上指定的属性到目标对象。</p>\n\n<p>示例:</p>\n\n<pre><code>ImageComponent = <a href=\"#!/api/Ext-method-extend\" rel=\"Ext-method-extend\" class=\"docClass\">Ext.extend</a>(<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>, {\n    initComponent: function() {\n        this.autoEl = { tag: 'img' };\n        MyComponent.superclass.initComponent.apply(this, arguments);\n        this.initialBox = <a href=\"#!/api/Ext-method-copyTo\" rel=\"Ext-method-copyTo\" class=\"docClass\">Ext.copyTo</a>({}, this.initialConfig, 'x,y,width,height');\n    }\n});\n</code></pre>\n\n<p>重要说明: 要借用类的原型方法，使用<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base.borrow</a>来代替。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dest</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>目标对象。</p>\n</div></li><li><span class='pre'>source</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>源对象。</p>\n</div></li><li><span class='pre'>names</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>一个属性列表的数组，\n或以逗号分隔的属性名列表字符串以用来复制。</p>\n</div></li><li><span class='pre'>usePrototypeKeys</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>默认为false。\n传递true则通过原型的键和实例来复制。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>所修改的对象。</p>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-create' class='name expandable'>create</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> name], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... args]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>实例化类要么全名，别名或备用名。 ...</div><div class='long'><p>实例化类要么全名，别名或备用名。</p>\n\n<p>如果<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>的<a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">enabled</a> 类还没有被定义，\n它会尝试通过同步加载类。</p>\n\n<p>例如，所有以下三行内容返回相同的结果：</p>\n\n<pre><code> // alias 别名\n var window = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('widget.window', {\n     width: 600,\n     height: 800,\n     ...\n });\n\n // alternate name 备用名\n var window = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.Window</a>', {\n     width: 600,\n     height: 800,\n     ...\n });\n\n // full class name 完整的类名\n var window = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {\n     width: 600,\n     height: 800,\n     ...\n });\n\n //单个对象与xclass属性:\n var window = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xclass: '<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', // 任何有效的'name' (以上)\n     width: 600,\n     height: 800,\n     ...\n });\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>类名或别名。如果只有一个对象参数被指定，可以指定为<code>xclass</code>属性。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... (optional)<div class='sub-desc'><p>其他参数的名称后，将被传递给类的构造函数。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>instance 实例</p>\n</div></li></ul></div></div></div><div id='method-createByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-createByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-createByAlias' class='name expandable'>createByAlias</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>便于速记，参见 Ext.ClassManager.instantiateByAlias 创建别名 ...</div><div class='long'><p>便于速记，参见 <a href=\"#!/api/Ext.ClassManager-method-instantiateByAlias\" rel=\"Ext.ClassManager-method-instantiateByAlias\" class=\"docClass\">Ext.ClassManager.instantiateByAlias</a> 创建别名</p>\n</div></div></div><div id='method-createWidget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-createWidget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-createWidget' class='name expandable'>createWidget</a>( <span class='pre'></span> )<strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>widget旧名称. ...</div><div class='long'><p><a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">widget</a>旧名称. 创建微件</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>使用 <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">widget</a> 代替.</p>\n\n        </div>\n</div></div></div><div id='method-decode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/JSON.html#Ext-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-decode' class='name expandable'>decode</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> json, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> safe</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Ext.JSON.decode的简写形式\n\n解码（解析）JSON字符串对象。如果JSON是无效的，这个函数抛出一个SyntaxError，除非设置了安全选项。 ...</div><div class='long'><p><a href=\"#!/api/Ext.JSON-method-decode\" rel=\"Ext.JSON-method-decode\" class=\"docClass\">Ext.JSON.decode</a>的简写形式</p>\n\n<p>解码（解析）JSON字符串对象。如果JSON是无效的，这个函数抛出一个SyntaxError，除非设置了安全选项。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>json</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>JSON 字符串</p>\n\n</div></li><li><span class='pre'>safe</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>（可选） 如果JSON是无效的，是否返回null或抛出一个异常。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>由此生成的对象</p>\n\n</div></li></ul></div></div></div><div id='method-defer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Function2.html#Ext-method-defer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-defer' class='name expandable'>defer</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> millis, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> appendArgs</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>延迟调用该函数。你可以加入一个作用域的参数，例如:\n\nvar sayHi = function(name){\n    alert('Hi, ' + name);\n}\n\n// 即刻执行的:\nsayHi('Fred');\n\n// 两秒过后...</div><div class='long'><p>延迟调用该函数。你可以加入一个作用域的参数，例如:</p>\n\n<pre><code>var sayHi = function(name){\n    alert('Hi, ' + name);\n}\n\n// 即刻执行的:\nsayHi('Fred');\n\n// 两秒过后执行的:\n<a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" class=\"docClass\">Ext.Function.defer</a>(sayHi, 2000, this, ['Fred']);\n\n// 有时候加上一个匿名\n// 函数也是很方便的:\n<a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" class=\"docClass\">Ext.Function.defer</a>(function(){\n    alert('Anonymous');\n}, 100);\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-defer\" rel=\"Ext-method-defer\" class=\"docClass\">Ext.defer</a>是<a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" class=\"docClass\">Ext.Function.defer</a>的别名</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要延迟执行的函数。</p>\n\n</div></li><li><span class='pre'>millis</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>延迟时间，以毫秒为单位\n(如果小于或等于 0 函数则立即执行)</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选) 该函数执行的作用域(<code>this</code>引用)。\n<strong>如果省略，默认指向window。</strong></p>\n\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>(可选) 覆盖原函数的参数列表 (默认为该函数的参数列表)</p>\n\n</div></li><li><span class='pre'>appendArgs</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>(可选) 如果该参数为true，将参数加载到该函数的后面，\n如果该参数为数字类型，则将参数将插入到所指定的位置。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>可被clearTimeout所使用的timeout id</p>\n\n</div></li></ul></div></div></div><div id='method-define' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-define' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-define' class='name expandable'>define</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> className, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> data, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> createdFn</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></div><div class='description'><div class='short'>定义一个类或覆盖。基本的类定义是这样的：\n\n Ext.define('My.awesome.Class', {\n     someProperty: 'something',\n\n     someMethod: function() ...</div><div class='long'><p>定义一个类或覆盖。基本的类定义是这样的：</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n     someProperty: 'something',\n\n     someMethod: function() {\n         alert(s + this.someProperty);\n     }\n\n     ...\n });\n\n var obj = new My.awesome.Class();\n\n obj.someMethod('Say '); // alerts 'Say something'\n</code></pre>\n\n<p>定义了覆盖，包括<code>override</code> 属性。\n汇集处理指定的类，以扩展或修改该类内容的覆盖。\n这可能是简单的设置默认的属性值，或者是它可以扩展和/或更换的方法。\n这也可以扩展静态变量之类的。</p>\n\n<p>重写的用途之一是管理大类里面的片段。</p>\n\n<pre><code> // File: /src/app/Panel.js\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.app.Panel', {\n     extend: '<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>',\n     requires: [\n         'My.app.PanelPart2',\n         'My.app.PanelPart3'\n     ]\n\n     constructor: function (config) {\n         this.callParent(arguments); // 调用Ext.panel.Panel的构造\n         //...\n     },\n\n     statics: {\n         method: function () {\n             return 'abc';\n         }\n     }\n });\n\n // File: /src/app/PanelPart2.js\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.app.PanelPart2', {\n     override: 'My.app.Panel',\n\n     constructor: function (config) {\n         this.callParent(arguments); // 调用 My.app.Panel's 的构造\n         //...\n     }\n });\n</code></pre>\n\n<p>重写的另一个用途是提供独立的可选部分类。\n在这种情况下，甚至可能会完全不知道该重写类。</p>\n\n<pre><code> //很酷的提示\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.ux.CoolTip', {\n     override: '<a href=\"#!/api/Ext.tip.ToolTip\" rel=\"Ext.tip.ToolTip\" class=\"docClass\">Ext.tip.ToolTip</a>',\n\n     constructor: function (config) {\n         this.callParent(arguments); // 调用Ext.tip.ToolTip的构造\n         //...\n     }\n });\n</code></pre>\n\n<p>上述重写现在必须为正常。</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.app.App', {\n     requires: [\n         'My.ux.CoolTip'\n     ]\n });\n</code></pre>\n\n<p>重写还可以包含静态：</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.app.BarMod', {\n     override: 'Ext.foo.Bar',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x * 2]); // 调用 Ext.foo.Bar.method\n         }\n     }\n });\n</code></pre>\n\n<p>重要: 如果它在构建重写，只包括需要的类。\n否则，强制执行，如目标类不包括在内。 限定</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>类名创建点命名空间的字符串格式，例如：\n'My.very.awesome.Class', 'FeedViewer.plugin.CoolPager'\n我们强烈建议遵循这个简单的约定：\n - 根和类的名称是'CamelCased' 骆驼拼写法\n - 其他一切用小写</p>\n</div></li><li><span class='pre'>data</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>键 - 值对\n性能适用于这一类。属性名称可以是任何有效的字符串中，除了那些在保留下面列出：\n - <code>mixins</code> 混入\n - <code>statics</code> 静态\n - <code>config</code> 配置\n - <code>alias</code> 别名\n - <code>self</code> 自身\n - <code>singleton</code> 单例\n - <code>alternateClassName</code> 替代类名\n - <code>override</code> 重写</p>\n</div></li><li><span class='pre'>createdFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>可选的回调后执行的类的创建，执行范围(<code>this</code>)将创建新的类本身。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-destroy' class='name expandable'>destroy</a>( <span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>[]/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]... args</span> )</div><div class='description'><div class='short'>通过如下方法，尝试摧毁任何传递进来的对象：删除所有的事件监听器、将他们从DOM树中删除(如果可以)、\n调用他们的destory方法(如果可以)。这个方法主要是为\nExt.Element和Ext.Component设计的，但是\nExt....</div><div class='long'><p>通过如下方法，尝试摧毁任何传递进来的对象：删除所有的事件监听器、将他们从DOM树中删除(如果可以)、\n调用他们的destory方法(如果可以)。这个方法主要是为\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>和<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>设计的，但是\n<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>任何子类都可以传进来。\n任何数量的elements 和/或 components 都可以作为独立的参数传递进来，支持传入多参。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>[]/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]...<div class='sub-desc'><p>要销毁的<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>，<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>，或者其中参数的一个数组</p>\n</div></li></ul></div></div></div><div id='method-destroyMembers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-destroyMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-destroyMembers' class='name expandable'>destroyMembers</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> o, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... args</span> )</div><div class='description'><div class='short'>试图销毁，然后删除传递对象的属性列表。 ...</div><div class='long'><p>试图销毁，然后删除传递对象的属性列表。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>想要销毁的对象(通常是Component类型的对象)。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>一个或多个试图销毁和删除的对象的属性名称。</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-each' class='name expandable'>each</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> iterable, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> reverse]</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>迭代一个数组或是可迭代的值，在每个元素上调用给定的回调函数\n\nvar countries = ['Vietnam', 'Singapore', 'United States', 'Russia'];\n\nExt.Array.each(c...</div><div class='long'><p>迭代一个数组或是可迭代的值，在每个元素上调用给定的回调函数</p>\n\n<pre><code>var countries = ['Vietnam', 'Singapore', 'United States', 'Russia'];\n\n<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(countries, function(name, index, countriesItSelf) {\n    console.log(name);\n});\n\nvar sum = function() {\n    var sum = 0;\n\n    <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(arguments, function(value) {\n        sum += value;\n    });\n\n    return sum;\n};\n\nsum(1, 2, 3); // 返回 6\n</code></pre>\n\n<p>在回调函数中返回false，即可停止迭代过程。</p>\n\n<pre><code><a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(countries, function(name, index, countriesItSelf) {\n    if (name === 'Singapore') {\n        return false; // 此处中止\n    }\n});\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-each\" rel=\"Ext-method-each\" class=\"docClass\">Ext.each</a> 是 <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a> 的别名</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iterable</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>将要迭代的值。\n如果这个参数不可迭代，回调函数将只调用一次。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>回调函数. 如果返回false, 迭代将停止，\n方法返回当前的索引.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>数组当前的索引中的元素</p>\n\n</div></li><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>数组当前的索引</p>\n\n</div></li><li><span class='pre'>allItems</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>作为方法第一个参数的数组本身</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>返回false来停止迭代</p>\n\n</div></li></ul></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>指定函数执行的(<code>this</code> 引用)作用域</p>\n\n</div></li><li><span class='pre'>reverse</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>反转迭代的顺序（从尾到头循环）\n默认为false</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>参见 <code>fn</code> 参数的描述.</p>\n\n</div></li></ul></div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/JSON.html#Ext-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-encode' class='name expandable'>encode</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> o</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>Ext.JSON.encode的简写形式\n\n编码对象、 数组或其他值。 ...</div><div class='long'><p><a href=\"#!/api/Ext.JSON-method-encode\" rel=\"Ext.JSON-method-encode\" class=\"docClass\">Ext.JSON.encode</a>的简写形式</p>\n\n<p>编码对象、 数组或其他值。</p>\n\n<p>如果环境中的原生JSON编码没有被使用 (<a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" class=\"docClass\">USE_NATIVE_JSON</a> 没有设置，或环境不支持)，\n那么将使用ExtJS的编码。这里允许开发人员在需要序列化的类中添加 <code>toJSON</code> 方法，\n返回有效的 JSON 表示形式的对象。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要进行编码的变量</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>JSON 字符串</p>\n\n</div></li></ul></div></div></div><div id='method-escapeRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-escapeRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-escapeRe' class='name expandable'>escapeRe</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> str</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>避免传递的字符串参数被正则表达式读取。 ...</div><div class='long'><p>避免传递的字符串参数被正则表达式读取。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>采用 <a href=\"#!/api/Ext.String-method-escapeRegex\" rel=\"Ext.String-method-escapeRegex\" class=\"docClass\">Ext.String.escapeRegex</a> 来代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-exclude' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-exclude' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-exclude' class='name expandable'>exclude</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>实用的快捷方式 Ext.Loader.exclude 排除 ...</div><div class='long'><p>实用的快捷方式 <a href=\"#!/api/Ext.Loader-method-exclude\" rel=\"Ext.Loader-method-exclude\" class=\"docClass\">Ext.Loader.exclude</a> 排除</p>\n</div></div></div><div id='method-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-extend' class='name expandable'>extend</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> superclass, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> overrides</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>此方法已过时。采用Ext.define来代替。 ...</div><div class='long'><p>此方法已过时。采用<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>来代替。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>采用<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>来代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>superclass</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'>\n</div></li><li><span class='pre'>overrides</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'><p>从<tt>覆盖</tt>参数，或以默认的属性生成一个子类构造函数。</p>\n</div></li></ul></div></div></div><div id='method-flatten' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-flatten' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-flatten' class='name expandable'>flatten</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> array</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.flatten 的旧别名\n\n递归将数组和数组中的元素转换为1维数组。 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-flatten\" rel=\"Ext.Array-method-flatten\" class=\"docClass\">Ext.Array.flatten</a> 的旧别名</p>\n\n<p>递归将数组和数组中的元素转换为1维数组。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-flatten\" rel=\"Ext.Array-method-flatten\" class=\"docClass\">Ext.Array.flatten</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>数组</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>一维数组</p>\n\n</div></li></ul></div></div></div><div id='method-fly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/AbstractElement.html#Ext-method-fly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-fly' class='name expandable'>fly</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement dom, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> named]</span> ) : <a href=\"#!/api/Ext.dom.AbstractElement.Fly\" rel=\"Ext.dom.AbstractElement.Fly\" class=\"docClass\">Ext.dom.AbstractElement.Fly</a></div><div class='description'><div class='short'>获取单例 flyweight 元素，与传递作为活动元素的节点。 ...</div><div class='long'><p>获取单例 <a href=\"#!/api/Ext.dom.AbstractElement.Fly\" rel=\"Ext.dom.AbstractElement.Fly\" class=\"docClass\">flyweight</a> 元素，与传递作为活动元素的节点。</p>\n\n<p>因为它是一个单例，Flyweight未含有ID，并且必须使用和丢弃在单行中。\n你不可能保持和使用在多行上对这个单例的引用，因为您调用的方法可能会用到\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">fly</a>，并且可能会更改该实例所指的DOM元素。</p>\n\n<p><a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">fly</a>是<a href=\"#!/api/Ext.dom.AbstractElement-static-method-fly\" rel=\"Ext.dom.AbstractElement-static-method-fly\" class=\"docClass\">Ext.dom.AbstractElement.fly</a>的别名。</p>\n\n<p>使用一次性引用的DOM元素不会由应用程序代码，或由Ext的类再次访问。\n如果访问将定期处理的元素，则<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a> 将会更合适利用由Ext.dom.Element类提供的缓存。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dom</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement<div class='sub-desc'><p>dom节点或id</p>\n\n</div></li><li><span class='pre'>named</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>允许可重用flyweights命名的创建防止产生冲突\n(例如在内部Ext使用\"_global\")</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.AbstractElement.Fly\" rel=\"Ext.dom.AbstractElement.Fly\" class=\"docClass\">Ext.dom.AbstractElement.Fly</a></span><div class='sub-desc'><p>单例flyweight对象(或null，如果没有发现匹配的元素)</p>\n\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/AbstractElement.html#Ext-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-get' class='name expandable'>get</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> el</span> ) : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></div><div class='description'><div class='short'>检索Ext.dom.Element对象。get是Ext.dom.Element.get的别名。 ...</div><div class='long'><p>检索Ext.dom.Element对象。<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">get</a>是<a href=\"#!/api/Ext.dom.Element-static-method-get\" rel=\"Ext.dom.Element-static-method-get\" class=\"docClass\">Ext.dom.Element.get</a>的别名。</p>\n\n<p><strong>此方法不会检索<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a>s.</strong>此方法检索封装DOM元素的Ext.dom.Element\n对象。若要检索组件按其ID，请使用<a href=\"#!/api/Ext.ComponentManager-method-get\" rel=\"Ext.ComponentManager-method-get\" class=\"docClass\">Ext.ComponentManager.get</a>。</p>\n\n<p>使用简单的缓存来始终返回相同的对象。\n自动修复如果一个对象通过AJAX或DOM被重新创建具有相同id。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>节点的id，一个DOM节点或现有元素。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></span><div class='sub-desc'><p>Element对象(或null，如果没有发现匹配的元素)</p>\n\n</div></li></ul></div></div></div><div id='method-getBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getBody' class='name expandable'>getBody</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>将当前document的body对象当作Ext.Element返回。 ...</div><div class='long'><p>将当前document的body对象当作<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>返回。</p>\n</div></div></div><div id='method-getClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getClass' class='name expandable'>getClass</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>便于简写, see Ext.ClassManager.getClass ...</div><div class='long'><p>便于简写, see <a href=\"#!/api/Ext.ClassManager-method-getClass\" rel=\"Ext.ClassManager-method-getClass\" class=\"docClass\">Ext.ClassManager.getClass</a></p>\n</div></div></div><div id='method-getClassName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-getClassName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getClassName' class='name expandable'>getClassName</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>便于简写, 参见 Ext.ClassManager.getName 类名 ...</div><div class='long'><p>便于简写, 参见 <a href=\"#!/api/Ext.ClassManager-method-getName\" rel=\"Ext.ClassManager-method-getName\" class=\"docClass\">Ext.ClassManager.getName</a> 类名</p>\n</div></div></div><div id='method-getCmp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getCmp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getCmp' class='name expandable'>getCmp</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> id</span> )</div><div class='description'><div class='short'>Ext.ComponentManager.get方法的简写。 ...</div><div class='long'><p><a href=\"#!/api/Ext.ComponentManager-method-get\" rel=\"Ext.ComponentManager-method-get\" class=\"docClass\">Ext.ComponentManager.get</a>方法的简写。\n通过<a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a>查找现有的<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>该组件<a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a></p>\n</div></li></ul></div></div></div><div id='method-getDoc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getDoc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getDoc' class='name expandable'>getDoc</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>将当前的HTML的document对象作为Ext.Element返回。 ...</div><div class='long'><p>将当前的HTML的document对象作为<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>返回。</p>\n</div></div></div><div id='method-getDom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getDom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getDom' class='name expandable'>getDom</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> el</span> )</div><div class='description'><div class='short'>返回dom对象，参数可以是string(id)，dom节点，或Ext.Element。 ...</div><div class='long'><p>返回dom对象，参数可以是string(id)，dom节点，或Ext.Element。\n可选的 'strict' 标志需要IE浏览器，\n因为他可以通过使用getElementById返回'name'和'id'元素。</p>\n\n<p>下面是一些例子:</p>\n\n<pre><code>// 获取基于 id 的 dom 节点\nvar elDom = <a href=\"#!/api/Ext-method-getDom\" rel=\"Ext-method-getDom\" class=\"docClass\">Ext.getDom</a>('elId');\n// 获取基于 dom 节点的 dom 节点\nvar elDom1 = <a href=\"#!/api/Ext-method-getDom\" rel=\"Ext-method-getDom\" class=\"docClass\">Ext.getDom</a>(elDom);\n\n// 如果我们不知道是否正在运行使用一个 <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>\n// 或者采用Ext.getDom获得的一个 dom 节点 \nfunction(el){\n    var dom = <a href=\"#!/api/Ext-method-getDom\" rel=\"Ext-method-getDom\" class=\"docClass\">Ext.getDom</a>(el);\n    // DOM节点做一些事情\n}\n</code></pre>\n\n<p><strong>注意:</strong> 实际要找的 dom 节点需要存在(被渲染等)，\n调用此方法时才能成功。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getHead' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getHead' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getHead' class='name expandable'>getHead</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>将当前document的head对象当作Ext.Element返回。 ...</div><div class='long'><p>将当前document的head对象当作<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>返回。</p>\n</div></div></div><div id='method-getOrientation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getOrientation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getOrientation' class='name expandable'>getOrientation</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>返回该移动设备的当前方向 ...</div><div class='long'><p>返回该移动设备的当前方向</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>'portrait' 或者 'landscape'</p>\n</div></li></ul></div></div></div><div id='method-getScrollBarWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getScrollBarWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getScrollBarWidth' class='name expandable'>getScrollBarWidth</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> force]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>获取浏览器的垂直滚动条的宽度的实用程序方法。 ...</div><div class='long'><p>获取浏览器的垂直滚动条的宽度的实用程序方法。\n这取决于操作系统设置的不同，如主题或字体大小。</p>\n\n<p>此方法不赞成使用，赞成使用<a href=\"#!/api/Ext-method-getScrollbarSize\" rel=\"Ext-method-getScrollbarSize\" class=\"docClass\">getScrollbarSize</a>。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>force</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true则强制重新计算值。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>垂直滚动条的宽度。</p>\n</div></li></ul></div></div></div><div id='method-getScrollbarSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-getScrollbarSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getScrollbarSize' class='name expandable'>getScrollbarSize</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> force]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>返回浏览器滚动条的大小。 ...</div><div class='long'><p>返回浏览器滚动条的大小。\n这取决于操作系统设置的不同，如主题或字体大小。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>force</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true则强制重新计算值。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>包含滚动条大小的对象。</p>\n</div></li></ul></div></div></div><div id='method-getStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/StoreManager.html#Ext-method-getStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getStore' class='name expandable'>getStore</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> store</span> ) : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></div><div class='description'><div class='short'>到Ext.data.StoreManager.lookup方法的快捷方式。 ...</div><div class='long'><p>到<a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.data.StoreManager.lookup</a>方法的快捷方式。</p>\n\n<p>通过id来获取一个注册的Store</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>Store的id，或是一个Store实例，或是一个store的配置对象</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUniqueGlobalNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-getUniqueGlobalNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getUniqueGlobalNamespace' class='name expandable'>getUniqueGlobalNamespace</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>在全局范围中，有用的沙盒中生成唯一Ext的引用 ...</div><div class='long'><p>在全局范围中，有用的沙盒中生成唯一Ext的引用</p>\n</div></div></div><div id='method-htmlDecode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/String2.html#Ext-method-htmlDecode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-htmlDecode' class='name expandable'>htmlDecode</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.String.htmlDecode的曾用别名\n\n将 (&amp;, &lt;, >, ', 和 \") 字符从HTML显示的格式还原。 ...</div><div class='long'><p><a href=\"#!/api/Ext.String-method-htmlDecode\" rel=\"Ext.String-method-htmlDecode\" class=\"docClass\">Ext.String.htmlDecode</a>的曾用别名</p>\n\n<p>将 (&amp;, &lt;, >, ', 和 \") 字符从HTML显示的格式还原。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>使用<a href=\"#!/api/Ext.String-method-htmlDecode\" rel=\"Ext.String-method-htmlDecode\" class=\"docClass\">Ext.String.htmlDecode</a>代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要解码的字符串</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>解码后的文本</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-htmlEncode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/String2.html#Ext-method-htmlEncode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-htmlEncode' class='name expandable'>htmlEncode</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.String.htmlEncode的曾用别名\n\n转义 (&amp;, &lt;, >, ', 和 \") 为能在HTML中显示的字符。 ...</div><div class='long'><p><a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" class=\"docClass\">Ext.String.htmlEncode</a>的曾用别名</p>\n\n<p>转义 (&amp;, &lt;, >, ', 和 \") 为能在HTML中显示的字符。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>使用<a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" class=\"docClass\">Ext.String.htmlEncode</a>代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要编码的字符串</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>编码后的文本</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-id' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-id' class='name expandable'>id</a>( <span class='pre'>[HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> el], <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> prefix</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>对页面元素生成唯一id，如果该元素已存在id，则不会再生成。 ...</div><div class='long'><p>对页面元素生成唯一id，如果该元素已存在id，则不会再生成。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> (optional)<div class='sub-desc'><p>将要生成id的元素</p>\n</div></li><li><span class='pre'>prefix</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>(可选) id的前缀(默认为 \"ext-gen\")</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>生成的Id。</p>\n</div></li></ul></div></div></div><div id='method-invoke' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-invoke' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-invoke' class='name expandable'>invoke</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList arr, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> methodName, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... args</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>对数组中的每一项调用一个方法。 ...</div><div class='long'><p>对数组中的每一项调用一个方法。</p>\n\n<p>示例:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-invoke\" rel=\"Ext-method-invoke\" class=\"docClass\">Ext.invoke</a>(<a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">Ext.query</a>(\"p\"), \"getAttribute\", \"id\");\n// [el1.getAttribute(\"id\"), el2.getAttribute(\"id\"), ..., elN.getAttribute(\"id\")]\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>将在下一个主要版本中移除</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arr</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList<div class='sub-desc'><p>列表的数组，以调用此方法。</p>\n</div></li><li><span class='pre'>methodName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要调用的方法名称。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...<div class='sub-desc'><p>要发送到方法中调用的参数。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>对数组中的每一项调用此方法的结果。</p>\n</div></li></ul></div></div></div><div id='method-isArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isArray' class='name expandable'>isArray</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> target</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递进来的是一个JavaScript的array对象，返回true，否则返回false。 ...</div><div class='long'><p>如果传递进来的是一个JavaScript的array对象，返回true，否则返回false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isBoolean' class='name expandable'>isBoolean</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是一个布尔值，则返回 true。 ...</div><div class='long'><p>如果传递的值是一个布尔值，则返回 true。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isDate' class='name expandable'>isDate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> object</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递进来的是一个JavaScript的date对象，返回true，否则返回false。 ...</div><div class='long'><p>如果传递进来的是一个JavaScript的date对象，返回true，否则返回false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isDefined' class='name expandable'>isDefined</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值已定义，则返回 true。 ...</div><div class='long'><p>如果传递的值已定义，则返回 true。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isElement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isElement' class='name expandable'>isElement</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是 HTMLElement，则返回 true ...</div><div class='long'><p>如果传递的值是 HTMLElement，则返回 true</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> allowEmptyString</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值为空，则返回 true，否则返回 false。该值被认为是空的如果他或是其一:\n\n\nnull\nundefined\na zero-length array\na zero-length string (除非 allowEmpt...</div><div class='long'><p>如果传递的值为空，则返回 true，否则返回 false。该值被认为是空的如果他或是其一:</p>\n\n<ul>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li>a zero-length array</li>\n<li>a zero-length string (除非 <code>allowEmptyString</code> 参数设置为 <code>true</code>)</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的值</p>\n</div></li><li><span class='pre'>allowEmptyString</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>(可选) 如果为 true，允许空字符串(默认为false)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isFunction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isFunction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isFunction' class='name expandable'>isFunction</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递进来的是一个JavaScript的Function，返回true，否则返回false。 ...</div><div class='long'><p>如果传递进来的是一个JavaScript的Function，返回true，否则返回false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isIterable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isIterable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isIterable' class='name expandable'>isIterable</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是可迭代，则返回 true，否则返回false ...</div><div class='long'><p>如果传递的值是可迭代，则返回 true，否则返回false</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isNumber' class='name expandable'>isNumber</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是一个数字，则返回 true。对于非限定数字返回 false。 ...</div><div class='long'><p>如果传递的值是一个数字，则返回 true。对于非限定数字返回 false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isNumeric' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isNumeric' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isNumeric' class='name expandable'>isNumeric</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>验证一个值是数值。 ...</div><div class='long'><p>验证一个值是数值。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>示例: 1, '1', '2.34'</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果为数值，则返回 true，否则返回 false</p>\n</div></li></ul></div></div></div><div id='method-isObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isObject' class='name expandable'>isObject</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递进来的是一个JavaScript的Object对象，返回true，否则返回false。 ...</div><div class='long'><p>如果传递进来的是一个JavaScript的Object对象，返回true，否则返回false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isPrimitive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isPrimitive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isPrimitive' class='name expandable'>isPrimitive</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递进来的是一个\"原生的\"JavaScript字符串、数字或布尔值，返回true，否则返回false。 ...</div><div class='long'><p>如果传递进来的是一个\"原生的\"JavaScript字符串、数字或布尔值，返回true，否则返回false。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isSimpleObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isSimpleObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isSimpleObject' class='name expandable'>isSimpleObject</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isString' class='name expandable'>isString</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是一个字符串，则返回 true。 ...</div><div class='long'><p>如果传递的值是一个字符串，则返回 true。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isTextNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isTextNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isTextNode' class='name expandable'>isTextNode</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果传递的值是一个TextNode，则返回 true ...</div><div class='long'><p>如果传递的值是一个TextNode，则返回 true</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-iterate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-iterate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-iterate' class='name expandable'>iterate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> object, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )</div><div class='description'><div class='short'>迭代一个数组或一个对象。如果给定的值可迭代他的方法将委派给\nExt.Array.each，否则为Ext.Object.each。 ...</div><div class='long'><p>迭代一个数组或一个对象。如果给定的值可迭代他的方法将委派给\n<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>，否则为<a href=\"#!/api/Ext.Object-method-each\" rel=\"Ext.Object-method-each\" class=\"docClass\">Ext.Object.each</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>要迭代的对象或数组。</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要为每个迭代调用的函数。参见<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a> 和\n<a href=\"#!/api/Ext.Object-method-each\" rel=\"Ext.Object-method-each\" class=\"docClass\">Ext.Object.each</a>，根据给定的对象类型传递给此函数，\n将被用来迭代的参数的详细列表。</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>指定的函数执行的作用域(<code>this</code>引用)。\n默认值为本身进行迭代的对象。</p>\n</div></li></ul></div></div></div><div id='method-log' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-log' class='name expandable'>log</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> message</span> )</div><div class='description'><div class='short'>记录一条消息。如果存在一个控制台，则它将使用。在 Opera 中，\n调用 \"opera.postError\" 方法。在其他情况下，消息记录到一个数组\"Ext.log.out\"中。 ...</div><div class='long'><p>记录一条消息。如果存在一个控制台，则它将使用。在 Opera 中，\n调用 \"opera.postError\" 方法。在其他情况下，消息记录到一个数组\"Ext.log.out\"中。\n附加的调试器可以观看此数组和查看日志。\n日志缓冲区限制了\"Ext.log.max\"最大记录数(默认为 250)。\n<code>Ext.log.out</code> 数组也可以通过在 URL 栏 (一个 \"bookmarklet\")\n中输入以下内容并被写入到一个弹出窗口:</p>\n\n<p>   javascript:void(Ext.log.show());</p>\n\n<p>如果传递额外的参数，则它们都加入并附加到消息中。\n这是一个用于跟踪进入和退出一个函数的技术:</p>\n\n<pre><code> function foo () {\n     <a href=\"#!/api/Ext-method-log\" rel=\"Ext-method-log\" class=\"docClass\">Ext.log</a>({ indent: 1 }, '&gt;&gt; foo');\n\n     // 日志语句在这里或从这里调用方法将缩进\n     // 一步\n\n     <a href=\"#!/api/Ext-method-log\" rel=\"Ext-method-log\" class=\"docClass\">Ext.log</a>({ outdent: 1 }, '&lt;&lt; foo');\n }\n</code></pre>\n\n<p>此方法没有在发布版本中。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要记录的消息，\n或者具有下列属性的选项对象:</p>\n\n<ul>\n<li><code>msg</code>: 要记录的消息 (必选)。</li>\n<li><code>level</code>: 其中之一: \"error\"，\"warn\"，\"info\" 或 \"log\" (默认为\"log\")。</li>\n<li><code>dump</code>: 一个对象作为消息的一部分转储到日志。</li>\n<li><code>stack</code>: 设置为 true，则在日志中包括堆栈跟踪。</li>\n<li><code>indent</code>: 导致后续日志语句能够缩进一步。</li>\n<li><code>outdent</code>: 导致这个及以下语句一步也不缩进。</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='method-max' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-max' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-max' class='name expandable'>max</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList array, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> comparisonFn]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.max 的旧别名\n\n返回数组中的最大值 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-max\" rel=\"Ext.Array-method-max\" class=\"docClass\">Ext.Array.max</a> 的旧别名</p>\n\n<p>返回数组中的最大值</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-max\" rel=\"Ext.Array-method-max\" class=\"docClass\">Ext.Array.max</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList<div class='sub-desc'><p>数组</p>\n\n</div></li><li><span class='pre'>comparisonFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>比较函数\n如果被忽略，则使用 \">\" 操作符。 注意: gt = 1; eq = 0; lt = -1</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>maxValue 最大值</p>\n\n</div></li></ul></div></div></div><div id='method-mean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-mean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-mean' class='name expandable'>mean</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> array</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.mean 的旧别名\n\n计算数组中元素的平均值 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-mean\" rel=\"Ext.Array-method-mean\" class=\"docClass\">Ext.Array.mean</a> 的旧别名</p>\n\n<p>计算数组中元素的平均值</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-mean\" rel=\"Ext.Array-method-mean\" class=\"docClass\">Ext.Array.mean</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>数组</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>平均值</p>\n\n</div></li></ul></div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Object2.html#Ext-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-merge' class='name expandable'>merge</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> destination, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... object</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Ext.Object.merge方法的别名. ...</div><div class='long'><p><a href=\"#!/api/Ext.Object-method-merge\" rel=\"Ext.Object-method-merge\" class=\"docClass\">Ext.Object.merge</a>方法的别名.</p>\n\n<p>递归的合并任意数目的对象，但是不引用他们或他们的子对象。</p>\n\n<pre><code>var extjs = {\n    companyName: 'Ext JS',\n    products: ['Ext JS', 'Ext GWT', 'Ext Designer'],\n    isSuperCool: true,\n    office: {\n        size: 2000,\n        location: 'Palo Alto',\n        isFun: true\n    }\n};\n\nvar newStuff = {\n    companyName: 'Sencha Inc.',\n    products: ['Ext JS', 'Ext GWT', 'Ext Designer', 'Sencha Touch', 'Sencha Animator'],\n    office: {\n        size: 40000,\n        location: 'Redwood City'\n    }\n};\n\nvar sencha = <a href=\"#!/api/Ext.Object-method-merge\" rel=\"Ext.Object-method-merge\" class=\"docClass\">Ext.Object.merge</a>(extjs, newStuff);\n\n// 此时extjs和sencha等于\n{\n    companyName: 'Sencha Inc.',\n    products: ['Ext JS', 'Ext GWT', 'Ext Designer', 'Sencha Touch', 'Sencha Animator'],\n    isSuperCool: true,\n    office: {\n        size: 40000,\n        location: 'Redwood City',\n        isFun: true\n    }\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>destination</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>所有的对象子序列将被合并到此目标对象</p>\n\n</div></li><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...<div class='sub-desc'><p>将要被合并的任意数目对象</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>合并所有给定的对象到目标对象</p>\n\n</div></li></ul></div></div></div><div id='method-min' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-min' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-min' class='name expandable'>min</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList array, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> comparisonFn]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.min 的旧别名\n\n返回数组中的最小值 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-min\" rel=\"Ext.Array-method-min\" class=\"docClass\">Ext.Array.min</a> 的旧别名</p>\n\n<p>返回数组中的最小值</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-min\" rel=\"Ext.Array-method-min\" class=\"docClass\">Ext.Array.min</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList<div class='sub-desc'><p>数组</p>\n\n</div></li><li><span class='pre'>comparisonFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>比较函数\n如果被忽略，则使用 \"&lt;\" 操作符。 注意: gt = 1; eq = 0; lt = -1</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>minValue 最小值</p>\n\n</div></li></ul></div></div></div><div id='method-namespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-namespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-namespace' class='name expandable'>namespace</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... </span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>创建用于范围变量和类的命名空间，使它们不是全局性的。 ...</div><div class='long'><p>创建用于范围变量和类的命名空间，使它们不是全局性的。\n指定的最后一个节点的命名空间隐式创建的所有其他节点。用法：</p>\n\n<pre><code><a href=\"#!/api/Ext-method-namespace\" rel=\"Ext-method-namespace\" class=\"docClass\">Ext.namespace</a>('Company', 'Company.data');\n\n// 等价和优选上面的语法\n<a href=\"#!/api/Ext-method-ns\" rel=\"Ext-method-ns\" class=\"docClass\">Ext.ns</a>('Company.data');\n\nCompany.Widget = function() { ... };\n\nCompany.data.CustomStore = function(config) { ... }; 命名空间\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>命名空间</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>命名空间中的对象。\n(如果有多个参数被传递，这将是最后一个命名空间)</p>\n\n</div></li></ul></div></div></div><div id='method-ns' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-ns' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-ns' class='name expandable'>ns</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... </span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Ext.namespace 命名空间别名 构件 命名空间别名\n\n创建用于范围变量和类的命名空间，使它们不是全局性的。 ...</div><div class='long'><p><a href=\"#!/api/Ext-method-namespace\" rel=\"Ext-method-namespace\" class=\"docClass\">Ext.namespace</a> 命名空间别名 构件 命名空间别名</p>\n\n<p>创建用于范围变量和类的命名空间，使它们不是全局性的。\n指定的最后一个节点的命名空间隐式创建的所有其他节点。用法：</p>\n\n<pre><code><a href=\"#!/api/Ext-method-namespace\" rel=\"Ext-method-namespace\" class=\"docClass\">Ext.namespace</a>('Company', 'Company.data');\n\n// 等价和优选上面的语法\n<a href=\"#!/api/Ext-method-ns\" rel=\"Ext-method-ns\" class=\"docClass\">Ext.ns</a>('Company.data');\n\nCompany.Widget = function() { ... };\n\nCompany.data.CustomStore = function(config) { ... }; 命名空间\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>命名空间</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>命名空间中的对象。\n(如果有多个参数被传递，这将是最后一个命名空间)</p>\n\n</div></li></ul></div></div></div><div id='method-num' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Number2.html#Ext-method-num' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-num' class='name expandable'>num</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> defaultValue</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Validate that a value is numeric and convert it to a number if necessary. ...</div><div class='long'><p>Validate that a value is numeric and convert it to a number if necessary. Returns the specified default value if\nit is not.</p>\n\n<pre><code><a href=\"#!/api/Ext.Number-method-from\" rel=\"Ext.Number-method-from\" class=\"docClass\">Ext.Number.from</a>('1.23', 1); // returns 1.23\n<a href=\"#!/api/Ext.Number-method-from\" rel=\"Ext.Number-method-from\" class=\"docClass\">Ext.Number.from</a>('abc', 1); // returns 1\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>Please use <a href=\"#!/api/Ext.Number-method-from\" rel=\"Ext.Number-method-from\" class=\"docClass\">Ext.Number.from</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>defaultValue</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The value to return if the original value is non-numeric</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>value, if numeric, defaultValue otherwise</p>\n\n</div></li></ul></div></div></div><div id='method-onDocumentReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/EventManager.html#Ext-method-onDocumentReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-onDocumentReady' class='name expandable'>onDocumentReady</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Ext.EventManager.onDocumentReady的别名 ...</div><div class='long'><p><a href=\"#!/api/Ext.EventManager-method-onDocumentReady\" rel=\"Ext.EventManager-method-onDocumentReady\" class=\"docClass\">Ext.EventManager.onDocumentReady</a>的别名</p>\n</div></div></div><div id='method-onReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/EventManager.html#Ext-method-onReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-onReady' class='name expandable'>onReady</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>Ext.Loader.onReady的别名，withDomReady设置为 true ...</div><div class='long'><p><a href=\"#!/api/Ext.Loader-method-onReady\" rel=\"Ext.Loader-method-onReady\" class=\"docClass\">Ext.Loader.onReady</a>的别名，withDomReady设置为 true</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-override' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-override' class='name expandable'>override</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> target, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> overrides</span> )</div><div class='description'><div class='short'>用给定的值重写指定target的成员。 ...</div><div class='long'><p>用给定的值重写指定<code>target</code>的成员。</p>\n\n<p>如果<code>target</code>是一个类使用<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>声明，\n此类的<code>override</code>方法(参见 <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">Ext.Base.override</a>)\n在给定的<code>overrides</code>被调用。</p>\n\n<p>如果<code>target</code>是一个函数，它被假定为一个构造函数，\n并将<code>overrides</code>的内容应用于其<a href=\"#!/api/Ext-method-apply\" rel=\"Ext-method-apply\" class=\"docClass\">Ext.apply</a>的<code>prototype</code>的使用。</p>\n\n<p>如果 <code>target</code> 是类的一个实例声明并使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>，\n该 <code>overrides</code> 仅应用于那个实例。既然这样,\n方法是经过特殊处理的，以允许他们使用 <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">Ext.Base.callParent</a>。</p>\n\n<pre><code> var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.Panel</a>({ ... });\n\n <a href=\"#!/api/Ext-method-override\" rel=\"Ext-method-override\" class=\"docClass\">Ext.override</a>(panel, {\n     initComponent: function () {\n         // 额外的处理...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>如果 <code>target</code> 不是这些，<code>overrides</code> 应用于 <code>target</code>\n使用<a href=\"#!/api/Ext-method-apply\" rel=\"Ext-method-apply\" class=\"docClass\">Ext.apply</a>。</p>\n\n<p>请参阅 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> 和 <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">Ext.Base.override</a>\n进一步的详细信息。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要重写的target对象。</p>\n</div></li><li><span class='pre'>overrides</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>在<code>target</code>对象上要添加或替换属性。</p>\n</div></li></ul></div></div></div><div id='method-partition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-partition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-partition' class='name expandable'>partition</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList arr, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> truth</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>将一个集合划分成两个集合: 一个正确的集合和一个错误的集合。 ...</div><div class='long'><p>将一个集合划分成两个集合: 一个正确的集合和一个错误的集合。</p>\n\n<p>示例 1:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-partition\" rel=\"Ext-method-partition\" class=\"docClass\">Ext.partition</a>([true, false, true, true, false]);\n// returns [[true, true, true], [false, false]]\n</code></pre>\n\n<p>示例 2:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-partition\" rel=\"Ext-method-partition\" class=\"docClass\">Ext.partition</a>(\n    <a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">Ext.query</a>(\"p\"),\n    function(val){\n        return val.className == \"class1\"\n    }\n);\n// 含有\"class1\"类名的段落元素返回正确的集合,\n// 没有包含那个类名的则返回错误的集合。\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>将在下一个主要版本中移除</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arr</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList<div class='sub-desc'><p>要进行划分的数组</p>\n</div></li><li><span class='pre'>truth</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选) 用来确定正确集的一个函数。\n如果省略此元素，则本身必须能够评估其正确性。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>[正确集的数组, 错误集的数组]</p>\n</div></li></ul></div></div></div><div id='method-pass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Function2.html#Ext-method-pass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-pass' class='name expandable'>pass</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></div><div class='description'><div class='short'>从提供'fn'创建一个新的函数，其中的参数预先设置到 'args'。 ...</div><div class='long'><p>从提供'fn'创建一个新的函数，其中的参数预先设置到 'args'。\n新的参数传递到新创建的回调函数中，调用时追加到预先设定的参数之后。\n创建的回调时，这是特别有用的。</p>\n\n<p>示例:</p>\n\n<pre><code>var originalFunction = function(){\n    alert(<a href=\"#!/api/Ext.Array-method-from\" rel=\"Ext.Array-method-from\" class=\"docClass\">Ext.Array.from</a>(arguments).join(' '));\n};\n\nvar callback = <a href=\"#!/api/Ext.Function-method-pass\" rel=\"Ext.Function-method-pass\" class=\"docClass\">Ext.Function.pass</a>(originalFunction, ['Hello', 'World']);\n\ncallback(); // 执行结果为 'Hello World'\ncallback('by Me'); // 执行结果为 'Hello World by Me'\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-pass\" rel=\"Ext-method-pass\" class=\"docClass\">Ext.pass</a>是<a href=\"#!/api/Ext.Function-method-pass\" rel=\"Ext.Function-method-pass\" class=\"docClass\">Ext.Function.pass</a>的别名</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>原始函数</p>\n\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>要传递给新的回调函数的参数</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选) 该函数执行的作用域(<code>this</code>引用)。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'><p>新的回调函数</p>\n\n</div></li></ul></div></div></div><div id='method-pluck' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-pluck' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-pluck' class='name expandable'>pluck</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList array, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> propertyName</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.pluck 的旧别名\n\n获取数组中每个元素的制定属性值. ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-pluck\" rel=\"Ext.Array-method-pluck\" class=\"docClass\">Ext.Array.pluck</a> 的旧别名</p>\n\n<p>获取数组中每个元素的制定属性值. 示例:</p>\n\n<pre><code><a href=\"#!/api/Ext.Array-method-pluck\" rel=\"Ext.Array-method-pluck\" class=\"docClass\">Ext.Array.pluck</a>(<a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">Ext.query</a>(\"p\"), \"className\"); // [el1.className, el2.className, ..., elN.className]\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-pluck\" rel=\"Ext.Array-method-pluck\" class=\"docClass\">Ext.Array.pluck</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList<div class='sub-desc'><p>数组.</p>\n\n</div></li><li><span class='pre'>propertyName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>元素的属性名称</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-preg' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/PluginManager.html#Ext-method-preg' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-preg' class='name expandable'>preg</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ptype, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> cls</span> )</div><div class='description'><div class='short'>Ext.PluginManager.registerType的简写形式 ...</div><div class='long'><p><a href=\"#!/api/Ext.PluginManager-method-registerType\" rel=\"Ext.PluginManager-method-registerType\" class=\"docClass\">Ext.PluginManager.registerType</a>的简写形式</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ptype</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>可能通过插件类所采用到的 ptype\n助记字符串。</p>\n</div></li><li><span class='pre'>cls</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>新的插件类。</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Query.html#Ext-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-query' class='name expandable'>query</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> path, [HTMLElement root], [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> type]</span> ) : HTMLElement[]</div><div class='description'><div class='short'>Ext.dom.Query.select的简写\n\n用CSS/XPath选择器选择选择一个DOM节点数组\n\n若浏览器支持，则使用 document.querySelectorAll, 否则回复使用\nExt.dom.Query.jsSel...</div><div class='long'><p><a href=\"#!/api/Ext.dom.Query-method-select\" rel=\"Ext.dom.Query-method-select\" class=\"docClass\">Ext.dom.Query.select</a>的简写</p>\n\n<p>用CSS/XPath选择器选择选择一个DOM节点数组</p>\n\n<p>若浏览器支持，则使用 <a href=\"https://developer.mozilla.org/en/DOM/document.querySelectorAll\">document.querySelectorAll</a>, 否则回复使用\n<a href=\"#!/api/Ext.dom.Query-method-jsSelect\" rel=\"Ext.dom.Query-method-jsSelect\" class=\"docClass\">Ext.dom.Query.jsSelect</a> 来工作.</p>\n\n<p>别名为 <a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">query</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>查询的选择/路径</p>\n\n</div></li><li><span class='pre'>root</span> : HTMLElement (optional)<div class='sub-desc'><p>查询的起始点</p>\n\n<p>Defaults to: <code>document</code></p></div></li><li><span class='pre'>type</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>一个简单选择器匹配的，可以是\"select\"或\"simple\"\n(只有当jsSelect方法调用时才有效)</p>\n\n<p>Defaults to: <code>&quot;select&quot;</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement[]</span><div class='sub-desc'><p>一个DOM元素数组(<code>querySelectorAll</code>的返回值，不只是一个NodeList).</p>\n\n</div></li></ul></div></div></div><div id='method-regModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ModelManager.html#Ext-method-regModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-regModel' class='name expandable'>regModel</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> name, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>用于创建模型类的旧方法。改为使用:\n\nExt.define(\"MyModel\", {\n    extend: \"Ext.data.Model\",\n    fields: []\n}); ...</div><div class='long'><p>用于创建模型类的旧方法。改为使用:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>(\"MyModel\", {\n    extend: \"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>\",\n    fields: []\n});\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">define</a> 来代替。</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>模型的类的名称。</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>想要创建模型的配置对象。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'><p>新注册的模型</p>\n</div></li></ul></div></div></div><div id='method-regStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/StoreManager.html#Ext-method-regStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-regStore' class='name expandable'>regStore</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> id, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )</div><div class='description'><div class='short'>根据给定的id和配置来创建一个新的store，然后通过Store Manager来进行注册。 ...</div><div class='long'><p>根据给定的id和配置来创建一个新的store，然后通过<a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Store Manager</a>来进行注册。\n用法示例:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-regStore\" rel=\"Ext-method-regStore\" class=\"docClass\">Ext.regStore</a>('AllUsers', {\n    model: 'User'\n});\n\n// store现在可以轻松地在整个应用程序中使用\nnew Ext.List({\n    store: 'AllUsers',\n    ... other config\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要设置到新store中的id</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>store的配置对象</p>\n</div></li></ul></div></div></div><div id='method-removeNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-removeNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-removeNode' class='name expandable'>removeNode</a>( <span class='pre'>HTMLElement node</span> )</div><div class='description'><div class='short'>移除document的DOM节点。 ...</div><div class='long'><p>移除document的DOM节点。</p>\n\n<p>从文档中删除该元素，移除所有的DOM事件监听器，\n并删除缓存的引用。 从该元素中删除所有 DOM 事件侦听器。\n如果 <a href=\"#!/api/Ext-property-enableNestedListenerRemoval\" rel=\"Ext-property-enableNestedListenerRemoval\" class=\"docClass\">Ext.enableNestedListenerRemoval</a> 设置为<code>true</code>，\n然后从该元素的所有子节点也移除 DOM 事件侦听器。\n如果传递 body 节点则将被忽略。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : HTMLElement<div class='sub-desc'><p>要移除的节点</p>\n</div></li></ul></div></div></div><div id='method-require' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-require' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-require' class='name expandable'>require</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>实用的别名 Ext.Loader.require. ...</div><div class='long'><p>实用的别名 <a href=\"#!/api/Ext.Loader-method-require\" rel=\"Ext.Loader-method-require\" class=\"docClass\">Ext.Loader.require</a>.\n请参见引入的<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>文件的例子。</p>\n</div></div></div><div id='method-select' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/CompositeElementLite.html#Ext-method-select' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-select' class='name expandable'>select</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector</span> ) : <a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.CompositeElement</a></div><div class='description'><div class='short'>传入一个CSS选择符的参数，然后依据该CSS选择符从当前元素下面，形成期待匹配子节点的集合，也就是\"选择\"的操作，最后以一个Ext.CompositeElement类型的组合元素的形式返回(因为id的元素唯一的，所以选择符不应是id的...</div><div class='long'><p>传入一个CSS选择符的参数，然后依据该CSS选择符从当前元素下面，形成期待匹配子节点的集合，也就是\"选择\"的操作，最后以一个<a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.CompositeElement</a>类型的组合元素的形式返回(因为id的元素唯一的，所以选择符不应是id的选择符)。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>CSS选择符</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.CompositeElement</a></span><div class='sub-desc'><p>组合元素</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-sum' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-sum' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-sum' class='name expandable'>sum</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> array</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.sum 的旧别名\n\n计算数组中元素的和 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-sum\" rel=\"Ext.Array-method-sum\" class=\"docClass\">Ext.Array.sum</a> 的旧别名</p>\n\n<p>计算数组中元素的和</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-sum\" rel=\"Ext.Array-method-sum\" class=\"docClass\">Ext.Array.sum</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>数组</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>和</p>\n\n</div></li></ul></div></div></div><div id='method-syncRequire' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-syncRequire' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-syncRequire' class='name expandable'>syncRequire</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>同步版本的require，实用的别名Ext.Loader.syncRequire。 ...</div><div class='long'><p>同步版本的<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">require</a>，实用的别名<a href=\"#!/api/Ext.Loader-method-syncRequire\" rel=\"Ext.Loader-method-syncRequire\" class=\"docClass\">Ext.Loader.syncRequire</a>。 同步请求</p>\n</div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-toArray' class='name expandable'>toArray</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> iterable, [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> start], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> end]</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></div><div class='description'><div class='short'>将一个可迭代元素(具有数字下标和length属性)转换为一个真正的数组\n\nfunction test() {\n    var args = Ext.Array.toArray(arguments),\n        fromSecon...</div><div class='long'><p>将一个可迭代元素(具有数字下标和length属性)转换为一个真正的数组</p>\n\n<pre><code>function test() {\n    var args = <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(arguments),\n        fromSecondToLastArgs = <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(arguments, 1);\n\n    alert(args.join(' '));\n    alert(fromSecondToLastArgs.join(' '));\n}\n\ntest('just', 'testing', 'here'); // 提示 'just testing here';\n                                 // 提示 'testing here';\n\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(document.getElementsByTagName('div')); // 将把 NodeList 转换成一个数组\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>('splitted'); // returns ['s', 'p', 'l', 'i', 't', 't', 'e', 'd']\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>('splitted', 0, 3); // returns ['s', 'p', 'l']\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-toArray\" rel=\"Ext-method-toArray\" class=\"docClass\">Ext.toArray</a> 是 <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a> 的别名</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iterable</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>可迭代的对象</p>\n\n</div></li><li><span class='pre'>start</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>从0开始的索引，表示要转换的起始位置. 默认为 0</p>\n\n</div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>从1开始的索引，表示要转换的结束位置.<br/>\n默认为要迭代元素的末尾位置。</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>array</p>\n\n</div></li></ul></div></div></div><div id='method-toSentence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-toSentence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-toSentence' class='name expandable'>toSentence</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] items, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> connector</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>将数组转换为一个句子，加入了指定连接器 - 例如:\n\nExt.toSentence(['Adama', 'Tigh', 'Roslin']); //'Adama, Tigh and Roslin'\nExt.toSentence(['A...</div><div class='long'><p>将数组转换为一个句子，加入了指定连接器 - 例如:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-toSentence\" rel=\"Ext-method-toSentence\" class=\"docClass\">Ext.toSentence</a>(['Adama', 'Tigh', 'Roslin']); //'Adama, Tigh and Roslin'\n<a href=\"#!/api/Ext-method-toSentence\" rel=\"Ext-method-toSentence\" class=\"docClass\">Ext.toSentence</a>(['Adama', 'Tigh', 'Roslin'], 'or'); //'Adama, Tigh or Roslin'\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>将在下一个主要版本中移除</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>items</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>要创建句子的数组</p>\n</div></li><li><span class='pre'>connector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>一个字符串，用来连接最后两个字符串。\n通常是 'and' 或 'or' - 默认为 'and'。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>句子的字符串</p>\n</div></li></ul></div></div></div><div id='method-type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-type' class='name expandable'>type</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>typeOf旧的别名\n\n以字符串格式返回给定变量的类型。可能值的列表:\n\n\nundefined: 如果给定的值是 undefined\nnull: 如果给定的值是 null\nstring: 如果给定的值是一个字符串\nnumber: 如果...</div><div class='long'><p><a href=\"#!/api/Ext-method-typeOf\" rel=\"Ext-method-typeOf\" class=\"docClass\">typeOf</a>旧的别名</p>\n\n<p>以字符串格式返回给定变量的类型。可能值的列表:</p>\n\n<ul>\n<li><code>undefined</code>: 如果给定的值是 <code>undefined</code></li>\n<li><code>null</code>: 如果给定的值是 <code>null</code></li>\n<li><code>string</code>: 如果给定的值是一个字符串</li>\n<li><code>number</code>: 如果给定的值是一个数值</li>\n<li><code>boolean</code>: 如果给定的值是一个布尔值</li>\n<li><code>date</code>: 如果给定的值是一个 <code>Date</code> 对象</li>\n<li><code>function</code>: 如果给定的值是function的引用</li>\n<li><code>object</code>: 如果给定的值是一个对象</li>\n<li><code>array</code>: 如果给定的值是一个数组</li>\n<li><code>regexp</code>: 如果给定的值是一个正则表达式</li>\n<li><code>element</code>: 如果给定的值是一个 DOM 元素</li>\n<li><code>textnode</code>: 如果给定的值是一个 DOM 文本节点和包含空格以外的东西</li>\n<li><code>whitespace</code>: 如果给定的值是一个 DOM 文本节点和包含只有空格</li>\n</ul>\n\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>使用<a href=\"#!/api/Ext-method-typeOf\" rel=\"Ext-method-typeOf\" class=\"docClass\">typeOf</a>来代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-typeOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-typeOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-typeOf' class='name expandable'>typeOf</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>以字符串格式返回给定变量的类型。可能值的列表:\n\n\nundefined: 如果给定的值是 undefined\nnull: 如果给定的值是 null\nstring: 如果给定的值是一个字符串\nnumber: 如果给定的值是一个数值\nbo...</div><div class='long'><p>以字符串格式返回给定变量的类型。可能值的列表:</p>\n\n<ul>\n<li><code>undefined</code>: 如果给定的值是 <code>undefined</code></li>\n<li><code>null</code>: 如果给定的值是 <code>null</code></li>\n<li><code>string</code>: 如果给定的值是一个字符串</li>\n<li><code>number</code>: 如果给定的值是一个数值</li>\n<li><code>boolean</code>: 如果给定的值是一个布尔值</li>\n<li><code>date</code>: 如果给定的值是一个 <code>Date</code> 对象</li>\n<li><code>function</code>: 如果给定的值是function的引用</li>\n<li><code>object</code>: 如果给定的值是一个对象</li>\n<li><code>array</code>: 如果给定的值是一个数组</li>\n<li><code>regexp</code>: 如果给定的值是一个正则表达式</li>\n<li><code>element</code>: 如果给定的值是一个 DOM 元素</li>\n<li><code>textnode</code>: 如果给定的值是一个 DOM 文本节点和包含空格以外的东西</li>\n<li><code>whitespace</code>: 如果给定的值是一个 DOM 文本节点和包含只有空格</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-unique' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Array2.html#Ext-method-unique' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-unique' class='name expandable'>unique</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> array</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Array.unique 的旧别名\n\n返回一个去掉重复元素的新数组 ...</div><div class='long'><p><a href=\"#!/api/Ext.Array-method-unique\" rel=\"Ext.Array-method-unique\" class=\"docClass\">Ext.Array.unique</a> 的旧别名</p>\n\n<p>返回一个去掉重复元素的新数组</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用 <a href=\"#!/api/Ext.Array-method-unique\" rel=\"Ext.Array-method-unique\" class=\"docClass\">Ext.Array.unique</a> 代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>array</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>结果</p>\n\n</div></li></ul></div></div></div><div id='method-urlAppend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/String2.html#Ext-method-urlAppend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-urlAppend' class='name expandable'>urlAppend</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> url, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> string</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.String.urlAppend的曾用别名\n\n将内容追加到URL的查询字符串,\n根据处理逻辑来判断放置一个'?'或'&amp;'符号。 ...</div><div class='long'><p><a href=\"#!/api/Ext.String-method-urlAppend\" rel=\"Ext.String-method-urlAppend\" class=\"docClass\">Ext.String.urlAppend</a>的曾用别名</p>\n\n<p>将内容追加到URL的查询字符串,\n根据处理逻辑来判断放置一个'?'或'&amp;'符号。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>使用<a href=\"#!/api/Ext.String-method-urlAppend\" rel=\"Ext.String-method-urlAppend\" class=\"docClass\">Ext.String.urlAppend</a>代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要追加到该URL。</p>\n\n\n\n</div></li><li><span class='pre'>string</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要加到URL的内容。</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>所生成的URL。</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-urlDecode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Object2.html#Ext-method-urlDecode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-urlDecode' class='name expandable'>urlDecode</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> queryString, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> recursive]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Ext.Object.fromQueryString的别名. ...</div><div class='long'><p><a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>的别名.</p>\n\n<p>将查询字符串转换回对象。</p>\n\n<p>不递归:</p>\n\n<pre><code><a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>(\"foo=1&amp;bar=2\"); // 返回 {foo: 1, bar: 2}\n<a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>(\"foo=&amp;bar=2\"); // 返回 {foo: null, bar: 2}\n<a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>(\"some%20price=%24300\"); // 返回 {'some price': '$300'}\n<a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>(\"colors=red&amp;colors=green&amp;colors=blue\"); // 返回 {colors: ['red', 'green', 'blue']}\n</code></pre>\n\n<p>递归:</p>\n\n<pre><code><a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>(\n    \"username=Jacky&amp;\"+\n    \"dateOfBirth[day]=1&amp;dateOfBirth[month]=2&amp;dateOfBirth[year]=1911&amp;\"+\n    \"hobbies[0]=coding&amp;hobbies[1]=eating&amp;hobbies[2]=sleeping&amp;\"+\n    \"hobbies[3][0]=nested&amp;hobbies[3][1]=stuff\", true);\n\n// 返回\n{\n    username: 'Jacky',\n    dateOfBirth: {\n        day: '1',\n        month: '2',\n        year: '1911'\n    },\n    hobbies: ['coding', 'eating', 'sleeping', ['nested', 'stuff']]\n}\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用<a href=\"#!/api/Ext.Object-method-fromQueryString\" rel=\"Ext.Object-method-fromQueryString\" class=\"docClass\">Ext.Object.fromQueryString</a>代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queryString</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要解码的查询字符串</p>\n\n</div></li><li><span class='pre'>recursive</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>是否递归的解码字符串，这种格式在\nPHP / Ruby on Rails服务器中被类似地支持.</p>\n\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-urlEncode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Object2.html#Ext-method-urlEncode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-urlEncode' class='name expandable'>urlEncode</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> object, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> recursive]</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>将一个对象转换成编码的查询字符串\n\n不递归:\n\nExt.Object.toQueryString({foo: 1, bar: 2}); // 返回 \"foo=1&amp;bar=2\"\nExt.Object.toQueryString(...</div><div class='long'><p>将一个对象转换成编码的查询字符串</p>\n\n<p>不递归:</p>\n\n<pre><code><a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({foo: 1, bar: 2}); // 返回 \"foo=1&amp;bar=2\"\n<a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({foo: null, bar: 2}); // 返回 \"foo=&amp;bar=2\"\n<a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({'some price': '$300'}); // 返回 \"some%20price=%24300\"\n<a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({date: new Date(2011, 0, 1)}); // 返回 \"date=%222011-01-01T00%3A00%3A00%22\"\n<a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({colors: ['red', 'green', 'blue']}); // 返回 \"colors=red&amp;colors=green&amp;colors=blue\"\n</code></pre>\n\n<p>递归:</p>\n\n<pre><code><a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>({\n    username: 'Jacky',\n    dateOfBirth: {\n        day: 1,\n        month: 2,\n        year: 1911\n    },\n    hobbies: ['coding', 'eating', 'sleeping', ['nested', 'stuff']]\n}, true); // 返回如下字符串(换行和url-decoded是为了便于阅读的目的):\n// username=Jacky\n//    &amp;dateOfBirth[day]=1&amp;dateOfBirth[month]=2&amp;dateOfBirth[year]=1911\n//    &amp;hobbies[0]=coding&amp;hobbies[1]=eating&amp;hobbies[2]=sleeping&amp;hobbies[3][0]=nested&amp;hobbies[3][1]=stuff\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>请使用<a href=\"#!/api/Ext.Object-method-toQueryString\" rel=\"Ext.Object-method-toQueryString\" class=\"docClass\">Ext.Object.toQueryString</a>代替本方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要编码的对象</p>\n\n</div></li><li><span class='pre'>recursive</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>是否递归的翻译对象，这种格式在\nPHP / Ruby on Rails服务器中被类似地支持.</p>\n\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>queryString</p>\n\n</div></li></ul></div></div></div><div id='method-value' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-value' class='name expandable'>value</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> defaultValue, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> allowBlank]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>返回一个默认值的实用程序方法，如果传递的值是空的。 ...</div><div class='long'><p>返回一个默认值的实用程序方法，如果传递的值是空的。</p>\n\n<p>该值被认为是空的如果是:</p>\n\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>一个空数组</li>\n<li>长度为零的字符串 (除非设置<code>allowBlank</code>参数为<code>true</code>)</li>\n</ul>\n\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>采用 <a href=\"#!/api/Ext-method-valueFrom\" rel=\"Ext-method-valueFrom\" class=\"docClass\">valueFrom</a> 来代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要测试的值</p>\n</div></li><li><span class='pre'>defaultValue</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>如果原始值为空则返回该值</p>\n</div></li><li><span class='pre'>allowBlank</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true允许零长度字符串，以确认为非空。</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>如果非空则返回value，否则返回defaultValue</p>\n</div></li></ul></div></div></div><div id='method-valueFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-valueFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-valueFrom' class='name expandable'>valueFrom</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> defaultValue, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> allowBlank</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>返回给定值本身如果它不是空的，isEmpty中所述;\n否则返回默认值(第二个参数)。 ...</div><div class='long'><p>返回给定值本身如果它不是空的，<a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">isEmpty</a>中所述;\n否则返回默认值(第二个参数)。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要测试的值</p>\n</div></li><li><span class='pre'>defaultValue</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要返回的值，如果原始值为空</p>\n</div></li><li><span class='pre'>allowBlank</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>(可选) 如果为 true，允许零长度字符串，以确认为非空(默认为 false)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>如果非空返回value，否则返回defaultValue</p>\n</div></li></ul></div></div></div><div id='method-widget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-widget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-widget' class='name expandable'>widget</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> name], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>便于速记创建一个微件的xtype配置对象。 ...</div><div class='long'><p>便于速记创建一个微件的xtype配置对象。\n参见<a href=\"#!/api/Ext.ClassManager-method-instantiateByAlias\" rel=\"Ext.ClassManager-method-instantiateByAlias\" class=\"docClass\">Ext.ClassManager.instantiateByAlias</a>.</p>\n\n<pre><code> var button = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('button'); // 相当于Ext.create('widget.button');\n\n var panel = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('panel', { // 相当于Ext.create('widget.panel')\n     title: 'Panel'\n });\n\n var grid = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>({\n     xtype: 'grid',\n     ...\n });\n</code></pre>\n\n<p>如果一个<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">component</a>实例被传递，它只是简单地返回。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>创建微件的xtype名称</p>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>微件的构造函数的配置对象。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>微件的实例</p>\n</div></li></ul></div></div></div><div id='method-zip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext-more.html#Ext-method-zip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-zip' class='name expandable'>zip</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList... arr, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> zipper</span> ) : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>将多个数组压缩为一个数组。 ...</div><div class='long'><p>将多个数组压缩为一个数组。</p>\n\n<p>示例 1:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-zip\" rel=\"Ext-method-zip\" class=\"docClass\">Ext.zip</a>([1,2,3],[4,5,6]); // [[1,4],[2,5],[3,6]]\n</code></pre>\n\n<p>示例 2:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-zip\" rel=\"Ext-method-zip\" class=\"docClass\">Ext.zip</a>(\n    [ \"+\", \"-\", \"+\"],\n    [  12,  10,  22],\n    [  43,  15,  96],\n    function(a, b, c){\n        return \"$\" + a + \"\" + b + \".\" + c\n    }\n); // [\"$+12.43\", \"$-10.15\", \"$+22.96\"]\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>将在下一个主要版本中移除</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arr</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList...<div class='sub-desc'><p>此参数可能会重复出现。\n由数组(s)来提供值。</p>\n</div></li><li><span class='pre'>zipper</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选) 在参数列表中的最后一项。\n这将推动参数项如何压缩连接在一起。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><div class='sub-desc'><p>压缩后的集合。</p>\n</div></li></ul></div></div></div></div></div></div></div>"});