Ext.data.JsonP.Ext_fx_Easing({"tagname":"class","name":"Ext.fx.Easing","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"code_type":"nop","inheritable":false,"inheritdoc":null,"meta":{"docauthor":["译者: 老男孩<liu78778@gmail.com>"]},"id":"class-Ext.fx.Easing","members":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"Easing.js","href":"Easing.html#Ext-fx-Easing"}],"html_meta":{"docauthor":null},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Easing.html#Ext-fx-Easing' target='_blank'>Easing.js</a></div></pre><div class='doc-contents'><p>本类包含一系列用来修改动画中的值的函数定义.\n它们描述了如何计算在(动画)转换过程中使用的中间值. 它允许在(动画)完成时间内逐渐的改变速度\n下列选项是可用的:</p>\n\n<ul>\n<li>linear 默认的easing(动画缓冲)类型</li>\n<li>backIn</li>\n<li>backOut</li>\n<li>bounceIn</li>\n<li>bounceOut</li>\n<li>ease</li>\n<li>easeIn</li>\n<li>easeOut</li>\n<li>easeInOut</li>\n<li>elasticIn</li>\n<li>elasticOut</li>\n<li>cubic-bezier(x1, y1, x2, y2)</li>\n</ul>\n\n\n<p>请注意, 指定cubic-bezier将会创建一个符合CSS3<a href=\"http://www.w3.org/TR/css3-transitions/#transition-timing-function_tag\">transition-timing-function</a>规范的自定义缓冲曲线\n四个值(x1, y1, x2, y2)分别指定曲线的P1与P2点.\n所有的值的取值范围都必须在区间[0, 1]内, 不然定义无效.</p>\n</div><div class='members'></div></div>"});