Ext.data.JsonP.Ext_util_DelayedTask({"tagname":"class","name":"Ext.util.DelayedTask","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"code_type":"assignment","inheritable":false,"inheritdoc":null,"meta":{"docauthor":["译者: 曹成博<caochengbo12@qq.com>"]},"id":"class-Ext.util.DelayedTask","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"Ext.util.DelayedTask","meta":{},"id":"method-constructor"},{"name":"cancel","tagname":"method","owner":"Ext.util.DelayedTask","meta":{},"id":"method-cancel"},{"name":"delay","tagname":"method","owner":"Ext.util.DelayedTask","meta":{},"id":"method-delay"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"DelayedTask.js","href":"DelayedTask.html#Ext-util-DelayedTask"}],"html_meta":{"docauthor":null},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/DelayedTask.html#Ext-util-DelayedTask' target='_blank'>DelayedTask.js</a></div></pre><div class='doc-contents'><p>DelayedTask 类提供了对\"缓冲区\"简便执行的一种方法，\n执行setTimeout时，新的超时时限会取消旧的超时时限。调用时，\n该任务将在执行之前等待指定的一段时间。如果在等待的时间中，\n再调用此任务时，原始调用将会被取消。\n这样继续下去，对于每次迭代该函数只是被调用一次。</p>\n\n<p>此方法对于类似检测用户是否已完成在文本框中键入完值尤其有用。\n例如验证表单的时候，键盘按下(keypress)那一瞬，\n就可用上该类（不会立即验证表单，稍作延时）。\nkeypress事件会稍作停顿之后（某个时间）才继续执行。</p>\n\n<h2>Usage</h2>\n\n<pre><code>var task = new <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a>(function(){\n    alert(<a href=\"#!/api/Ext-method-getDom\" rel=\"Ext-method-getDom\" class=\"docClass\">Ext.getDom</a>('myInputField').value.length);\n});\n\n// 我们在函数调用之前等待500毫秒。如果用户在这500毫秒期间按另一个键，\n// 它将会被取消，我们就要再次等待下一个500毫秒。\n<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('myInputField').on('keypress', function(){\n    task.<a href=\"#!/api/Ext.util.DelayedTask-method-delay\" rel=\"Ext.util.DelayedTask-method-delay\" class=\"docClass\">delay</a>(500);\n});\n</code></pre>\n\n<p>请注意我们使用 DelayedTask 在这里要说明一点。\n关于 <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener/on</a> 的配置选项 <code>buffer</code>\n将为你设置延迟的任务到缓冲事件中。</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.DelayedTask'>Ext.util.DelayedTask</span><br/><a href='source/DelayedTask.html#Ext-util-DelayedTask-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.util.DelayedTask-method-constructor' class='name expandable'>Ext.util.DelayedTask</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>此构造函数的参数作为默认值，并不是必需的。 ...</div><div class='long'><p>此构造函数的参数作为默认值，并不是必需的。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>（可选的） 要调用的默认函数。如果不在此处指定，他必须指定在 <a href=\"#!/api/Ext.util.DelayedTask-method-delay\" rel=\"Ext.util.DelayedTask-method-delay\" class=\"docClass\">delay</a> 调用的过程中。</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>（可选的） 调用该函数时的默认范围（<code><b>this</b></code>引用），\n如果没有指定，<code>this</code> 将引用window全局作用域。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>（可选的） 默认参数数组。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.DelayedTask'>Ext.util.DelayedTask</span><br/><a href='source/DelayedTask.html#Ext-util-DelayedTask-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.DelayedTask-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>取消最后的排列超时 ...</div><div class='long'><p>取消最后的排列超时</p>\n</div></div></div><div id='method-delay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.DelayedTask'>Ext.util.DelayedTask</span><br/><a href='source/DelayedTask.html#Ext-util-DelayedTask-method-delay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.DelayedTask-method-delay' class='name expandable'>delay</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> delay, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> newFn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> newScope], <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> newArgs</span> )</div><div class='description'><div class='short'>取消所有待定的超时，并重新排列。 ...</div><div class='long'><p>取消所有待定的超时，并重新排列。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>延迟的毫秒数</p>\n</div></li><li><span class='pre'>newFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>（可选的） 重写传入到构建器的函数</p>\n</div></li><li><span class='pre'>newScope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>（可选的） 重写传入到构建器的作用域。\n请记住如果没有指定scope, <code>this</code> 将引用window全局作用域。</p>\n</div></li><li><span class='pre'>newArgs</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>（可选的） 重写传入到构建器的参数</p>\n</div></li></ul></div></div></div></div></div></div></div>"});