Ext.data.JsonP.Ext_data_Store({"tagname":"class","name":"Ext.data.Store","extends":"Ext.data.AbstractStore","mixins":[],"alternateClassNames":[],"aliases":{"store":["store"]},"singleton":false,"requires":["Ext.data.StoreManager","Ext.data.Model","Ext.data.proxy.Ajax","Ext.data.proxy.Memory","Ext.data.reader.Json","Ext.data.writer.Json","Ext.util.LruCache"],"uses":["Ext.ModelManager","Ext.util.Grouper"],"code_type":"ext_define","inheritable":false,"inheritdoc":null,"meta":{"author":["Ed Spencer"],"docauthor":["译者: 铁锚<551996458@qq.com>"]},"id":"class-Ext.data.Store","members":{"cfg":[{"name":"autoLoad","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-autoLoad"},{"name":"autoSync","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-autoSync"},{"name":"buffered","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-buffered"},{"name":"clearOnPageLoad","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-clearOnPageLoad"},{"name":"clearRemovedOnLoad","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-clearRemovedOnLoad"},{"name":"data","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-data"},{"name":"fields","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-fields"},{"name":"filters","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-filters"},{"name":"groupDir","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-groupDir"},{"name":"groupField","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-groupField"},{"name":"leadingBufferZone","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-leadingBufferZone"},{"name":"listeners","tagname":"cfg","owner":"Ext.util.Observable","meta":{},"id":"cfg-listeners"},{"name":"model","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-model"},{"name":"pageSize","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-pageSize"},{"name":"proxy","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-proxy"},{"name":"purgePageCount","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-purgePageCount"},{"name":"remoteFilter","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-remoteFilter"},{"name":"remoteGroup","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-remoteGroup"},{"name":"remoteSort","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-remoteSort"},{"name":"sortOnFilter","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-sortOnFilter"},{"name":"storeId","tagname":"cfg","owner":"Ext.data.AbstractStore","meta":{},"id":"cfg-storeId"},{"name":"trailingBufferZone","tagname":"cfg","owner":"Ext.data.Store","meta":{},"id":"cfg-trailingBufferZone"}],"property":[{"name":"$onExtended","tagname":"property","owner":"Ext.Base","meta":{"private":true},"id":"property-S-onExtended"},{"name":"batchUpdateMode","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-batchUpdateMode"},{"name":"currentPage","tagname":"property","owner":"Ext.data.Store","meta":{},"id":"property-currentPage"},{"name":"data","tagname":"property","owner":"Ext.data.Store","meta":{},"id":"property-data"},{"name":"defaultProxyType","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-defaultProxyType"},{"name":"defaultSortDirection","tagname":"property","owner":"Ext.util.Sortable","meta":{},"id":"property-defaultSortDirection"},{"name":"filterOnLoad","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-filterOnLoad"},{"name":"filters","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-filters"},{"name":"groupers","tagname":"property","owner":"Ext.data.Store","meta":{},"id":"property-groupers"},{"name":"hasListeners","tagname":"property","owner":"Ext.util.Observable","meta":{"readonly":true},"id":"property-hasListeners"},{"name":"implicitModel","tagname":"property","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"property-implicitModel"},{"name":"isDestroyed","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-isDestroyed"},{"name":"isObservable","tagname":"property","owner":"Ext.util.Observable","meta":{},"id":"property-isObservable"},{"name":"isSortable","tagname":"property","owner":"Ext.util.Sortable","meta":{},"id":"property-isSortable"},{"name":"isStore","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-isStore"},{"name":"loading","tagname":"property","owner":"Ext.data.Store","meta":{"private":true},"id":"property-loading"},{"name":"modelDefaults","tagname":"property","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"property-modelDefaults"},{"name":"removed","tagname":"property","owner":"Ext.data.AbstractStore","meta":{"protected":true},"id":"property-removed"},{"name":"self","tagname":"property","owner":"Ext.Base","meta":{"protected":true},"id":"property-self"},{"name":"snapshot","tagname":"property","owner":"Ext.data.Store","meta":{},"id":"property-snapshot"},{"name":"sortOnLoad","tagname":"property","owner":"Ext.data.AbstractStore","meta":{},"id":"property-sortOnLoad"},{"name":"sortRoot","tagname":"property","owner":"Ext.util.Sortable","meta":{},"id":"property-sortRoot"},{"name":"sorters","tagname":"property","owner":"Ext.util.Sortable","meta":{},"id":"property-sorters"}],"method":[{"name":"constructor","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-constructor"},{"name":"add","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-add"},{"name":"addConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addConfig"},{"name":"addEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addEvents"},{"name":"addInheritableStatics","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addInheritableStatics"},{"name":"addListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addListener"},{"name":"addManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addManagedListener"},{"name":"addMember","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addMember"},{"name":"addSorted","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-addSorted"},{"name":"addXtype","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addXtype"},{"name":"afterCommit","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-afterCommit"},{"name":"afterEdit","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-afterEdit"},{"name":"afterReject","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-afterReject"},{"name":"aggregate","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-aggregate"},{"name":"average","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-average"},{"name":"cachePage","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-cachePage"},{"name":"callOverridden","tagname":"method","owner":"Ext.Base","meta":{"protected":true,"deprecated":{"version":"4.1","text":"版本 使用 {@link #callParent} 代替."}},"id":"method-callOverridden"},{"name":"callParent","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-callParent"},{"name":"cancelAllPrefetches","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-cancelAllPrefetches"},{"name":"clearFilter","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-clearFilter"},{"name":"clearGrouping","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-clearGrouping"},{"name":"clearListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearListeners"},{"name":"clearManagedListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearManagedListeners"},{"name":"collect","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-collect"},{"name":"commitChanges","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-commitChanges"},{"name":"continueFireEvent","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-continueFireEvent"},{"name":"count","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-count"},{"name":"createFilterFn","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-createFilterFn"},{"name":"createModel","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-createModel"},{"name":"createRelayer","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-createRelayer"},{"name":"decodeFilters","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-decodeFilters"},{"name":"decodeGroupers","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-decodeGroupers"},{"name":"decodeSorters","tagname":"method","owner":"Ext.util.Sortable","meta":{"private":true},"id":"method-decodeSorters"},{"name":"each","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-each"},{"name":"enableBubble","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-enableBubble"},{"name":"extend","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-extend"},{"name":"filter","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-filter"},{"name":"filterBy","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-filterBy"},{"name":"filterNew","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-filterNew"},{"name":"filterUpdated","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-filterUpdated"},{"name":"find","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-find"},{"name":"findBy","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-findBy"},{"name":"findExact","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-findExact"},{"name":"findRecord","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-findRecord"},{"name":"fireEvent","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-fireEvent"},{"name":"fireGroupChange","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-fireGroupChange"},{"name":"first","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-first"},{"name":"generateComparator","tagname":"method","owner":"Ext.util.Sortable","meta":{},"id":"method-generateComparator"},{"name":"getAt","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getAt"},{"name":"getBatchListeners","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-getBatchListeners"},{"name":"getBubbleParent","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-getBubbleParent"},{"name":"getById","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getById"},{"name":"getConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-getConfig"},{"name":"getCount","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getCount"},{"name":"getGroupData","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-getGroupData"},{"name":"getGroupString","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getGroupString"},{"name":"getGroups","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getGroups"},{"name":"getGroupsForGrouper","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-getGroupsForGrouper"},{"name":"getGroupsForGrouperIndex","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-getGroupsForGrouperIndex"},{"name":"getInitialConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-getInitialConfig"},{"name":"getModifiedRecords","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-getModifiedRecords"},{"name":"getNewRecords","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-getNewRecords"},{"name":"getPageFromRecordIndex","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getPageFromRecordIndex"},{"name":"getProxy","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-getProxy"},{"name":"getRange","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getRange"},{"name":"getRemovedRecords","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-getRemovedRecords"},{"name":"getTotalCount","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-getTotalCount"},{"name":"getUpdatedRecords","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-getUpdatedRecords"},{"name":"group","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-group"},{"name":"guaranteeRange","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-guaranteeRange"},{"name":"hasConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-hasConfig"},{"name":"hasListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-hasListener"},{"name":"implement","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-implement"},{"name":"indexOf","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-indexOf"},{"name":"indexOfId","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-indexOfId"},{"name":"indexOfTotal","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-indexOfTotal"},{"name":"initConfig","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-initConfig"},{"name":"initSortable","tagname":"method","owner":"Ext.util.Sortable","meta":{},"id":"method-initSortable"},{"name":"insert","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-insert"},{"name":"isFiltered","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-isFiltered"},{"name":"isGrouped","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-isGrouped"},{"name":"isLoading","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-isLoading"},{"name":"last","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-last"},{"name":"load","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-load"},{"name":"loadData","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-loadData"},{"name":"loadPage","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-loadPage"},{"name":"loadRawData","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-loadRawData"},{"name":"loadRecords","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-loadRecords"},{"name":"max","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-max"},{"name":"min","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-min"},{"name":"mixin","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-mixin"},{"name":"mon","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-mon"},{"name":"mun","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-mun"},{"name":"nextPage","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-nextPage"},{"name":"on","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-on"},{"name":"onBatchComplete","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-onBatchComplete"},{"name":"onBatchOperationComplete","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-onBatchOperationComplete"},{"name":"onConfigUpdate","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-onConfigUpdate"},{"name":"onDestroyRecords","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-onDestroyRecords"},{"name":"onExtended","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-onExtended"},{"name":"onGuaranteedRange","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-onGuaranteedRange"},{"name":"onProxyLoad","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-onProxyLoad"},{"name":"onProxyPrefetch","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-onProxyPrefetch"},{"name":"onProxyWrite","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"private":true},"id":"method-onProxyWrite"},{"name":"pageCached","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-pageCached"},{"name":"prefetch","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-prefetch"},{"name":"prefetchPage","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-prefetchPage"},{"name":"prefetchRange","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-prefetchRange"},{"name":"prepareClass","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-prepareClass"},{"name":"previousPage","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-previousPage"},{"name":"queryBy","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-queryBy"},{"name":"rangeCached","tagname":"method","owner":"Ext.data.Store","meta":{"private":true},"id":"method-rangeCached"},{"name":"rangeSatisfied","tagname":"method","owner":"Ext.data.Store","meta":{"private":true,"deprecated":{"version":"4.1.0","text":"使用 {@link #rangeCached} 来代替此方法"}},"id":"method-rangeSatisfied"},{"name":"rejectChanges","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-rejectChanges"},{"name":"relayEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-relayEvents"},{"name":"remove","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-remove"},{"name":"removeAll","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-removeAll"},{"name":"removeAt","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-removeAt"},{"name":"removeListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeListener"},{"name":"removeManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeManagedListener"},{"name":"removeManagedListenerItem","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-removeManagedListenerItem"},{"name":"resumeAutoSync","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-resumeAutoSync"},{"name":"resumeEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-resumeEvents"},{"name":"save","tagname":"method","owner":"Ext.data.AbstractStore","meta":{"deprecated":{"version":"4.0.0","text":"将会在下一个主版本中删除."}},"id":"method-save"},{"name":"setConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-setConfig"},{"name":"setProxy","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-setProxy"},{"name":"sort","tagname":"method","owner":"Ext.util.Sortable","meta":{},"id":"method-sort"},{"name":"statics","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-statics"},{"name":"sum","tagname":"method","owner":"Ext.data.Store","meta":{},"id":"method-sum"},{"name":"suspendAutoSync","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-suspendAutoSync"},{"name":"suspendEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-suspendEvents"},{"name":"sync","tagname":"method","owner":"Ext.data.AbstractStore","meta":{},"id":"method-sync"},{"name":"triggerExtended","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-triggerExtended"},{"name":"un","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-un"}],"event":[{"name":"add","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-add"},{"name":"beforeload","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-beforeload"},{"name":"beforeprefetch","tagname":"event","owner":"Ext.data.Store","meta":{},"id":"event-beforeprefetch"},{"name":"beforesync","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-beforesync"},{"name":"clear","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-clear"},{"name":"datachanged","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-datachanged"},{"name":"groupchange","tagname":"event","owner":"Ext.data.Store","meta":{},"id":"event-groupchange"},{"name":"load","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-load"},{"name":"metachange","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-metachange"},{"name":"prefetch","tagname":"event","owner":"Ext.data.Store","meta":{},"id":"event-prefetch"},{"name":"refresh","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-refresh"},{"name":"remove","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-remove"},{"name":"update","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-update"},{"name":"write","tagname":"event","owner":"Ext.data.AbstractStore","meta":{},"id":"event-write"}],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[{"name":"addMembers","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-addMembers"},{"name":"addStatics","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-addStatics"},{"name":"borrow","tagname":"method","owner":"Ext.Base","meta":{"static":true,"private":true},"id":"static-method-borrow"},{"name":"create","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-create"},{"name":"createAlias","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-createAlias"},{"name":"getName","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-getName"},{"name":"override","tagname":"method","owner":"Ext.Base","meta":{"static":true,"markdown":true,"deprecated":{"version":"4.1.0","text":"使用 {@link Ext#define Ext.define} 代替"}},"id":"static-method-override"}],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"Store.js","href":"Store.html#Ext-data-Store"}],"html_meta":{"author":null,"docauthor":null},"component":false,"superclasses":["Ext.Base","Ext.data.AbstractStore"],"subclasses":["Ext.data.ArrayStore","Ext.data.BufferStore","Ext.data.DirectStore","Ext.data.JsonPStore","Ext.data.JsonStore","Ext.data.NodeStore","Ext.data.XmlStore","Ext.grid.property.Store"],"mixedInto":[],"parentMixins":["Ext.util.Observable","Ext.util.Sortable"],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='docClass'>Ext.data.AbstractStore</a><div class='subclass '><strong>Ext.data.Store</strong></div></div></div><h4>Inherited mixins</h4><div class='dependency'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a></div><div class='dependency'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='docClass'>Ext.util.Sortable</a></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Ext.data.Model' rel='Ext.data.Model' class='docClass'>Ext.data.Model</a></div><div class='dependency'><a href='#!/api/Ext.data.StoreManager' rel='Ext.data.StoreManager' class='docClass'>Ext.data.StoreManager</a></div><div class='dependency'><a href='#!/api/Ext.data.proxy.Ajax' rel='Ext.data.proxy.Ajax' class='docClass'>Ext.data.proxy.Ajax</a></div><div class='dependency'><a href='#!/api/Ext.data.proxy.Memory' rel='Ext.data.proxy.Memory' class='docClass'>Ext.data.proxy.Memory</a></div><div class='dependency'><a href='#!/api/Ext.data.reader.Json' rel='Ext.data.reader.Json' class='docClass'>Ext.data.reader.Json</a></div><div class='dependency'><a href='#!/api/Ext.data.writer.Json' rel='Ext.data.writer.Json' class='docClass'>Ext.data.writer.Json</a></div><div class='dependency'><a href='#!/api/Ext.util.LruCache' rel='Ext.util.LruCache' class='docClass'>Ext.util.LruCache</a></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Ext.data.ArrayStore' rel='Ext.data.ArrayStore' class='docClass'>Ext.data.ArrayStore</a></div><div class='dependency'><a href='#!/api/Ext.data.BufferStore' rel='Ext.data.BufferStore' class='docClass'>Ext.data.BufferStore</a></div><div class='dependency'><a href='#!/api/Ext.data.DirectStore' rel='Ext.data.DirectStore' class='docClass'>Ext.data.DirectStore</a></div><div class='dependency'><a href='#!/api/Ext.data.JsonPStore' rel='Ext.data.JsonPStore' class='docClass'>Ext.data.JsonPStore</a></div><div class='dependency'><a href='#!/api/Ext.data.JsonStore' rel='Ext.data.JsonStore' class='docClass'>Ext.data.JsonStore</a></div><div class='dependency'><a href='#!/api/Ext.data.NodeStore' rel='Ext.data.NodeStore' class='docClass'>Ext.data.NodeStore</a></div><div class='dependency'><a href='#!/api/Ext.data.XmlStore' rel='Ext.data.XmlStore' class='docClass'>Ext.data.XmlStore</a></div><div class='dependency'><a href='#!/api/Ext.grid.property.Store' rel='Ext.grid.property.Store' class='docClass'>Ext.grid.property.Store</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/Ext.ModelManager' rel='Ext.ModelManager' class='docClass'>Ext.ModelManager</a></div><div class='dependency'><a href='#!/api/Ext.util.Grouper' rel='Ext.util.Grouper' class='docClass'>Ext.util.Grouper</a></div><h4>Files</h4><div class='dependency'><a href='source/Store.html#Ext-data-Store' target='_blank'>Store.js</a></div></pre><div class='doc-contents'><p>Store 大意是: 仓库、存储的意思.\nStore类封装了一个客户端缓存,用于存储 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> 对象.\nStores 通过一个代理 <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a> 来加载数据,\n并提供函数来 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">排序</a>, <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">过滤</a> 以及查询\n内部所包含的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">model</a> 实例.</p>\n\n<p>创建Store非常简单 - 我们只需要传入 Model 以及用来加载/保存 数据的Proxy作为配置项即可:</p>\n\n<pre><code> // 建立一个store要使用的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">model</a>\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     fields: [\n         {name: 'firstName', type: 'string'},\n         {name: 'lastName',  type: 'string'},\n         {name: 'age',       type: 'int'},\n         {name: 'eyeColor',  type: 'string'}\n     ]\n });\n\n var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n     model: 'User',\n     proxy: {\n         type: 'ajax',\n         url: '/users.json',\n         reader: {\n             type: 'json',\n             root: 'users'\n         }\n     },\n     autoLoad: true\n });\n</code></pre>\n\n<p>在上面的例子中,我们配置了一个 AJAX 代理,从 url '/users.json' 加载数据.\n并告诉Proxy使用<a href=\"#!/api/Ext.data.reader.Json\" rel=\"Ext.data.reader.Json\" class=\"docClass\">JsonReader</a>来解析服务器返回的数据为Model对象.\n详细信息请参考 <a href=\"#!/api/Ext.data.reader.Json\" rel=\"Ext.data.reader.Json\" class=\"docClass\">JsonReader 文档</a>.</p>\n\n<h2>内联数据</h2>\n\n<p>Store 也可以加载内部指定的数据. 在内部, Store 将我们传入的对象作为<a href=\"#!/api/Ext.data.Store-cfg-data\" rel=\"Ext.data.Store-cfg-data\" class=\"docClass\">data</a>,转换为Model实例。\n示例如下:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n     model: 'User',\n     data : [\n         {firstName: 'Ed',    lastName: 'Spencer'},\n         {firstName: 'Tommy', lastName: 'Maintz'},\n         {firstName: 'Aaron', lastName: 'Conran'},\n         {firstName: 'Jamie', lastName: 'Avins'}\n     ]\n });\n</code></pre>\n\n<p>如果数据已经是准备好的格式，使用上面的方式加载内联数据是很好的解决方案.\n(比如 不需要通过 <a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">reader</a> 来处理的数据).\n如果需要对原始数据的结构进行解码, 请使用 <a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">MemoryProxy</a> .\n( 用法示例请参考 <a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">MemoryProxy</a> 文档).</p>\n\n<p>也可以使用 <a href=\"#!/api/Ext.data.Store-method-add\" rel=\"Ext.data.Store-method-add\" class=\"docClass\">add</a> 来载入本地的其他数据.</p>\n\n<h2>加载嵌套数据(Nested Data)</h2>\n\n<p>应用程序通常需要去加载一系列相关联的数据 - 比如一个 CRM 系统可能需要加载一个用户以及他的订单.\n我们可以加载一个嵌套的数据集合(nested dataset)并可以让Reader自动的生成相关的model,\n这要比通过多个ajax来请求各种零碎的数据(如用户,订单信息等)要方便得多.\n下面是一个简单的示例, 完整的介绍请参考 <a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">Ext.data.reader.Reader</a> 文档:</p>\n\n<pre><code> var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n     autoLoad: true,\n     model: \"User\",\n     proxy: {\n         type: 'ajax',\n         url: 'users.json',\n         reader: {\n             type: 'json',\n             root: 'users'\n         }\n     }\n });\n</code></pre>\n\n<p>这个store可以处理像下面这样的响应信息:</p>\n\n<pre><code> {\n     \"users\": [{\n         \"id\": 1,\n         \"name\": \"Ed\",\n         \"orders\": [{\n             \"id\": 10,\n             \"total\": 10.76,\n             \"status\": \"invoiced\"\n        },{\n             \"id\": 11,\n             \"total\": 13.45,\n             \"status\": \"shipped\"\n        }]\n     }]\n }\n</code></pre>\n\n<p>完整的介绍请参考 <a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">Ext.data.reader.Reader</a> 文档.</p>\n\n<h2>过滤与排序(Filtering and Sorting)</h2>\n\n<p>Store 可以进行排序和过滤 - 两种操作既可以在本地执行,也可以远程执行.\n排序 <a href=\"#!/api/Ext.data.Store-property-sorters\" rel=\"Ext.data.Store-property-sorters\" class=\"docClass\">sorters</a> 和 过滤 <a href=\"#!/api/Ext.data.Store-cfg-filters\" rel=\"Ext.data.Store-cfg-filters\" class=\"docClass\">filters</a> 都是在 <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a> 实例内部执行的, 这种封装使得容易管理和使用.\n通常在 Store的配置项中指定 sorters 和 filters 就可以了,当然也可以调用 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> 和 <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">filter</a> 方法:</p>\n\n<pre><code> var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n     model: 'User',\n     sorters: [{\n         property: 'age',\n         direction: 'DESC'\n     }, {\n         property: 'firstName',\n         direction: 'ASC'\n     }],\n\n     // 必须包含字母E或者d\n     filters: [{\n         property: 'firstName',\n         value: /Ed/\n     }]\n });\n</code></pre>\n\n<p>新的 Store 会将配置的 sorters 和 filters 解析到上面所提到的 MixedCollection 实例中.\n默认情况下, 排序和过滤都会由 Store 在本地执行 -\n如果要让服务器端执行这些操作,请参考 <a href=\"#!/api/Ext.data.Store-cfg-remoteSort\" rel=\"Ext.data.Store-cfg-remoteSort\" class=\"docClass\">remoteSort</a> 以及 <a href=\"#!/api/Ext.data.Store-cfg-remoteFilter\" rel=\"Ext.data.Store-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>.</p>\n\n<p>在 Store 实例化完成之后,再进行过滤与排序也是很容易的.\n调用 <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">filter</a> 方法给 Store 添加另一个过滤器,并自动对数据集进行过滤.\n(如果调用 <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">filter</a> 时不传递任何参数,则只是简单地重新应用一次已经存在的过滤器).\n注意: 默认情况下 <a href=\"#!/api/Ext.data.Store-cfg-sortOnFilter\" rel=\"Ext.data.Store-cfg-sortOnFilter\" class=\"docClass\">sortOnFilter</a> 是设置为 true 的, 这意味着如果使用本地排序的话,会自动地再次使用你的sorters.</p>\n\n<pre><code> store.filter('eyeColor', 'Brown');\n</code></pre>\n\n<p>在任意时刻调用 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> 来改变排序列:</p>\n\n<pre><code> store.sort('height', 'ASC');\n</code></pre>\n\n<p>注意: 为了支持新的 sorter, 所有已存在的 sorters 将会被删除.\n(如果调用 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> 时不传递任何参数, 已存在的 sorters会被重新应用,而不是被替换).\n要继续保持已存在的 sorters,并添加一个新的Sorter排序机, 只需要将其添加到 MixedCollection 即可:</p>\n\n<pre><code> store.sorters.add(new <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>({\n     property : 'shoeSize',\n     direction: 'ASC'\n }));\n\n store.sort();\n</code></pre>\n\n<h2>在 StoreManager 中注册</h2>\n\n<p>使用 <a href=\"#!/api/Ext.data.Store-cfg-storeId\" rel=\"Ext.data.Store-cfg-storeId\" class=\"docClass\">storeId</a> 配置项实例化的所有 Store 都会自动注册到 <a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">StoreManager</a>.\n这种特性使得在不同的view中可以使用同一个 store:</p>\n\n<pre><code> // store 可以被多次使用\n <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n     model: 'User',\n     storeId: 'usersStore'\n });\n\n new Ext.List({\n     store: 'usersStore',\n     //其他配置信息 ...\n });\n\n new <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">Ext.view.View</a>({\n     store: 'usersStore',\n     //其他配置信息 ...\n });\n</code></pre>\n\n<h2>延伸阅读</h2>\n\n<p>Store 由一系列类组成的生态系统支撑其运行。\n要全面理解这些类,以及他们是如何组合在一起的,请查看:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a> - 什么是代理以及如何使用代理</li>\n<li><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> - 数据集里的核心类</li>\n<li><a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">Reader</a> - 使用 <a href=\"#!/api/Ext.data.proxy.Server\" rel=\"Ext.data.proxy.Server\" class=\"docClass\">ServerProxy</a> 的子类来读取服务器响应信息</li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-autoLoad' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-autoLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-autoLoad' class='name expandable'>autoLoad</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>如果data属性未定义, 并且autoLoad值为'true'或对象, 则此store的load方法将在创建后自动执行. ...</div><div class='long'><p>如果data属性未定义, 并且autoLoad值为'true'或对象, 则此store的load方法将在创建后自动执行. 如果autoLoad值是一个对象, 这个对象将\n作为参数传递给load方法.\n默认为'false'.</p>\n</div></div></div><div id='cfg-autoSync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-autoSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-autoSync' class='name expandable'>autoSync</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>'true'表示每当对一条Record记录完成修改后, 都将对Store与Proxy进行同步. ...</div><div class='long'><p>'true'表示每当对一条Record记录完成修改后, 都将对Store与Proxy进行同步. 默认为'false'.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-buffered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-buffered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-buffered' class='name expandable'>buffered</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>允许Store去预取多页的数据并缓存在 page cache 中, 然后就可以通过页面缓存满足loading的需求. ...</div><div class='long'><p>允许Store去预取多页的数据并缓存在 <strong>page cache</strong> 中, 然后就可以通过页面缓存满足loading的需求.</p>\n\n<p>使用 buffered Stores时, 加载第一页是就会启动缓冲的过程.\n渲染的行数是自动确定的, 而且需要保持在cache中用于滚动的页面范围会被请求和缓存下来.\nExample:</p>\n\n<p>   // 加载第 1 页\n   myStore.loadPage(1);</p>\n\n<p>一个 <a href=\"#!/api/Ext.grid.PagingScroller\" rel=\"Ext.grid.PagingScroller\" class=\"docClass\">PagingScroller</a> 会被实例化,\n用来监听grid的滚动, 并在需要的时候从page cache中刷新 view的行.\n也利用预取数据在视图滚动到两端附近 时将新的数据放入page cache中.</p>\n\n<p>触发view从预取数据刷新的边界(margins)包括: <a href=\"#!/api/Ext.grid.PagingScroller-cfg-numFromEdge\" rel=\"Ext.grid.PagingScroller-cfg-numFromEdge\" class=\"docClass\">Ext.grid.PagingScroller.numFromEdge</a>,\n<a href=\"#!/api/Ext.grid.PagingScroller-cfg-leadingBufferZone\" rel=\"Ext.grid.PagingScroller-cfg-leadingBufferZone\" class=\"docClass\">Ext.grid.PagingScroller.leadingBufferZone</a> 以及 <a href=\"#!/api/Ext.grid.PagingScroller-cfg-trailingBufferZone\" rel=\"Ext.grid.PagingScroller-cfg-trailingBufferZone\" class=\"docClass\">Ext.grid.PagingScroller.trailingBufferZone</a>.</p>\n\n<p>触发加载更多数据到 page cache 的边界(margins)包括: <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> 和 <a href=\"#!/api/Ext.data.Store-cfg-trailingBufferZone\" rel=\"Ext.data.Store-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a>.</p>\n\n<p>默认情况下, 只有 5 个 page 的数据缓存在 page cache 中, 通过数据集的视图向下移动,页面会 \"滚动\" 出缓冲.\n可以通过设置 purgePageSize 值来增加缓存的页数,\n将这个值设为 0 则意味着没有页面是 <em>曾经</em> 滚动出page cache的范围,\n而且最终可能整个数据集都会出现在 page cache中.\n这有时是可取的,只要数据(datasets)没有达到天文数字的比例.</p>\n\n<p>选择状态(Selection state)可以跨页保存下来,\n通过配置 SelectionModel,当这些记录周期超出Store的主要集合(primary collection)时,\n不要将其从集合中丢弃(discard). This is done\n此时,可以像下面这样配置 SelectionModel :</p>\n\n<p>   selModel: {</p>\n\n<pre><code>   pruneRemoved: false\n</code></pre>\n\n<p>   }</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-clearOnPageLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-clearOnPageLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-clearOnPageLoad' class='name expandable'>clearOnPageLoad</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为 true 则当通过loadPage、nextPage或 previousPage 来加载另一页时会清空 store. ...</div><div class='long'><p>设置为 true 则当通过<a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>、<a href=\"#!/api/Ext.data.Store-method-nextPage\" rel=\"Ext.data.Store-method-nextPage\" class=\"docClass\">nextPage</a>或 <a href=\"#!/api/Ext.data.Store-method-previousPage\" rel=\"Ext.data.Store-method-previousPage\" class=\"docClass\">previousPage</a> 来加载另一页时会清空 store.\n设置为 false 则保持已存在的记录, 允许一次加载大量的数据集到一页中,但是渲染在一起.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-clearRemovedOnLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-clearRemovedOnLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-clearRemovedOnLoad' class='name expandable'>clearRemovedOnLoad</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果设置为 true,则在store进行load数据时,清空 removed 记录列表里的所有数据. ...</div><div class='long'><p>如果设置为 true,则在store进行load数据时,清空 <a href=\"#!/api/Ext.data.Store-property-removed\" rel=\"Ext.data.Store-property-removed\" class=\"docClass\">removed</a> 记录列表里的所有数据.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-data' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-data' class='name expandable'>data</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span></div><div class='description'><div class='short'>本地加载的数组,或者Model 实例数组,或者数据对象数组. ...</div><div class='long'><p>本地加载的数组,或者Model 实例数组,或者数据对象数组. 详细信息请参考上面的 \"内联数据\".</p>\n</div></div></div><div id='cfg-fields' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-fields' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-fields' class='name expandable'>fields</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span></div><div class='description'><div class='short'>此参数可以用来代替model参数. ...</div><div class='long'><p>此参数可以用来代替<a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a>参数. fields值应该是一个<a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a>属性对象的集合. store对象将\n自动使用此参数的值来创建一个<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>数据模型. 通常应该避免使用此参数, 它只是为了向下兼容而存在.\n对于任何稍复杂的情况, 比如制定一个特定的ID或关联关系, 都应该定义一个<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>模型对象并通过\n<a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a>参数指定给当前store.</p>\n</div></div></div><div id='cfg-filters' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-filters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-filters' class='name not-expandable'>filters</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span></div><div class='description'><div class='short'><p>当前store对象的<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a>过滤器数组.</p>\n</div><div class='long'><p>当前store对象的<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a>过滤器数组.</p>\n</div></div></div><div id='cfg-groupDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-groupDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-groupDir' class='name expandable'>groupDir</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>在 grouping 时的排序方向. ...</div><div class='long'><p>在 grouping 时的排序方向. 值可以是 \"ASC\" 或者 \"DESC\".</p>\n<p>Defaults to: <code>&quot;ASC&quot;</code></p></div></div></div><div id='cfg-groupField' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-groupField' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-groupField' class='name expandable'>groupField</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>需要分组的域. ...</div><div class='long'><p>需要分组的域. 在内部, grouping和sorting非常相似 -\ngroupField 以及 <a href=\"#!/api/Ext.data.Store-cfg-groupDir\" rel=\"Ext.data.Store-cfg-groupDir\" class=\"docClass\">groupDir</a> 和第一个排序机(sorter,参见 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a>)采用同样的注入方式.\nStores 支持单层分组, 并且分组以后的 组(groups)可以通过 <a href=\"#!/api/Ext.data.Store-method-getGroups\" rel=\"Ext.data.Store-method-getGroups\" class=\"docClass\">getGroups</a> 方法获取.</p>\n</div></div></div><div id='cfg-leadingBufferZone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-leadingBufferZone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-leadingBufferZone' class='name expandable'>leadingBufferZone</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>每当表格请求重新渲染的行时，在返回请求行之后，\nStore会确保缓存中的数据涵盖两个区域所需的数据，如果数据不在缓存，\n则会向服务器请求数据, 保持在可视区域下已渲染的记录数. ...</div><div class='long'><p>每当表格请求重新渲染的行时，在返回请求行之后，\nStore会确保缓存中的数据涵盖两个区域所需的数据，如果数据不在缓存，\n则会向服务器请求数据, 保持在可视区域下已渲染的记录数.\n一个更大的数字意味着需要从服务器补充(replenishments)的次数更少.</p>\n<p>Defaults to: <code>200</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-cfg-listeners' class='name expandable'>listeners</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个配置对象，包含一个或多个事件处理函数，在对象初始化时添加到对象。 ...</div><div class='long'><p>一个配置对象，包含一个或多个事件处理函数，在对象初始化时添加到对象。\n它应该是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>指定的一个有效的监听器配置对象，\n一次添加多个事件处理函数。</p>\n\n<p><strong>Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">组建</a>的DOM事件</strong></p>\n\n<p>虽然<em>一些</em>Ext JS组件类输出选定的DOM事件（例如\"click\"、\"mouseover\"等),\n但是这只能通过添加额外的值（如果能）。例如，<a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>的<strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>传递被单击的节点。为了通过Component的子元素直接访问DOM事件，\n我们需要指定<code>element</code>选项来标识要\n添加DOM监听器的Component属性：</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n</div></div></div><div id='cfg-model' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-model' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-model' class='name expandable'>model</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当前store对象的Model数据模型的名称. ...</div><div class='long'><p>当前store对象的<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>数据模型的名称. 此字符串将作为一个参数来调用<a href=\"#!/api/Ext.ModelManager-method-getModel\" rel=\"Ext.ModelManager-method-getModel\" class=\"docClass\">Ext.ModelManager.getModel</a>.</p>\n</div></div></div><div id='cfg-pageSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-pageSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-pageSize' class='name expandable'>pageSize</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>组成一页'page'的记录数量. ...</div><div class='long'><p>组成一页'page'的记录数量.\n当grig通过一个<a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">PagingScroller</a>来分页时,\n此参数用于内置的 nextPage 以及 previousPage 函数.\n默认值是 25.</p>\n\n<p>如果Store配置为<a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a> 的, 在 Store 的数据从cache更新之前, 页面(pages)就已经被加载到page cache 中了.\npageSize就是一次请求加载到cache中的行数.\n这不会影响到buffered grid的渲染(rendering), 但是page size大意味着加载次数少.</p>\n\n<p>在一个 buffered grid 中, 滚动(scrolling)是被监听着的, 页面缓存(page cache)会准备好滚动前方的数据，\n当继续滚动而需要时可以快速地得到这些数据. 根据几个参数可能会提前请求一些pages.</p>\n\n<p>实际使用中,请根据您的应用程序的相关需求适当调整 <a href=\"#!/api/Ext.data.Store-cfg-pageSize\" rel=\"Ext.data.Store-cfg-pageSize\" class=\"docClass\">pageSize</a>, <a href=\"#!/api/Ext.data.Store-cfg-trailingBufferZone\" rel=\"Ext.data.Store-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a> 以及\n<a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> 配置项.</p>\n\n<p>提供的 SDK 示例 <code>examples/grid/infinite-scroll-grid-tuner.html</code>\n可以用来测试不同的设置,包括 Ajax 延迟.</p>\n</div></div></div><div id='cfg-proxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-proxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-proxy' class='name expandable'>proxy</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>此Store使用的Proxy. ...</div><div class='long'><p>此Store使用的Proxy. 可以配置为字符串(string), 配置对象(config object)或者是Proxy实例-\n详细信息请查看 <a href=\"#!/api/Ext.data.Store-method-setProxy\" rel=\"Ext.data.Store-method-setProxy\" class=\"docClass\">setProxy</a>.</p>\n<p>Overrides: <a href='#!/api/Ext.data.AbstractStore-cfg-proxy' rel='Ext.data.AbstractStore-cfg-proxy' class='docClass'>Ext.data.AbstractStore.proxy</a></p></div></div></div><div id='cfg-purgePageCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-purgePageCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-purgePageCount' class='name expandable'>purgePageCount</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>只在使用 buffered Store 时才有效. ...</div><div class='long'><p><em>只在使用 <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a> Store 时才有效.</em></p>\n\n<p>在清除最近最少使用记录之前, 保持在预取缓存中 <em>额外需要缓存</em> 的页面数量.</p>\n\n<p>例如, 根据视图区域的高度 以及 配置的 trailingBufferZone 和 <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a>\n计算得出要在cache中缓存 3 个 pages, 那么设置 <code>purgePageCount</code> 为 5 则可以确保任意时刻最多可以有 8 个 page 在 page cache中.</p>\n\n<p>值为 0 则表示从不清除预提取的数据.</p>\n<p>Defaults to: <code>5</code></p></div></div></div><div id='cfg-remoteFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-remoteFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-remoteFilter' class='name expandable'>remoteFilter</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为 true 则将所有的过滤操作推迟到服务器. ...</div><div class='long'><p>设置为 true 则将所有的过滤操作推迟到服务器. 如果设置为 false, 则在客户端本地过滤.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-remoteGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-remoteGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-remoteGroup' class='name expandable'>remoteGroup</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果分组(grouping)应该在服务端执行,则设置为true,如果设置为false 则只在本地执行. ...</div><div class='long'><p>如果分组(grouping)应该在服务端执行,则设置为true,如果设置为false 则只在本地执行.  If the\n如果分组(grouping)是本地的,那么可以立即被应用到数据中.\n如果是远程的, 则只会简单地扮演 helper, 自动发送 grouping 信息给 server.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-remoteSort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-remoteSort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-remoteSort' class='name expandable'>remoteSort</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为 true 则将所有的排序操作推迟到服务器. ...</div><div class='long'><p>设置为 true 则将所有的排序操作推迟到服务器. 如果设置为 false, 则在客户端本地排序.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-sortOnFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-sortOnFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-sortOnFilter' class='name expandable'>sortOnFilter</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>只对本地过滤有效, 只要调用了 filter，就会导致 sort 被调用,\n因此在过滤之后排序机将会被重新应用. ...</div><div class='long'><p>只对本地过滤有效, 只要调用了 <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">filter</a>，就会导致 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> 被调用,\n因此在过滤之后排序机将会被重新应用. 默认值是 true</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-storeId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-cfg-storeId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-cfg-storeId' class='name expandable'>storeId</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当前store对象的唯一标识ID. ...</div><div class='long'><p>当前store对象的唯一标识ID. 当此值存在时, 当前Store将被注册到<a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Ext.data.StoreManager</a>中, 从而可以在别处轻松创建.</p>\n\n<p>注意当sotre对象是由Controller进行实例化时, storeId值将被store的名称覆盖.</p>\n</div></div></div><div id='cfg-trailingBufferZone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-cfg-trailingBufferZone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-cfg-trailingBufferZone' class='name expandable'>trailingBufferZone</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>每当表格请求重新渲染的行时，在返回请求行之后，\nStore会确保缓存中的数据涵盖两个区域所需的数据，如果数据不在缓存，\n则会向服务器请求数据, 保持在可视区域上的已渲染记录数. ...</div><div class='long'><p>每当表格请求重新渲染的行时，在返回请求行之后，\nStore会确保缓存中的数据涵盖两个区域所需的数据，如果数据不在缓存，\n则会向服务器请求数据, 保持在可视区域上的已渲染记录数.\n一个更大的数字意味着需要从服务器补充(replenishments)的次数更少.</p>\n<p>Defaults to: <code>25</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-onExtended' class='name expandable'>$onExtended</a><span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>扩展事件 ...</div><div class='long'><p>扩展事件</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-batchUpdateMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-batchUpdateMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-batchUpdateMode' class='name expandable'>batchUpdateMode</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>设置更新操作为批量同步更新. ...</div><div class='long'><p>设置更新操作为批量同步更新. 'operation'(默认)表示Store的内部数据会在批处理的每次操作完成后更新, 'complete'表示Store的数据\n会等到整个批处理全部完成后再更新. 在使用本地数据代理时选择'complete'比较合适, 而'operation'更适用于相对延时较高的远程代理.</p>\n<p>Defaults to: <code>&quot;operation&quot;</code></p></div></div></div><div id='property-currentPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-property-currentPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-property-currentPage' class='name expandable'>currentPage</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>Store 最后一次load的页 (参见 loadPage) ...</div><div class='long'><p>Store 最后一次load的页 (参见 <a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>)</p>\n<p>Defaults to: <code>1</code></p></div></div></div><div id='property-data' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-property-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-property-data' class='name not-expandable'>data</a><span> : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span></div><div class='description'><div class='short'><p>持有 store 的本地缓存记录的 对象集合(MixedCollection).</p>\n</div><div class='long'><p>持有 store 的本地缓存记录的 对象集合(MixedCollection).</p>\n</div></div></div><div id='property-defaultProxyType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-defaultProxyType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-defaultProxyType' class='name expandable'>defaultProxyType</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>默认的Proxy代理对象字符串类型. ...</div><div class='long'><p>默认的Proxy代理对象字符串类型. 默认值为创建一个<a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">Memory内存代理</a>.</p>\n<p>Defaults to: <code>&quot;memory&quot;</code></p></div></div></div><div id='property-defaultSortDirection' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-property-defaultSortDirection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-property-defaultSortDirection' class='name expandable'>defaultSortDirection</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>默认的排序方向 ...</div><div class='long'><p>默认的排序方向</p>\n<p>Defaults to: <code>&quot;ASC&quot;</code></p></div></div></div><div id='property-filterOnLoad' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-filterOnLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-filterOnLoad' class='name expandable'>filterOnLoad</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>'true'表示此Store所有附属的过滤器都会在加载数据之后, datachanged事件触发之前执行. ...</div><div class='long'><p>'true'表示此Store所有附属的过滤器都会在加载数据之后, datachanged事件触发之前执行. 默认为'true', 当\n<a href=\"#!/api/Ext.data.Store-cfg-remoteFilter\" rel=\"Ext.data.Store-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a>为'true'时此参数被忽略.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-filters' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-filters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-filters' class='name not-expandable'>filters</a><span> : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span></div><div class='description'><div class='short'><p>立刻添加到此Store对象的<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a>过滤器集合.</p>\n</div><div class='long'><p>立刻添加到此Store对象的<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a>过滤器集合.</p>\n</div></div></div><div id='property-groupers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-property-groupers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-property-groupers' class='name not-expandable'>groupers</a><span> : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span></div><div class='description'><div class='short'><p>当前应用到此Store的 <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Groupers</a> 集合.</p>\n</div><div class='long'><p>当前应用到此Store的 <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Groupers</a> 集合.</p>\n</div></div></div><div id='property-hasListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-property-hasListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-hasListeners' class='name expandable'>hasListeners</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>本对象包含任何有监听器的事件的键。监听器可以在实例上直接设置，\n或者在其类或者父类(通过observe)\n或者在MVC EventBus上设置。本对象的值为真\n(一个非零的数字)和假(0或者undefined)。它们并不代表确切的监听...</div><div class='long'><p>本对象包含任何有监听器的事件的键。监听器可以在实例上直接设置，\n或者在其类或者父类(通过<a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>)\n或者在<a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>上设置。本对象的值为真\n(一个非零的数字)和假(0或者undefined)。它们并不代表确切的监听器数量。\n如果事件必须被触发，它的值是真的，\n如果没有必要，就是假的。</p>\n\n<p>本属性的设计目的是避免没有监听器时调用fireEvent的开销。\n如果fireEvent要调用成百上千次，这尤其有用。\n用法:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n</div></div></div><div id='property-implicitModel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-implicitModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-implicitModel' class='name expandable'>implicitModel</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>'true'表示model模型对象将由Store内部创建. ...</div><div class='long'><p>'true'表示model模型对象将由Store内部创建. 这种情况发生在使用fields数组而不是model对象或名称来创建Store时.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-isDestroyed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-isDestroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-isDestroyed' class='name expandable'>isDestroyed</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>'true'表示Store已被销毁. ...</div><div class='long'><p>'true'表示Store已被销毁. 如果此值为true, 所有对当前Store的引用都应被删除, 因为此时所有的方法都已经不再保证能够正确执行.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-isObservable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-property-isObservable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-isObservable' class='name expandable'>isObservable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>在本类中设置为true将一个对象标识为实例化的Observable或其子类。 ...</div><div class='long'><p>在本类中设置为<code>true</code>将一个对象标识为实例化的Observable或其子类。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isSortable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-property-isSortable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-property-isSortable' class='name expandable'>isSortable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true将某个对象标识为实例化的Sortable或其子类。 ...</div><div class='long'><p>设置为<code>true</code>将某个对象标识为实例化的Sortable或其子类。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isStore' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-isStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-isStore' class='name expandable'>isStore</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>用true来标识当前对象为一个Store或子类的实例. ...</div><div class='long'><p>用<code>true</code>来标识当前对象为一个Store或子类的实例.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-loading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-property-loading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-property-loading' class='name expandable'>loading</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>如果 Store 当前正在通过 Proxy 加载数据则为 true ...</div><div class='long'><p>如果 Store 当前正在通过 Proxy 加载数据则为 true</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-modelDefaults' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-modelDefaults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-modelDefaults' class='name expandable'>modelDefaults</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>一组默认值, 将被应用到所有通过insert添加或create创建的数据实例中. ...</div><div class='long'><p>一组默认值, 将被应用到所有通过insert添加或<a href=\"#!/api/Ext.data.AbstractStore-static-method-create\" rel=\"Ext.data.AbstractStore-static-method-create\" class=\"docClass\">create</a>创建的数据实例中.\n此参数由关联模型在内部使用, 用来为外键和其他字段赋值.\n可在Association类源码中查看相关示例. 应用程序开发人员通常不需要使用此参数.</p>\n</div></div></div><div id='property-removed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-removed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-removed' class='name expandable'>removed</a><span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>被删除的数据实例的临时缓存, 直到Proxy成功执行同步后清空. ...</div><div class='long'><p>被删除的数据实例的临时缓存, 直到Proxy成功执行同步后清空.</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>本身\n\n获取当前类的引用，此对象被实例化。不同于 statics,\nthis.self是依赖范围，它意味着要使用动态继承。 ...</div><div class='long'><p>本身</p>\n\n<p>获取当前类的引用，此对象被实例化。不同于 <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code>是依赖范围，它意味着要使用动态继承。\n参见 <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> 详细对比</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // 依赖 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat' 猫\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard' 雪豹\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div><div id='property-snapshot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-property-snapshot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-property-snapshot' class='name expandable'>snapshot</a><span> : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span></div><div class='description'><div class='short'>快照,store中一个原始的 (未过滤的) 记录集合. ...</div><div class='long'><p>快照,store中一个原始的 (未过滤的) 记录集合. 用来在filter发生改变或被删除时进行数据恢复.</p>\n</div></div></div><div id='property-sortOnLoad' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-property-sortOnLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-property-sortOnLoad' class='name expandable'>sortOnLoad</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>'true'表示此Store所有排序都会在加载数据之后, datachanged事件触发之前执行. ...</div><div class='long'><p>'true'表示此Store所有排序都会在加载数据之后, datachanged事件触发之前执行. 默认为'true', 当\n<a href=\"#!/api/Ext.data.Store-cfg-remoteSort\" rel=\"Ext.data.Store-cfg-remoteSort\" class=\"docClass\">remoteSort</a>为'true'时此参数被忽略.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-sortRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-property-sortRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-property-sortRoot' class='name not-expandable'>sortRoot</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>每个包含待排序数据的项的属性</p>\n</div><div class='long'><p>每个包含待排序数据的项的属性</p>\n</div></div></div><div id='property-sorters' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-property-sorters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-property-sorters' class='name not-expandable'>sorters</a><span> : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span></div><div class='description'><div class='short'><p>应用于当前Store的<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">排序器</a>集合</p>\n</div><div class='long'><p>应用于当前Store的<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">排序器</a>集合</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.data.Store-method-constructor' class='name expandable'>Ext.data.Store</a>( <span class='pre'>[<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>创建store. ...</div><div class='long'><p>创建store.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>配置对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-add' class='name expandable'>add</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>... model</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>添加 Model 实例到 Store. ...</div><div class='long'><p>添加 Model 实例到 Store. 本方法接收的参数可以是:</p>\n\n<ul>\n<li>由 Model 实例 或者是 Model 配置对象 组成的数组.</li>\n<li>任意数量的 Model 实例 或者是 Model 配置对象;(可以是多个参数的情况).</li>\n</ul>\n\n\n<p>新的 Model 实例将被添加到已存在的数据集合末尾.</p>\n\n<p>用法示例:</p>\n\n<pre><code>myStore.add({some: 'data'}, {some: 'other data'});\n</code></pre>\n\n<p>注意: 如果 Store 已经排好序,则新的 Model 对象将被插入到适当的位置,以保持排序顺序.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>...<div class='sub-desc'><p>可以是由 Model 实例/配置对象 组成的数组,\n也可以是任意数量的 Model 实例,或者配置对象 组成的多个参数.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>已被添加到store中的model实例</p>\n</div></li></ul></div></div></div><div id='method-addConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>添加配置 ...</div><div class='long'><p>添加配置</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... eventNames</span> )</div><div class='description'><div class='short'>向本Observable可能触发的事件列表中添加指定的事件。 ...</div><div class='long'><p>向本Observable可能触发的事件列表中添加指定的事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventNames</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>要么是有事件名作为属性，属性值为\n<code>true</code>的对象。例如:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>要么是作为参数的任意个数的事件名。例如:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n</div></li></ul></div></div></div><div id='method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eventName, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>向本对象添加一个事件处理函数，例如:\n\nmyGridPanel.on(\"mouseover\", this.onMouseOver, this);\n\n\n这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:\n\n...</div><div class='long'><p>向本对象添加一个事件处理函数，例如:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>你也能为每个事件处理函数单独指定选项：</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p>也能使用在特定作用域的方法<em>名</em>。注意\n必须指定<code>scope</code>:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>被监听的事件名。\n也可以是属性名字是事件名字的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>事件调用的方法, 或者<em>如果指定了<code>scope</code>，在指定<code>scope</code>的方法</em>名*。\n会被调用，\n参数为<a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a>的参数加上下述<code>options</code>参数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>包含事件处理函数配置的对象。</p>\n\n\n\n\n<p><strong>注意:</strong> 不像ExtJS 3.x, options对象也会作为最后一个参数\n传递给每一个事件处理函数。</p>\n\n\n\n\n<p>这个对象可能包含以下任何一个属性:</p>\n\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>事件触发后，调用事件处理函数延时毫秒数。</p>\n\n</div></li><li><span class='pre'>single</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为true添加一个事件处理函数，只处理下一次触发的事件, 然后移除这个函数。</p>\n\n</div></li><li><span class='pre'>buffer</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>使事件处理函数在<a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a>中调度运行，\n  延时指定的毫秒数。如果事件在这段事件再次触发，\n  原先的事件处理函数<em>不</em>再调用, 新的事件处理函数接替。</p>\n\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><div class='sub-desc'><p>只有当事件在目标Observable上触发时调用事件处理函数,\n  如果事件是从Observable的子类起泡的，<em>不会</em>调用事件处理函数</p>\n\n</div></li><li><span class='pre'>element</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p><strong>这个选项只对绑定在<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>上的监听器有效。</strong>\n  Component的一个属性名，这个属性引用一个待添加监听器的元素</p>\n\n\n\n\n<p>  这个选项在Component构造过程中向<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>的元素添加DOM事件监听器有用。\n  这些元素只有在Component渲染之后才会存在。\n  例如, 向Panel的body中添加click监听器:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p><strong>组合选项</strong></p>\n\n\n\n\n<p>使用options参数, 可以组合不同类型的监听器：</p>\n\n\n\n\n<p>一个延时的一次性监听器：</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n</div></li></ul></div></li></ul></div></div></div><div id='method-addManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addManagedListener' class='name expandable'>addManagedListener</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> opt</span> )</div><div class='description'><div class='short'>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除 ...</div><div class='long'><p>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>添加监听器的目标项。</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li><li><span class='pre'>opt</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的)如果<code>ename</code>参数是事件名,\n这就是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的选项。</p>\n\n</div></li></ul></div></div></div><div id='method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addMember' class='name expandable'>addMember</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> member</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li><li><span class='pre'>member</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='method-addSorted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-addSorted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-addSorted' class='name expandable'>addSorted</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Record</a> record</span> )</div><div class='description'><div class='short'>(只用于本地排序) 根据当前的排序规则,将给定的记录插入到Store中适当的位置. ...</div><div class='long'><p>(只用于本地排序) 根据当前的排序规则,将给定的记录插入到Store中适当的位置.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Record</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addXtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addXtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addXtype' class='name expandable'>addXtype</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> xtype</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>添加 Xtype ...</div><div class='long'><p>添加 Xtype</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterCommit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-afterCommit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-afterCommit' class='name expandable'>afterCommit</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>当一个数据实例执行了Ext.data.Model.join方法后, 应调用Store的此函数.. ...</div><div class='long'><p>当一个数据实例执行了<a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">Ext.data.Model.join</a>方法后, 应调用Store的此函数..</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>被编辑的数据实例</p>\n</div></li></ul></div></div></div><div id='method-afterEdit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-afterEdit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-afterEdit' class='name expandable'>afterEdit</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] modifiedFieldNames</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>当一个数据实例执行了Ext.data.Model.join方法后, 应调用Store的此函数. ...</div><div class='long'><p>当一个数据实例执行了<a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">Ext.data.Model.join</a>方法后, 应调用Store的此函数.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>被编辑的数据实例</p>\n</div></li><li><span class='pre'>modifiedFieldNames</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>编辑时修改的字段的名称数组.</p>\n</div></li></ul></div></div></div><div id='method-afterReject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-afterReject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-afterReject' class='name expandable'>afterReject</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>当一个数据实例执行了Ext.data.Model.join方法后, 应调用Store的此函数.. ...</div><div class='long'><p>当一个数据实例执行了<a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">Ext.data.Model.join</a>方法后, 应调用Store的此函数..</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>被编辑的数据实例</p>\n</div></li></ul></div></div></div><div id='method-aggregate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-aggregate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-aggregate' class='name expandable'>aggregate</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped], [<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>以store中的所有记录为基础来运行aggregate(汇总)函数 . ...</div><div class='long'><p>以store中的所有记录为基础来运行aggregate(汇总)函数 .</p>\n\n<p>如果store有过滤器, 则只有过滤后的数据会被汇总(aggregated).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要执行的函数. 此函数被调用时将会收到单个参数,即所在组的数据组成的数组.</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>要执行函数的作用域. 默认就是 store对象.</p>\n</div></li><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由  group name 作为key,而分组的相关数据将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> (optional)<div class='sub-desc'><p>要附加到函数调用(function call)的所有参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>组名以及适当的值组成的字面量对象.</p>\n</div></li></ul></div></div></div><div id='method-average' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-average' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-average' class='name expandable'>average</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> field, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>获取 store 中Model的某个域的平均值. ...</div><div class='long'><p>获取 store 中Model的某个域的平均值.</p>\n\n<p>如果store有过滤器,则只有过滤后通过的元素会被计算进来。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要进行统计的每条记录里的域</p>\n</div></li><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由group name 作为key,而分组的平均值(group average)将会成为对应值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>平均值, 如果没有 items 存在,则返回 0.</p>\n</div></li></ul></div></div></div><div id='method-cachePage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-cachePage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-cachePage' class='name expandable'>cachePage</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> page</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>在 prefetch 时,缓存记录 and 根据服务端的 index 进行分页. ...</div><div class='long'><p>在 prefetch 时,缓存记录 and 根据服务端的 index 进行分页.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>要缓存的记录</p>\n</div></li><li><span class='pre'>page</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>相关的操作</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments </span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>调用原来的方法，这是以前的override重写\n\nExt.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n...</div><div class='long'><p>调用原来的方法，这是以前的<a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a>重写</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1</p>\n        <p>版本 使用 <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> 代替.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>参数的参数，数组或'参数'对象\n来自当前方法，例如： <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回调用重写方法的结果。</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>所谓的\"parent\"方法是指当前的方法。 ...</div><div class='long'><p>所谓的\"parent\"方法是指当前的方法。\n这是以前的方法派生或重写(参见 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>)。</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>这可以用来重写如下:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // 调用原来的My.Derived构造\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // 现在提示 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // 调用 My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>然后，它也可以重写静态方法。</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // 调用 My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // 现在提示 40\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>这个参数, 通过当前方法得到数组或者 <code>arguments</code> 对象,\n例如: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回调用父类的方法的结果。</p>\n</div></li></ul></div></div></div><div id='method-cancelAllPrefetches' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-cancelAllPrefetches' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-cancelAllPrefetches' class='name expandable'>cancelAllPrefetches</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>取消所有等待中的预取请求. ...</div><div class='long'><p>取消所有等待中的预取请求.</p>\n\n<p>当 page map 被清空是会被调用.</p>\n\n<p>当前的所有请求都会打上 上一代的标签.\n(generation代 会随着 clear操作增长), 并拒绝迟来的上代数据.</p>\n</div></div></div><div id='method-clearFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-clearFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-clearFilter' class='name expandable'>clearFilter</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> suppressEvent</span> )</div><div class='description'><div class='short'>清空过滤器,将 Record cache 恢复到没有过滤的情况. ...</div><div class='long'><p>清空过滤器,将 Record cache 恢复到没有过滤的情况.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>suppressEvent</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>如果设置为 <code>true</code>,则会静默清除.</p>\n\n<p>对于使用本地过滤的 Store, 意味着清空 filter 集合,却不触发任何 <a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a> 事件.</p>\n\n<p>对于使用服务端过滤的 Store, 意味着清空 filter, 却不重新从服务端加载数据.</p>\n</div></li></ul></div></div></div><div id='method-clearGrouping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-clearGrouping' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-clearGrouping' class='name expandable'>clearGrouping</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>清空此store内部所有的groupers(分组对象) ...</div><div class='long'><p>清空此store内部所有的groupers(分组对象)</p>\n</div></div></div><div id='method-clearListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-clearListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearListeners' class='name expandable'>clearListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>移除本对象的包括受管理的监听器在内的所有监听器 ...</div><div class='long'><p>移除本对象的包括受管理的监听器在内的所有监听器</p>\n</div></div></div><div id='method-clearManagedListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-clearManagedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearManagedListeners' class='name expandable'>clearManagedListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>移除本对象的所有受管理的监听器 ...</div><div class='long'><p>移除本对象的所有受管理的监听器</p>\n</div></div></div><div id='method-collect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-collect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-collect' class='name expandable'>collect</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> dataIndex, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> allowNull], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> bypassFilter]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</div><div class='description'><div class='short'>获得指定的dataIndex对应的那一列的独特值. ...</div><div class='long'><p>获得指定的dataIndex对应的那一列的独特值.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dataIndex</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要收集的属性</p>\n</div></li><li><span class='pre'>allowNull</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>传入 true 则允许返回 null, undefined 以及 空字符串</p>\n</div></li><li><span class='pre'>bypassFilter</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>传入 true 则结果不受过滤器的影响,从所有记录中获取.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span><div class='sub-desc'><p>指定列数据组成的数组</p>\n</div></li></ul></div></div></div><div id='method-commitChanges' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-commitChanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-commitChanges' class='name expandable'>commitChanges</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>提交所有 未完成更改(outstanding changes) 的记录. ...</div><div class='long'><p>提交所有 <a href=\"#!/api/Ext.data.Store-method-getModifiedRecords\" rel=\"Ext.data.Store-method-getModifiedRecords\" class=\"docClass\">未完成更改(outstanding changes)</a> 的记录.\n要自己处理变化记录的更新，监听 Store 的 <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">update 事件</a>,\n并且当第三个参数是 Ext.data.Record.COMMIT 的时候执行更新.</p>\n</div></div></div><div id='method-continueFireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-continueFireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-continueFireEvent' class='name expandable'>continueFireEvent</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> bubbles</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Continue to fire event. ...</div><div class='long'><p>Continue to fire event.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'>\n</div></li><li><span class='pre'>bubbles</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-count' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-count' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-count' class='name expandable'>count</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>获取 store 中Model的数量. ...</div><div class='long'><p>获取 store 中Model的数量.</p>\n\n<p>如果store有过滤器,则只有过滤后通过的元素会被计算进来。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由 group name 作为key,而分组的记录数量(count)将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>记录数量</p>\n</div></li></ul></div></div></div><div id='method-createFilterFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-createFilterFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-createFilterFn' class='name expandable'>createFilterFn</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> property, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a> value, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> anyMatch], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> caseSensitive], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> exactMatch]</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>返回一个 filter 函数,用来过滤给定的属性的值. ...</div><div class='long'><p>返回一个 filter 函数,用来过滤给定的属性的值.\n大部分依赖 <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> 的 createValueMatcher 方法的功能.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>property</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要创建过滤函数的属性</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><div class='sub-desc'><p>要根据 string/regex 来对比属性值</p>\n</div></li><li><span class='pre'>anyMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果不需要完全匹配,则设置为 true.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>caseSensitive</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果设置为 true,则创建区分大小写的正则, case-sensitive regex.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>exactMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果需要完全匹配,则设置为 true (会在正则表达式中 添加^ and $ 字符).\n如果 anyMatch 设置为 true 则忽略此参数.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-createModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-createModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-createModel' class='name expandable'>createModel</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> record</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>转换字面量对象为model, 如果此对象不是 model 对象 ...</div><div class='long'><p>转换字面量对象为model, 如果此对象不是 model 对象</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要创建的model</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createRelayer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-createRelayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-createRelayer' class='name expandable'>createRelayer</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> newName, [<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> beginEnd]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Creates an event handling function which refires the event from this object as the passed event name. ...</div><div class='long'><p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newName</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>beginEnd</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> (optional)<div class='sub-desc'><p>The caller can specify on which indices to slice</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-decodeFilters' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-decodeFilters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-decodeFilters' class='name expandable'>decodeFilters</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] filters</span> ) : <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>规范化过滤器对象数组, 将他们统一成Ext.util.Filter类的实例. ...</div><div class='long'><p>规范化过滤器对象数组, 将他们统一成Ext.util.Filter类的实例.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>filters</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>过滤器数组</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]</span><div class='sub-desc'><p>Ext.util.Filter对象数组</p>\n</div></li></ul></div></div></div><div id='method-decodeGroupers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-decodeGroupers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-decodeGroupers' class='name expandable'>decodeGroupers</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] groupers</span> ) : <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>私有方法, 转化(Normalizes,正常化) 一个grouper对象组成的数组, 确保他们都是 Ext.util.Grouper 的实例. ...</div><div class='long'><p>私有方法, 转化(Normalizes,正常化) 一个grouper对象组成的数组, 确保他们都是 <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a> 的实例.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groupers</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>组grouper对象 数组</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[]</span><div class='sub-desc'><p>数组,由 <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a> 对象组成.</p>\n</div></li></ul></div></div></div><div id='method-decodeSorters' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-method-decodeSorters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-method-decodeSorters' class='name expandable'>decodeSorters</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] sorters</span> ) : <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Normalizes an array of sorter objects, ensuring that they are all Ext.util.Sorter instances ...</div><div class='long'><p>Normalizes an array of sorter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sorters</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>The sorters array</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]</span><div class='sub-desc'><p>Array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> objects</p>\n</div></li></ul></div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-each' class='name expandable'>each</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )</div><div class='description'><div class='short'>为 Store中的每条记录 record 调用指定的函数. ...</div><div class='long'><p>为 Store中的每条记录 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> 调用指定的函数.</p>\n\n<p>如果store有过滤器, 则只对过滤后的数据进行调用.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要调用的函数. 传给此函数的第一个参数是 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Record</a>.\n返回 <code>false</code> 则取消,并退出整个迭代过程.</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>函数执行的作用域(即this 引用).\n默认是迭代之中的当前记录 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> .</p>\n</div></li></ul></div></div></div><div id='method-enableBubble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-enableBubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-enableBubble' class='name expandable'>enableBubble</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] eventNames</span> )</div><div class='description'><div class='short'>通过调用this.getBubbleTarget()（如果存在）允许本Observable对象触发的事件沿着继承体系起泡\n在Observable基类中没有实现类。 ...</div><div class='long'><p>通过调用<code>this.getBubbleTarget()</code>（如果存在）允许本Observable对象触发的事件沿着继承体系起泡\n在Observable基类中没有实现类。</p>\n\n<p>这通常被Ext.Components用来将事件起泡到它的容器。\n见<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>。Ext.Component中的默认实现\n返回Component的直接容器。但是如果需要一个明显的target, 它可以被重写\n以更快地访问需要的target。</p>\n\n<p>使用范例:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-override\" rel=\"Ext-method-override\" class=\"docClass\">Ext.override</a>(<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>, {\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent : <a href=\"#!/api/Ext.Function-method-createSequence\" rel=\"Ext.Function-method-createSequence\" class=\"docClass\">Ext.Function.createSequence</a>(Ext.form.field.Base.prototype.initComponent, function() {\n        this.enableBubble('change');\n    }),\n\n    //  We know that we want Field's events to bubble directly to the FormPanel.\n    getBubbleTarget : function() {\n        if (!this.formPanel) {\n            this.formPanel = this.findParentByType('form');\n        }\n        return this.formPanel;\n    }\n});\n\nvar myForm = new Ext.formPanel({\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventNames</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>待起泡的事件名，或者事件名数组。</p>\n</div></li></ul></div></div></div><div id='method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-extend' class='name expandable'>extend</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>拓展 ...</div><div class='long'><p>拓展</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul></div></div></div><div id='method-filter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-filter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-filter' class='name expandable'>filter</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> filters, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> value]</span> )</div><div class='description'><div class='short'>根据给定的过滤器集合，对已加载的记录进行过滤. ...</div><div class='long'><p>根据给定的过滤器集合，对已加载的记录进行过滤.</p>\n\n<p>默认情况下, 传入的单/多个 filter(s) 都被 <em>添加</em> 到 filters 集合中,并用来对 Store 过滤.</p>\n\n<p>在应用新的 filters集合之前, 如果要清除已存在的 filters,请使用:</p>\n\n<pre><code>// 清除过滤器而不更新界面(UI)\nstore.clearFilter(true);\n</code></pre>\n\n<p>详情请参考 (@link <a href=\"#!/api/Ext.data.Store-method-clearFilter\" rel=\"Ext.data.Store-method-clearFilter\" class=\"docClass\">clearFilter</a>}.</p>\n\n<p>另外, 如果 filters 设置了 <code>id</code>, 那么store 会用新的 filters <em>替换</em> 具有相同 <code>id</code> 的已存在的 filters.</p>\n\n<p>根据单个属性域(field)过滤:</p>\n\n<pre><code>store.filter(\"email\", /\\.com$/);\n</code></pre>\n\n<p>根据多个属性域(field)过滤:</p>\n\n<pre><code>store.filter([\n    {property: \"email\", value: /\\.com$/},\n    {filterFn: function(item) { return item.get(\"age\") &gt; 10; }}\n]);\n</code></pre>\n\n<p>可以使用 <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> 实例, 而不是 配置对象.\n(注意 在此种情况下我们需要指定 <a href=\"#!/api/Ext.util.Filter-cfg-root\" rel=\"Ext.util.Filter-cfg-root\" class=\"docClass\">root</a> 配置项):</p>\n\n<pre><code>store.filter([\n    <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>', {property: \"email\", value: /\\.com$/, root: 'data'}),\n    <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>', {filterFn: function(item) { return item.get(\"age\") &gt; 10; }, root: 'data'})\n]);\n</code></pre>\n\n<p>如果store有过滤器, 那么访问store数据的大部分方法所处理的都是过滤后的记录.\n两个值得注意的例外是 <a href=\"#!/api/Ext.data.Store-method-queryBy\" rel=\"Ext.data.Store-method-queryBy\" class=\"docClass\">queryBy</a> 和 <a href=\"#!/api/Ext.data.Store-method-getById\" rel=\"Ext.data.Store-method-getById\" class=\"docClass\">getById</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>filters</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要对数据使用的过滤器集合.\n过滤器会被存储着 store 内部, 但是过滤本身是在 Store 的 <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a> 中发生的.\n关于 filter 的语法请参考 MixedCollection 的 <a href=\"#!/api/Ext.util.MixedCollection-method-filter\" rel=\"Ext.util.MixedCollection-method-filter\" class=\"docClass\">filter</a> 方法.\n否则, 请传入一个表示属性名的字符串</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>用来过滤的值 (只有第一个参数是代表属性域名字的string的情况)</p>\n</div></li></ul></div></div></div><div id='method-filterBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-filterBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-filterBy' class='name expandable'>filterBy</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )</div><div class='description'><div class='short'>由函数来执行过滤. ...</div><div class='long'><p>由函数来执行过滤. 指定的函数将由Store 中的每一条记录调用.\n如果函数返回 <code>true</code> 则将记录包含进来,否则将被过滤掉.</p>\n\n<p>如果store有过滤器, 那么访问store数据的大部分方法所处理的都是过滤后的记录.\n两个值得注意的例外是 <a href=\"#!/api/Ext.data.Store-method-queryBy\" rel=\"Ext.data.Store-method-queryBy\" class=\"docClass\">queryBy</a> 和 <a href=\"#!/api/Ext.data.Store-method-getById\" rel=\"Ext.data.Store-method-getById\" class=\"docClass\">getById</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要被回调的函数. 调用时将会传入以下参数:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>用来进行过滤测试的记录.\n 通过使用 <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a> 来访问属性域的值.</p>\n</div></li><li><span class='pre'>id</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>传入记录的ID.</p>\n</div></li></ul></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>函数执行的作用域(即this 引用).\n默认是当前store.</p>\n</div></li></ul></div></div></div><div id='method-filterNew' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-filterNew' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-filterNew' class='name expandable'>filterNew</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> item</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>新数据记录的过滤方法 ...</div><div class='long'><p>新数据记录的过滤方法</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-filterUpdated' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-filterUpdated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-filterUpdated' class='name expandable'>filterUpdated</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> item</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>对修改数据的过滤函数. ...</div><div class='long'><p>对修改数据的过滤函数.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-find' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-find' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-find' class='name expandable'>find</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> fieldName, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a> value, [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> startIndex], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> anyMatch], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> caseSensitive], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> exactMatch]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>根据指定的属性域,以及指定的值,找出第一条匹配的记录的索引 index. ...</div><div class='long'><p>根据指定的属性域,以及指定的值,找出第一条匹配的记录的索引 index.</p>\n\n<p>如果store有过滤器, finds 在过滤后的数据中.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要查找的属性域 名字.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><div class='sub-desc'><p>可以是需要匹配的string,或者是正则表达式.\n如果是字符串, 则需要以此string开始 才会匹配.</p>\n</div></li><li><span class='pre'>startIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>起始搜索位置的索引</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>anyMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为 true，则只要匹配一部分就行, 不再强制必须以 value 参数开头.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>caseSensitive</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果设置为 true,则进行区分大小写的对比</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>exactMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为 true 则强制完全匹配 (会在正则表达式中 添加^ and $ 字符)</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>找到的记录索引 或者 -1</p>\n</div></li></ul></div></div></div><div id='method-findBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-findBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-findBy' class='name expandable'>findBy</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> startIndex]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>在 Store中根据一个函数来找出第一条匹配的记录. ...</div><div class='long'><p>在 Store中根据一个函数来找出第一条匹配的记录.\n如果函数返回 <code>true</code> 则被认为有匹配记录.</p>\n\n<p>如果store有过滤器, 则只在过滤后的数据中查找.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要被回调的函数. 调用时将会传入以下参数:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>用来进行过滤测试的记录.\n 通过使用 <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a> 来访问属性域的值.</p>\n</div></li><li><span class='pre'>id</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>传入记录的ID.</p>\n</div></li></ul></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>函数执行的作用域(即this 引用).\n默认是当前store.</p>\n</div></li><li><span class='pre'>startIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>开始查找的索引,偏移</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>匹配的记录index 或者-1</p>\n</div></li></ul></div></div></div><div id='method-findExact' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-findExact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-findExact' class='name expandable'>findExact</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> fieldName, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value, [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> startIndex]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>根据指定的属性域,以及指定的值,找出第一条匹配记录的index. ...</div><div class='long'><p>根据指定的属性域,以及指定的值,找出第一条匹配记录的index.</p>\n\n<p>如果store有过滤器, 则只在过滤后的数据中查找.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要查找的属性域名字.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>属性域对应的要匹配的值.</p>\n</div></li><li><span class='pre'>startIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>开始查找的索引,偏移</p>\n<p>Defaults to: <code>0</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>匹配的记录index 或者 -1</p>\n</div></li></ul></div></div></div><div id='method-findRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-findRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-findRecord' class='name expandable'>findRecord</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> fieldName, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a> value, [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> startIndex], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> anyMatch], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> caseSensitive], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> exactMatch]</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></div><div class='description'><div class='short'>根据指定的属性域,以及指定的值,找出第一条匹配的记录。 ...</div><div class='long'><p>根据指定的属性域,以及指定的值,找出第一条匹配的记录。</p>\n\n<p>如果store有过滤器, 则在过滤后的数据中进行查找.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要查找的属性域 名字.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><div class='sub-desc'><p>可以是需要匹配的string,或者是正则表达式.\n如果是字符串, 则需要以此string开始 才会匹配.</p>\n</div></li><li><span class='pre'>startIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>起始搜索位置的索引</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>anyMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为 true，则只要匹配一部分就行, 不再强制必须以 value 参数开头.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>caseSensitive</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果设置为 true,则进行区分大小写的对比</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>exactMatch</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为 true 则强制完全匹配 (会在正则表达式中 添加^ and $ 字符)</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'><p>找到的记录 或者 null</p>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... args</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>使用传递过来的参数(去掉事件名，加上传递给addListener的options对象\n)触发指定的事件。 ...</div><div class='long'><p>使用传递过来的参数(去掉事件名，加上传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的<code>options</code>对象\n)触发指定的事件。</p>\n\n<p>通过调用<a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>，一个事件\n能被设置为沿着Observable的继承体系(见<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>)向上起泡。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>待触发的事件名。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...<div class='sub-desc'><p>传递给事件处理函数的可变数量的参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果任何一个事件处理函数返回false，就返回false，否则返回true。</p>\n</div></li></ul></div></div></div><div id='method-fireGroupChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-fireGroupChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-fireGroupChange' class='name expandable'>fireGroupChange</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>触发 groupchange 事件. ...</div><div class='long'><p>触发 groupchange 事件. 抽象出来(Abstracted out) 以便我们可以用来作为回调</p>\n</div></div></div><div id='method-first' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-first' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-first' class='name expandable'>first</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined</div><div class='description'><div class='short'>获取store中第一条记录的快捷方法. ...</div><div class='long'><p>获取store中第一条记录的快捷方法.</p>\n\n<p>如果store有过滤器, 将会返回过滤后的第一条记录.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由 group name 作为key,而第一条记录将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined</span><div class='sub-desc'><p>store中第一条记录, 或者 undefined</p>\n</div></li></ul></div></div></div><div id='method-generateComparator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-method-generateComparator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-method-generateComparator' class='name expandable'>generateComparator</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>返回一个比较器函数，比较两个项，\n根据当前定义的sorters集合返回 -1, 0或者1。 ...</div><div class='long'><p>返回一个比较器函数，比较两个项，\n根据当前定义的<a href=\"#!/api/Ext.util.Sortable-property-sorters\" rel=\"Ext.util.Sortable-property-sorters\" class=\"docClass\">sorters</a>集合返回 -1, 0或者1。</p>\n\n\n<p>如果没有定义{@olink <a href=\"#!/api/Ext.util.Sortable-property-sorters\" rel=\"Ext.util.Sortable-property-sorters\" class=\"docClass\">sorters</a>}，它返回一个函数。这个函数返回<code>0</code>，表示不会进行排序</p>\n\n</div></div></div><div id='method-getAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getAt' class='name expandable'>getAt</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></div><div class='description'><div class='short'>获取指定index处的记录. ...</div><div class='long'><p>获取指定index处的记录.</p>\n\n<p>index 受过滤器的影响.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>要查找的记录的index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'><p>传入 index 处的记录Record. 如果没有找到则返回 undefined.</p>\n</div></li></ul></div></div></div><div id='method-getBatchListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getBatchListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getBatchListeners' class='name expandable'>getBatchListeners</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>返回一个对象, 用于执行this.sync时传给proxy.batch参数对象的listeners参数中. ...</div><div class='long'><p>返回一个对象, 用于执行this.sync时传给proxy.batch参数对象的listeners参数中.\n我们将此操作拆分到一个单独的方法中以便于对listeners监听器进行定制修改.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>监听(listeners)对象.</p>\n</div></li></ul></div></div></div><div id='method-getBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-getBubbleParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-getBubbleParent' class='name expandable'>getBubbleParent</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Gets the bubbling parent for an Observable ...</div><div class='long'><p>Gets the bubbling parent for an Observable</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a></span><div class='sub-desc'><p>The bubble parent. null is returned if no bubble target exists</p>\n</div></li></ul></div></div></div><div id='method-getById' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getById' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getById' class='name expandable'>getById</a>( <span class='pre'>Mixed id</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></div><div class='description'><div class='short'>通过指定的 id 获取记录. ...</div><div class='long'><p>通过指定的 id 获取记录.</p>\n\n<p>此方法不受过滤器的影响; 将会从store的所有记录中进行查找,无论是否被过滤.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Mixed<div class='sub-desc'><p>要查找的记录的 id.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></span><div class='sub-desc'><p>传入id对应的记录. 如果没找到则 null.</p>\n</div></li></ul></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>得到配置项 ...</div><div class='long'><p>得到配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li></ul></div></div></div><div id='method-getCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getCount' class='name expandable'>getCount</a>( <span class='pre'></span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>获取store中记录的数量. ...</div><div class='long'><p>获取store中记录的数量.</p>\n\n<p>如果使用分页, 则返回的可能不是 dataset 的总的大小.\n如果 Reader 使用的数据对象包含了 dataset 大小, 则可以使用 <a href=\"#!/api/Ext.data.Store-method-getTotalCount\" rel=\"Ext.data.Store-method-getTotalCount\" class=\"docClass\">getTotalCount</a> 函数来取得所有个数.\n <strong>重要提示</strong>: 请参考 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a> 查看注意事项.</p>\n\n<p>受过滤器的影响, 如果指定了filter,则返回匹配过滤规则的记录的数量.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>store中记录的数量.</p>\n</div></li></ul></div></div></div><div id='method-getGroupData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getGroupData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getGroupData' class='name expandable'>getGroupData</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> sort]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>返回由配置项grouper 所分分组组的记录. ...</div><div class='long'><p>返回由配置项<a href=\"#!/api/Ext.data.Store-property-groupers\" rel=\"Ext.data.Store-property-groupers\" class=\"docClass\">grouper</a> 所分分组组的记录.\n(在一个虚构的书本集合中,先按类型,再按作者分组)返回的数据示例如下:</p>\n\n<pre><code>[\n    {\n        name: 'Fantasy',\n        depth: 0,\n        records: [\n            //book1, book2, book3, book4\n        ],\n        children: [\n            {\n                name: 'Rowling',\n                depth: 1,\n                records: [\n                    //book1, book2\n                ]\n            },\n            {\n                name: 'Tolkein',\n                depth: 1,\n                records: [\n                    //book3, book4\n                ]\n            }\n        ]\n    }\n]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sort</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为 true 则在查找 group 之前调用 <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a>.\n在分组时总是需要排序的，所以只有能确认已经排好序了才应该传入false.</p>\n<p>Defaults to: <code>true</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span><div class='sub-desc'><p>分组后的数据</p>\n</div></li></ul></div></div></div><div id='method-getGroupString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getGroupString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getGroupString' class='name expandable'>getGroupString</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> instance</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>为传入的model实例取得分组时要使用的string. ...</div><div class='long'><p>为传入的model实例取得分组时要使用的string.\n默认实现是返回模型的分组域 <a href=\"#!/api/Ext.data.Store-cfg-groupField\" rel=\"Ext.data.Store-cfg-groupField\" class=\"docClass\">groupField</a>, 但可以根据需要进行重写.\n例如,要根据 model 的 'name' 属性域的首字母来进行分组,可以使用如下代码:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupDir: 'ASC',\n    getGroupString: function(instance) {\n        return instance.get('name')[0];\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instance</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>模型实例</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>在分组时进行比较的string</p>\n</div></li></ul></div></div></div><div id='method-getGroups' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getGroups' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getGroups' class='name expandable'>getGroups</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> groupName]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</div><div class='description'><div class='short'>返回一个数组,该数组包含对此store使用分组得到的 组对象. ...</div><div class='long'><p>返回一个数组,该数组包含对此store使用分组得到的 组对象.\n参见 <a href=\"#!/api/Ext.data.Store-cfg-groupField\" rel=\"Ext.data.Store-cfg-groupField\" class=\"docClass\">groupField</a>, <a href=\"#!/api/Ext.data.Store-cfg-groupDir\" rel=\"Ext.data.Store-cfg-groupDir\" class=\"docClass\">groupDir</a> 以及 <a href=\"#!/api/Ext.data.Store-method-getGroupString\" rel=\"Ext.data.Store-method-getGroupString\" class=\"docClass\">getGroupString</a>.\n下面是包含color域的Model组成的一个store示例:</p>\n\n<pre><code>var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupField: 'color',\n    groupDir  : 'DESC'\n});\n\nmyStore.getGroups(); // 返回的结果如下:\n[\n    {\n        name: 'yellow',\n        children: [\n            // 所有 color域的值是 'yellow' 的记录\n        ]\n    },\n    {\n        name: 'red',\n        children: [\n            // 所有 color域的值是 'red' 的记录 \n        ]\n    }\n]\n</code></pre>\n\n<p>Group 内容受过滤器的影响 .</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groupName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>传入可选的 groupName 参数来获取指定的那一个分组\ngroup as defined by <a href=\"#!/api/Ext.data.Store-method-getGroupString\" rel=\"Ext.data.Store-method-getGroupString\" class=\"docClass\">getGroupString</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span><div class='sub-desc'><p>分组数据</p>\n</div></li></ul></div></div></div><div id='method-getGroupsForGrouper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getGroupsForGrouper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getGroupsForGrouper' class='name expandable'>getGroupsForGrouper</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> records, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> grouper</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>根据给定的 record 集合以及一个 Grouper, 返回一个由数组组成的数组\n- 其中的每个数组都是匹配给定分组的记录集合. ...</div><div class='long'><p>根据给定的 record 集合以及一个 Grouper, 返回一个由数组组成的数组\n- 其中的每个数组都是匹配给定分组的记录集合.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>grouper</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getGroupsForGrouperIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getGroupsForGrouperIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getGroupsForGrouperIndex' class='name expandable'>getGroupsForGrouperIndex</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> grouperIndex</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>本方法用于递归地收集记录到配置的 Groupers中. ...</div><div class='long'><p>本方法用于递归地收集记录到配置的 Groupers中. 要让本方法正常工作,数据 <em>必须</em> 是排序好的.\n(参见 <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">getGroupData</a> 以及 <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">getGroupsForGrouper</a>)\n大部分工作是由 <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">getGroupsForGrouper</a> 完成的- 该函数只是该处理递归.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>要分组的集合或子集合</p>\n</div></li><li><span class='pre'>grouperIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>要获取的grouper 索引</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span><div class='sub-desc'><p>分组后的记录</p>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>得到初始化配置项 ...</div><div class='long'><p>得到初始化配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li></ul></div></div></div><div id='method-getModifiedRecords' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getModifiedRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getModifiedRecords' class='name expandable'>getModifiedRecords</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>获取自上次提交以来, 所有新添加或被修改的records数据记录集. ...</div><div class='long'><p>获取自上次提交以来, 所有新添加或被修改的<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a>数据记录集. 注意数据记录的顺序是不确定的, 不是按数据修改的\n顺序排列的. 还要注意此集合不包括被删除的数据记录(如需要请使用<a href=\"#!/api/Ext.data.AbstractStore-method-getRemovedRecords\" rel=\"Ext.data.AbstractStore-method-getRemovedRecords\" class=\"docClass\">getRemovedRecords</a>).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>添加或修改的数据实例集合</p>\n</div></li></ul></div></div></div><div id='method-getNewRecords' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getNewRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getNewRecords' class='name expandable'>getNewRecords</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>返回全部虚拟的(例:没有id), 或有id但还没有保存到Store对象的(当从另一个Store对象添加一个非虚拟数据到当前对象时)数据实例. ...</div><div class='long'><p>返回全部虚拟的(例:没有id), 或有id但还没有保存到Store对象的(当从另一个Store对象添加一个非虚拟数据到当前对象时)数据实例.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>数据实例集合</p>\n</div></li></ul></div></div></div><div id='method-getPageFromRecordIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getPageFromRecordIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getPageFromRecordIndex' class='name expandable'>getPageFromRecordIndex</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>根据记录的索引,决定其页码 ...</div><div class='long'><p>根据记录的索引,决定其页码</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>记录的索引</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>记录所属的页码</p>\n</div></li></ul></div></div></div><div id='method-getProxy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getProxy' class='name expandable'>getProxy</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a></div><div class='description'><div class='short'>返回当前附属的proxy代理对象的实例. ...</div><div class='long'><p>返回当前附属的proxy代理对象的实例.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a></span><div class='sub-desc'><p>Proxy实例</p>\n</div></li></ul></div></div></div><div id='method-getRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getRange' class='name expandable'>getRange</a>( <span class='pre'>[<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> startIndex], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> endIndex]</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>返回指定索引范围内的记录. ...</div><div class='long'><p>返回指定索引范围内的记录.</p>\n\n<p>本方法受过滤器的影响.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>开始索引 index</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>endIndex</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>结尾索引 index. 默认是Store中最后一条记录的index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>记录(Record)所组成的数组</p>\n</div></li></ul></div></div></div><div id='method-getRemovedRecords' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getRemovedRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getRemovedRecords' class='name expandable'>getRemovedRecords</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>返回全部已经在Store中被删除但还未通过代理销毁的数据实例. ...</div><div class='long'><p>返回全部已经在Store中被删除但还未通过代理销毁的数据实例.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>被删除的数据实例集合</p>\n</div></li></ul></div></div></div><div id='method-getTotalCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-getTotalCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-getTotalCount' class='name expandable'>getTotalCount</a>( <span class='pre'></span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>返回由Proxy 表明存在的所有 Model 实例的全部数量. ...</div><div class='long'><p>返回由<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a> 表明存在的所有 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> 实例的全部数量.\n在使用分页时,此方法和 <a href=\"#!/api/Ext.data.Store-method-getCount\" rel=\"Ext.data.Store-method-getCount\" class=\"docClass\">getCount</a> 通常是不同的 - getCount 返回的是当时加载到 Store的记录数量,\ngetTotalCount 返回的是可以被加载到 Store 中的记录的数量, 如果 Store 包含了所有数据的话.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>通过 Proxy 可以获取到的所有 Model的数量. 如果reader没有得到值则返回 0.</p>\n</div></li></ul></div></div></div><div id='method-getUpdatedRecords' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-getUpdatedRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-getUpdatedRecords' class='name expandable'>getUpdatedRecords</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</div><div class='description'><div class='short'>返回全部已经在Store中被更改但还未通过代理同步的数据实例. ...</div><div class='long'><p>返回全部已经在Store中被更改但还未通过代理同步的数据实例.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]</span><div class='sub-desc'><p>修改的数据实例集合</p>\n</div></li></ul></div></div></div><div id='method-group' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-group' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-group' class='name expandable'>group</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] groupers, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> direction]</span> )</div><div class='description'><div class='short'>对store 内部的数据进行分组. ...</div><div class='long'><p>对store 内部的数据进行分组.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groupers</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>可以是为 Store 配置的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> 的一个属性域的名字string,</p>\n\n<pre><code> 也可以是由grouper configurations组成的数组.\n</code></pre>\n</div></li><li><span class='pre'>direction</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>要分组数据的方向(升序,降序).</p>\n<p>Defaults to: <code>&quot;ASC&quot;</code></p></div></li></ul></div></div></div><div id='method-guaranteeRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-guaranteeRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-guaranteeRange' class='name expandable'>guaranteeRange</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> start, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> end, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> cb, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>保证一个指定的范围, 这将为Store加载一定范围的数据 (小于等于 pageSize ),\n并关注可能需要加载的数据范围. ...</div><div class='long'><p>保证一个指定的范围, 这将为Store加载一定范围的数据 (小于等于 pageSize ),\n并关注可能需要加载的数据范围.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>cb</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>根据名称判断配置项是否存在 ...</div><div class='long'><p>根据名称判断配置项是否存在</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置项</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>检查本对象是否有特定事件的监听器, 或者检查事件是否起泡。 ...</div><div class='long'><p>检查本对象是否有特定事件的监听器, 或者检查事件是否起泡。\n检查的结果表明事件是否需要出发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>待检查的事件名</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果事件被监听或者起泡，返回<code>true</code>, 否则返回<code>false</code></p>\n</div></li></ul></div></div></div><div id='method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-implement' class='name expandable'>implement</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-indexOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-indexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-indexOf' class='name expandable'>indexOf</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>查找记录在store中的 index. ...</div><div class='long'><p>查找记录在store中的 index.</p>\n\n<p>本方法受过滤器的影响,没通过过滤的记录不会被发现.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>要查找的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> 对象.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>传入记录对应的索引 index. 如果没找到则返回 -1.</p>\n</div></li></ul></div></div></div><div id='method-indexOfId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-indexOfId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-indexOfId' class='name expandable'>indexOfId</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> id</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>根据传入的 id,取得store中记录的索引 index. ...</div><div class='long'><p>根据传入的 id,取得store中记录的索引 index.</p>\n\n<p>和 <a href=\"#!/api/Ext.data.Store-method-indexOf\" rel=\"Ext.data.Store-method-indexOf\" class=\"docClass\">indexOf</a> 方法一样, 本方法也受 过滤器的影响.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要查找的记录的 id.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>记录的索引 index. 如果没找到则返回 -1.</p>\n</div></li></ul></div></div></div><div id='method-indexOfTotal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-indexOfTotal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-indexOfTotal' class='name expandable'>indexOfTotal</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>查找记录在整个数据集中的 index. ...</div><div class='long'><p>查找记录在整个数据集中的 index. 从 0 到 totalCount.</p>\n\n<p>和 <a href=\"#!/api/Ext.data.Store-method-indexOf\" rel=\"Ext.data.Store-method-indexOf\" class=\"docClass\">indexOf</a> 方法一样, 本方法也受 过滤器的影响.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>要查找的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> 对象.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>传入记录对应的索引 index. 如果没找到则返回 -1.</p>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>这个类的初始化配置。典型例子:\n\nExt.define('My.awesome.Class', {\n    // 这是默认配置\n    config: {\n        name: 'Awesome',\n        isAwes...</div><div class='long'><p>这个类的初始化配置。典型例子:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // 这是默认配置\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome' 超级棒\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>mixins 混入原型 键-值对</p>\n</div></li></ul></div></div></div><div id='method-initSortable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-method-initSortable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-method-initSortable' class='name expandable'>initSortable</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>初始化本混入元素。使用本混入元素的组件类\n应该在它们初始化时调用这个方法。 ...</div><div class='long'><p>初始化本混入元素。使用本混入元素的组件类\n应该在它们初始化时调用这个方法。</p>\n</div></div></div><div id='method-insert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-insert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-insert' class='name expandable'>insert</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records</span> )</div><div class='description'><div class='short'>从给定的索引处开始,插入 Model 实例;并触发 add 事件. ...</div><div class='long'><p>从给定的索引处开始,插入 Model 实例;并触发 <a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a> 事件.\n也可以参考 <a href=\"#!/api/Ext.data.Store-method-add\" rel=\"Ext.data.Store-method-add\" class=\"docClass\">add</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>从何处开始插入给定的记录.</p>\n</div></li><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>要添加到 store的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> 组成的数组.</p>\n</div></li></ul></div></div></div><div id='method-isFiltered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-isFiltered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-isFiltered' class='name expandable'>isFiltered</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果 store 当前是已经过滤后的,则返回 true. ...</div><div class='long'><p>如果 store 当前是已经过滤后的,则返回 true.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isGrouped' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-isGrouped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-isGrouped' class='name expandable'>isGrouped</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>判断store当前是否已经分组了 ...</div><div class='long'><p>判断store当前是否已经分组了</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果已经分组则返回 true.</p>\n</div></li></ul></div></div></div><div id='method-isLoading' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-isLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-isLoading' class='name expandable'>isLoading</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>'true'表示Store当前正在执行load操作. ...</div><div class='long'><p>'true'表示Store当前正在执行load操作.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>返回'true'则表示Store正在加载数据中.</p>\n</div></li></ul></div></div></div><div id='method-last' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-last' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-last' class='name expandable'>last</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined</div><div class='description'><div class='short'>获取store中最后一条记录的快捷方法. ...</div><div class='long'><p>获取store中最后一条记录的快捷方法.</p>\n\n<p>如果store有过滤器, 将会返回过滤后的最后一条记录.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由 group name 作为key,而最后一条记录将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined</span><div class='sub-desc'><p>store中最后一条记录, 或者 undefined</p>\n</div></li></ul></div></div></div><div id='method-load' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-load' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-load' class='name expandable'>load</a>( <span class='pre'>[<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> options]</span> )</div><div class='description'><div class='short'>通过配置的 proxy 加载数据到Store 中. ...</div><div class='long'><p>通过配置的 <a href=\"#!/api/Ext.data.Store-cfg-proxy\" rel=\"Ext.data.Store-cfg-proxy\" class=\"docClass\">proxy</a> 加载数据到Store 中.\n使用 Proxy 来执行异步调用,不关心具体的Proxy是什么类型,\n自动添加获得的实例到 Store 中,如有需要,会调用传入的回调函数.\n用法示例如下:</p>\n\n<pre><code>store.load({\n    scope: this,\n    callback: function(records, operation, success) {\n        // 对象 <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">operation</a> 包含\n        // 所有 load 操作的详细信息\n        console.log(records);\n    }\n});\n</code></pre>\n\n<p>如果不需要指定回调函数的作用域(scope)，则可以直接像下面这样传递:</p>\n\n<pre><code>store.load(function(records, operation, success) {\n    console.log('loaded records');\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>配置对象, 在加载之前会传入 <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> 对象中.\n可以指定一个配置项: <code>addRecords: true</code> 来将新的记录附加到已存在的记录中,\n因为默认情况下会先删除 Store 中所有已存在的数据.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.data.AbstractStore-method-load' rel='Ext.data.AbstractStore-method-load' class='docClass'>Ext.data.AbstractStore.load</a></p></div></div></div><div id='method-loadData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-loadData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-loadData' class='name expandable'>loadData</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] data, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> append]</span> )</div><div class='description'><div class='short'>直接加载一个数组的数据到 Store 中. ...</div><div class='long'><p>直接加载一个数组的数据到 Store 中.</p>\n\n<p>如果数据的格式已经处理好,那么可以使用此方法 (例如. 不必需要 reader 处理的数据).\n如果你的数据还需要处理,那么请使用 <a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">MemoryProxy</a> .</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>要加载的数据. 所有 non-model 实例都会首先被转换为 model 实例.</p>\n</div></li><li><span class='pre'>append</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果设置为 true 则将这些记录添加到已存在的记录中, 如果为 false 则会先删除原来的记录.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-loadPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-loadPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-loadPage' class='name expandable'>loadPage</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> page, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>加载给定 'page' 的数据,通过适当地设置 start 以及 limit 的值. ...</div><div class='long'><p>加载给定 'page' 的数据,通过适当地设置 start 以及 limit 的值.\n在本方法内部只是 传入计算后的 'start' 与 'limit' 配置项 执行一个普通的 load 操作.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>要加载的 page ,数字</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>参考 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a> 的配置选项</p>\n</div></li></ul></div></div></div><div id='method-loadRawData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-loadRawData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-loadRawData' class='name expandable'>loadRawData</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[] data, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> append]</span> )</div><div class='description'><div class='short'>通过绑定的 Proxy's reader 加载数据\n\n如果想要利用配置好的 reader 来加载数据,则可以使用此方法. ...</div><div class='long'><p>通过绑定的 Proxy's reader 加载数据</p>\n\n<p>如果想要利用配置好的 reader 来加载数据,则可以使用此方法.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]<div class='sub-desc'><p>要加载到 Data store中的完整的 JSON 对象.</p>\n</div></li><li><span class='pre'>append</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果设置为 true 则将这些记录添加到已存在的记录中, 如果为 false 则会先删除原来的记录.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-loadRecords' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-loadRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-loadRecords' class='name expandable'>loadRecords</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>载入由 model 实例组成的数组到 store 中, 触发 datachanged 事件. ...</div><div class='long'><p>载入由 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">model</a> 实例组成的数组到 store 中, 触发 datachanged 事件.\n此方法通常只应该在从 <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a> 中加载数据时由内部调用,\n如果要手动的增加记录,请使用 <a href=\"#!/api/Ext.data.Store-method-add\" rel=\"Ext.data.Store-method-add\" class=\"docClass\">add</a> 方法.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>要加载的记录(数组)</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>如果设置{addRecords: true},则将这些记录添加到已存在的记录中, 如果为 false 则会先删除原来的记录.</p>\n</div></li></ul></div></div></div><div id='method-max' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-max' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-max' class='name expandable'>max</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> field, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>获取 store 中Model的某个域的最大值. ...</div><div class='long'><p>获取 store 中Model的某个域的最大值.</p>\n\n<p>如果store有过滤器,则只有过滤后通过的元素会被计算进来。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要进行统计的每条记录里的域</p>\n</div></li><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由  group name 作为key,而分组的最大值(maximum)将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>最大值, 如果没有 items 存在,则返回 undefined.</p>\n</div></li></ul></div></div></div><div id='method-min' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-min' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-min' class='name expandable'>min</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> field, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>获取 store 中Model的某个域的最小值. ...</div><div class='long'><p>获取 store 中Model的某个域的最小值.</p>\n\n<p>如果store有过滤器,则只有过滤后通过的元素会被计算进来。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要进行统计的每条记录里的域</p>\n</div></li><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由 group name 作为key,而分组的最小值(minimum)将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>最小值, 如果没有 items 存在,则返回 undefined.</p>\n</div></li></ul></div></div></div><div id='method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-mixin' class='name expandable'>mixin</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> mixinClass</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>内部使用混入预处理器（mixins pre-processor） ...</div><div class='long'><p>内部使用混入预处理器（mixins pre-processor）</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-mon' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-mon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-mon' class='name expandable'>mon</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> opt</span> )</div><div class='description'><div class='short'>addManagedListener的简写方法\n\n向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>的简写方法</p>\n\n<p>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>添加监听器的目标项。</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li><li><span class='pre'>opt</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的)如果<code>ename</code>参数是事件名,\n这就是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的选项。</p>\n\n</div></li></ul></div></div></div><div id='method-mun' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-mun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-mun' class='name expandable'>mun</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>removeManagedListener的简写方法\n\n移除通过mon方法添加的监听器。 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>的简写方法</p>\n\n<p>移除通过<a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a>方法添加的监听器。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>待移除监听器的项</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li></ul></div></div></div><div id='method-nextPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-nextPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-nextPage' class='name expandable'>nextPage</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>在当前的数据集中加载下一页 'page' ...</div><div class='long'><p>在当前的数据集中加载下一页 'page'</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>参考 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a> 方法的配置项</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-on' class='name expandable'>on</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eventName, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>addListener的简写方法\n\n向本对象添加一个事件处理函数，例如:\n\nmyGridPanel.on(\"mouseover\", this.onMouseOver, this);\n\n\n这个方法也允许传递单个参数，参数为一个\n包含指定...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的简写方法</p>\n\n<p>向本对象添加一个事件处理函数，例如:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>你也能为每个事件处理函数单独指定选项：</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p>也能使用在特定作用域的方法<em>名</em>。注意\n必须指定<code>scope</code>:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>被监听的事件名。\n也可以是属性名字是事件名字的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>事件调用的方法, 或者<em>如果指定了<code>scope</code>，在指定<code>scope</code>的方法</em>名*。\n会被调用，\n参数为<a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a>的参数加上下述<code>options</code>参数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>包含事件处理函数配置的对象。</p>\n\n\n\n\n<p><strong>注意:</strong> 不像ExtJS 3.x, options对象也会作为最后一个参数\n传递给每一个事件处理函数。</p>\n\n\n\n\n<p>这个对象可能包含以下任何一个属性:</p>\n\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>事件触发后，调用事件处理函数延时毫秒数。</p>\n\n</div></li><li><span class='pre'>single</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为true添加一个事件处理函数，只处理下一次触发的事件, 然后移除这个函数。</p>\n\n</div></li><li><span class='pre'>buffer</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>使事件处理函数在<a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a>中调度运行，\n  延时指定的毫秒数。如果事件在这段事件再次触发，\n  原先的事件处理函数<em>不</em>再调用, 新的事件处理函数接替。</p>\n\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><div class='sub-desc'><p>只有当事件在目标Observable上触发时调用事件处理函数,\n  如果事件是从Observable的子类起泡的，<em>不会</em>调用事件处理函数</p>\n\n</div></li><li><span class='pre'>element</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p><strong>这个选项只对绑定在<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>上的监听器有效。</strong>\n  Component的一个属性名，这个属性引用一个待添加监听器的元素</p>\n\n\n\n\n<p>  这个选项在Component构造过程中向<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>的元素添加DOM事件监听器有用。\n  这些元素只有在Component渲染之后才会存在。\n  例如, 向Panel的body中添加click监听器:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p><strong>组合选项</strong></p>\n\n\n\n\n<p>使用options参数, 可以组合不同类型的监听器：</p>\n\n\n\n\n<p>一个延时的一次性监听器：</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n</div></li></ul></div></li></ul></div></div></div><div id='method-onBatchComplete' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-onBatchComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-onBatchComplete' class='name expandable'>onBatchComplete</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> batch, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> operation</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>给代理的批处理对象添加一个'complete'事件监听者. ...</div><div class='long'><p>给代理的批处理对象添加一个'complete'事件监听者. 遍历批处理的操作来更新Store的内部数据集合.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onBatchOperationComplete' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-onBatchOperationComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-onBatchOperationComplete' class='name expandable'>onBatchOperationComplete</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> batch, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> operation</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>给代理的批处理对象添加一个'operationcomplete'事件监听者. ...</div><div class='long'><p>给代理的批处理对象添加一个'operationcomplete'事件监听者. 基类默认仅调用onProxyWrite.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> names, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> callback, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>更新配置项 ...</div><div class='long'><p>更新配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>回调</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>范围</p>\n</div></li></ul></div></div></div><div id='method-onDestroyRecords' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-onDestroyRecords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-onDestroyRecords' class='name expandable'>onDestroyRecords</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> success</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>当写操作从服务器返回时, 清除所有记录缓存. ...</div><div class='long'><p>当写操作从服务器返回时, 清除所有记录缓存.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>清除数据数组</p>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>刚完成返回的操作</p>\n</div></li><li><span class='pre'>success</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>'true'表示操作成功执行.</p>\n</div></li></ul></div></div></div><div id='method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>扩展事件 ...</div><div class='long'><p>扩展事件</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onGuaranteedRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-onGuaranteedRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-onGuaranteedRange' class='name expandable'>onGuaranteedRange</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>对保证范围的数据被加载时进行处理 ...</div><div class='long'><p>对保证范围的数据被加载时进行处理</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onProxyLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-onProxyLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-onProxyLoad' class='name expandable'>onProxyLoad</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> operation</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>私有函数,当Proxy完成一个load请求以后,在内部调用 ...</div><div class='long'><p>私有函数,当Proxy完成一个load请求以后,在内部调用</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onProxyPrefetch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-onProxyPrefetch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-onProxyPrefetch' class='name expandable'>onProxyPrefetch</a>( <span class='pre'><a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>在配置的 proxy 完成预取操作之后调用. ...</div><div class='long'><p>在配置的 proxy 完成预取操作之后调用.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>完成的操作</p>\n</div></li></ul></div></div></div><div id='method-onProxyWrite' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-onProxyWrite' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-onProxyWrite' class='name expandable'>onProxyWrite</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> operation</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Callback for any write Operation over the Proxy. ...</div><div class='long'><p>Callback for any write Operation over the Proxy. Updates the Store's MixedCollection to reflect\nthe updates provided by the Proxy\n回调函数, 在所有通过Proxy代理执行的写操作完成后执行. 将Proxy代理提供的更新反射到Store对象的数据集合中.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-pageCached' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-pageCached' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-pageCached' class='name expandable'>pageCached</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> page</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>判断给定的 page 在page cache中是否是可用的. ...</div><div class='long'><p>判断给定的 page 在page cache中是否是可用的.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>要在page cache中查找的page.</p>\n</div></li></ul></div></div></div><div id='method-prefetch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-prefetch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-prefetch' class='name expandable'>prefetch</a>( <span class='pre'>[<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>通过配置的 proxy 预取数据到 Store中. ...</div><div class='long'><p>通过配置的 <a href=\"#!/api/Ext.data.Store-cfg-proxy\" rel=\"Ext.data.Store-cfg-proxy\" class=\"docClass\">proxy</a> 预取数据到 Store中.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>配置对象, 在loading之前解析传入 <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> 对象.\n参见 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n</div></li></ul></div></div></div><div id='method-prefetchPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-prefetchPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-prefetchPage' class='name expandable'>prefetchPage</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> page, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>预取某页的数据. ...</div><div class='long'><p>预取某页的数据.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>page</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>要预取的页</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>配置对象, 在loading之前解析传入 <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> 对象.\n参见 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n</div></li></ul></div></div></div><div id='method-prefetchRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-prefetchRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-prefetchRange' class='name expandable'>prefetchRange</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> start, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> end</span> )</div><div class='description'><div class='short'>预取指定范围的行,使得指定范围的 rows 存在于 cache 中. ...</div><div class='long'><p>预取指定范围的行,使得指定范围的 rows 存在于 cache 中.</p>\n\n<p>将 row 范围转换为 page 范围,并且只去加载当前不在 page cache中的页.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-prepareClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-prepareClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-prepareClass' class='name expandable'>prepareClass</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> T</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>让给定的类成为可观察的实例。 ...</div><div class='long'><p>让给定的类成为可观察的实例。\n这个方法在有类从本类派生或者使用本类作为一个mixin时调用。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>T</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>类构造函数</p>\n</div></li></ul></div></div></div><div id='method-previousPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-previousPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-previousPage' class='name expandable'>previousPage</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>在当前的数据集中加载上一页 'page' ...</div><div class='long'><p>在当前的数据集中加载上一页 'page'</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>参考 <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a> 方法的配置项</p>\n</div></li></ul></div></div></div><div id='method-queryBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-queryBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-queryBy' class='name expandable'>queryBy</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> ) : <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></div><div class='description'><div class='short'>使用过滤函数来 查询 Store 中所有缓存的记录. ...</div><div class='long'><p>使用过滤函数来 查询 Store 中所有缓存的记录.\n指定的函数将由Store 中的每一条记录调用.\n如果函数返回 <code>true</code> 则将记录包含进结果集中.</p>\n\n<p>此方法不受过滤器的影响; 将会从store的所有记录中进行查找,无论是否被过滤.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要被回调的函数. 调用时将会传入以下参数:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>用来进行过滤测试的记录.\n 通过使用 <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a> 来访问属性域的值.</p>\n</div></li><li><span class='pre'>id</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>传入记录的ID.</p>\n</div></li></ul></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>函数执行的作用域(即this 引用)\n默认是当前store.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></span><div class='sub-desc'><p>返回由 匹配记录所组成的 <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a></p>\n</div></li></ul></div></div></div><div id='method-rangeCached' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-rangeCached' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-rangeCached' class='name expandable'>rangeCached</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> start, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> end</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>判断给定的范围在page cache中是否是可用的. ...</div><div class='long'><p>判断给定的范围在page cache中是否是可用的.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>开始的索引index</p>\n</div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>范围结束的索引(含)</p>\n</div></li></ul></div></div></div><div id='method-rangeSatisfied' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-rangeSatisfied' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-rangeSatisfied' class='name expandable'>rangeSatisfied</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> start, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> end</span> )<strong class='deprecated signature'>deprecated</strong><strong class='private signature'>private</strong></div><div class='description'><div class='short'>判断传入的范围在 page cache中是否可用. ...</div><div class='long'><p>判断传入的范围在 page cache中是否可用.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>使用 <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">rangeCached</a> 来代替此方法</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>起始索引</p>\n</div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>结尾索引(含)</p>\n</div></li></ul></div></div></div><div id='method-rejectChanges' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-rejectChanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-rejectChanges' class='name expandable'>rejectChanges</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Rejects 丢弃所有 modified records 上未完成的更改(outstanding changes). ...</div><div class='long'><p><a href=\"#!/api/Ext.data.Model-method-reject\" rel=\"Ext.data.Model-method-reject\" class=\"docClass\">Rejects</a> 丢弃所有 <a href=\"#!/api/Ext.data.Store-method-getModifiedRecords\" rel=\"Ext.data.Store-method-getModifiedRecords\" class=\"docClass\">modified records</a> 上未完成的更改(outstanding changes).\n并重新插入所有本地删除的数据. 所有虚幻(phantom)的记录都将被移除.</p>\n</div></div></div><div id='method-relayEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> origin, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] events, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> prefix]</span> )</div><div class='description'><div class='short'>从指定的Observable接替选定的事件就好像事件是this触发的。 ...</div><div class='long'><p>从指定的Observable接替选定的事件就好像事件是<code>this</code>触发的。</p>\n\n<p>例如，如果你想要扩展Grid, 你可能决定转发store的一些事件。\n所以你能在你的initComponent中实现这个:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>grid实例将会有一个observable的'load'事件，\n这个事件的参数是store的load事件的参数。任何grid的load事件触发的函数\n可以使用<code>this</code>访问grid。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>origin</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>本对象要接替事件的Observable对象</p>\n</div></li><li><span class='pre'>events</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>被接替的事件名数组</p>\n</div></li><li><span class='pre'>prefix</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>附加到事件名的公共前缀。例如：</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>这样grid将会以'storeload'和'storeclear'转发store的'load'和'clear'事件。</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-remove' class='name expandable'>remove</a>( <span class='pre'><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records</span> )</div><div class='description'><div class='short'>从 Store 中删除给定的记录, 对每条删除的记录都会触发一次 'remove' 事件. ...</div><div class='long'><p>从 Store 中删除给定的记录, 对每条删除的记录都会触发一次 'remove' 事件.\n在此次的所有数据删除完成后,会触发一次 'datachanged' 事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>要删除的 Model 实例(或实例数组).</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> silent</span> )</div><div class='description'><div class='short'>从 store 中移除所有的条目. ...</div><div class='long'><p>从 store 中移除所有的条目.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>silent</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>安静模式,阻止 <code>clear</code> 事件触发.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.data.AbstractStore-method-removeAll' rel='Ext.data.AbstractStore-method-removeAll' class='docClass'>Ext.data.AbstractStore.removeAll</a></p></div></div></div><div id='method-removeAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-removeAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-removeAt' class='name expandable'>removeAt</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index</span> )</div><div class='description'><div class='short'>删除给定 index 处的 model 实例 ...</div><div class='long'><p>删除给定 index 处的 model 实例</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>记录的索引</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>移除事件处理函数。 ...</div><div class='long'><p>移除事件处理函数。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件处理函数关联的事件类型</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>待移除的事件处理函数。 <strong>必须是对传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n的函数的引用。</strong></p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 原先为事件处理函数指定的作用域。\n它必须是和原先调用<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>时指定的作用域参数是一样的，否者监听器将会被移除。</p>\n\n</div></li></ul></div></div></div><div id='method-removeManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeManagedListener' class='name expandable'>removeManagedListener</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>移除通过mon方法添加的监听器。 ...</div><div class='long'><p>移除通过<a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a>方法添加的监听器。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>待移除监听器的项</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li></ul></div></div></div><div id='method-removeManagedListenerItem' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeManagedListenerItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeManagedListenerItem' class='name expandable'>removeManagedListenerItem</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> isClear, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> managedListener</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Remove a single managed listener item ...</div><div class='long'><p>Remove a single managed listener item</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isClear</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>True if this is being called during a clear</p>\n</div></li><li><span class='pre'>managedListener</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The managed listener item\nSee removeManagedListener for other args</p>\n</div></li></ul></div></div></div><div id='method-resumeAutoSync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-resumeAutoSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-resumeAutoSync' class='name expandable'>resumeAutoSync</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>恢复Store与Proxy的自动数据同步. ...</div><div class='long'><p>恢复Store与Proxy的自动数据同步. 仅当<a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a>为true时有效.</p>\n</div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>继续事件的触发(见suspendEvents)。 ...</div><div class='long'><p>继续事件的触发(见<a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)。</p>\n\n<p>如果事件被使用<code>queueSuspended</code>参数挂起, 那么所有\n在事件挂起期间触发的事件将会被发送到任意监听器。</p>\n</div></div></div><div id='method-save' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-save' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-save' class='name expandable'>save</a>( <span class='pre'></span> )<strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>通过proxy代理保存所有未保存的修改. ...</div><div class='long'><p>通过<a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>代理保存所有未保存的修改. 应使用<a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a>方法代替.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.0.0</p>\n        <p>将会在下一个主版本中删除.</p>\n\n        </div>\n</div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> applyIfNotSet</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>设置配置项 ...</div><div class='long'><p>设置配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setProxy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-setProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-setProxy' class='name expandable'>setProxy</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a> proxy</span> ) : <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a></div><div class='description'><div class='short'>通过字符串, 属性对象或Proxy实例为当前Store设置Proxy. ...</div><div class='long'><p>通过字符串, 属性对象或Proxy实例为当前Store设置Proxy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a><div class='sub-desc'><p>新Proxy对象, 可以是字符串, 属性对象, 或Ext.data.proxy.Proxy实例</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a></span><div class='sub-desc'><p>附属的Proxy代理对象</p>\n</div></li></ul></div></div></div><div id='method-sort' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='defined-in docClass'>Ext.util.Sortable</a><br/><a href='source/Sortable.html#Ext-util-Sortable-method-sort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Sortable-method-sort' class='name expandable'>sort</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[] sorters, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> direction</span> ) : <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]</div><div class='description'><div class='short'>使用一个或多个排序Store中的数据。使用范例：\n\n//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyS...</div><div class='long'><p>使用一个或多个排序Store中的数据。使用范例：</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([\n    {\n        property : 'age',\n        direction: 'ASC'\n    },\n    {\n        property : 'name',\n        direction: 'DESC'\n    }\n]);\n</code></pre>\n\n<p>Store在内部将参数转换为<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>实例数组，\n把实际的排序过程委托给它内部的<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>。</p>\n\n<p>当传递单个字符串参数时, Store给每一个字段保存了一个ASC/DESC切换器，所以如下代码:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>等价于如下代码, 因为Store实现自动的切换:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sorters</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]<div class='sub-desc'><p>本Store的配置的<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>的一个字段的字符串名字，\n或者排序器配置数组。</p>\n</div></li><li><span class='pre'>direction</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>数据排序方向。默认为\"ASC\"。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>获取从该对象被实例化的类的引用。 ...</div><div class='long'><p>获取从该对象被实例化的类的引用。 请注意不同于 <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code>是独立的作用域，无论<code>this</code>是否运行，总是返回其中的调用类。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // 总是等于'Cat'，无论'this'是什么，\n                                        // 相当于：My.Cat.speciesName\n\n        alert(this.self.speciesName);   // 依赖 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // 依赖 'this'\n\n        cloned.groupName = this.statics().speciesName;   // 相当于: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', 然后提示 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', 然后提示 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sum' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-method-sum' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-method-sum' class='name expandable'>sum</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> field, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> grouped]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>对每个start与 end 之间的 record 记录 的某个属性 property 计算和值,\n并返回结果. ...</div><div class='long'><p>对每个<code>start</code>与 <code>end</code> 之间的 <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> 记录 的某个属性 <code>property</code> 计算和值,\n并返回结果.</p>\n\n<p>如果store有过滤器, 则只计算过滤后记录的总和.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要进行统计的每条记录里的域</p>\n</div></li><li><span class='pre'>grouped</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true在对store中的所有分组执行操作.\n此时返回的值将会是一个对象,由 group name 作为key,而分组的总和(sum)将会成为对应的值.\n参数 grouped 只有当store 拥有 groupField时才需要使用.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>The sum</p>\n</div></li></ul></div></div></div><div id='method-suspendAutoSync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-suspendAutoSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-suspendAutoSync' class='name expandable'>suspendAutoSync</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>暂停Store与Proxy的自动数据同步. ...</div><div class='long'><p>暂停Store与Proxy的自动数据同步. 仅当<a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a>为true时有效.</p>\n</div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> queueSuspended</span> )</div><div class='description'><div class='short'>挂起所有事件的触发。(见resumeEvents) ...</div><div class='long'><p>挂起所有事件的触发。(见<a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>传true，让挂起的事件排队而不是丢弃所有挂起的事件，\n这些事件将会在调用<a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>之后触发。</p>\n</div></li></ul></div></div></div><div id='method-sync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-method-sync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-method-sync' class='name expandable'>sync</a>( <span class='pre'>[<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> ) : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></div><div class='description'><div class='short'>同步Store与其proxy. ...</div><div class='long'><p>同步Store与其<a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>. 此处请求代理器分批处理Store中所有新增, 修改, 删除的记录, 并在每次操作执行完成后\n更新Store内部的数据记录.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>包含一个或多个同步方法所支持的属性参数的对象(这些参数将被传入底层代理的\n<a href=\"#!/api/Ext.data.proxy.Proxy-method-batch\" rel=\"Ext.data.proxy.Proxy-method-batch\" class=\"docClass\">batch</a>方法):</p>\n<ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>一个<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>对象(或用来创建Batch实例的属性参数).\n若未明确指定, 则会自动创建一个默认的Batch对象.</p>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>同步结束后的回调函数. 无论同步是否成功都将调用此回调函数, 调用参数如下:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a><div class='sub-desc'><p>操作前传入的<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a>参数,\n包含处理完成后所有的带状态标记的操作对象.</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>最初传入sync方法的options参数.</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>同步操作成功完成后的回调函数. 此回调函数仅当所有操作都没有报告异常时才调用. 如果至少一个异常发生, 则改为调用options.failure方法\n成功回调函数参数如下:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a><div class='sub-desc'><p>操作前传入的<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a>参数,\n包含处理完成后所有的带状态标记的操作对象.</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>最初传入sync方法的options参数.</p>\n</div></li></ul></div></li><li><span class='pre'>failure</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>同步操作没有成功完成后的回调函数. 此回调函数在处理过程中有一个或多个操作返回\n异常时被调用(即使有部分操作成功完成). 这种情况下你可以检查batch参数的<a href=\"#!/api/Ext.data.Batch-property-exceptions\" rel=\"Ext.data.Batch-property-exceptions\" class=\"docClass\">exceptions</a>\n数组来查明发生异常的操作. 失败回调函数的参数如下:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>batch</span> : <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a><div class='sub-desc'><p>操作前传入的<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a>参数,\n包含处理完成后所有的带状态标记的操作对象.</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>最初传入sync方法的options参数.</p>\n</div></li></ul></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>所有回调函数的执行作用域(也就是callback, success, failure回调函数中的'this'所指对象).\n默认为当前store的proxy对象.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>配置扩展 ...</div><div class='long'><p>配置扩展</p>\n</div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-un' class='name expandable'>un</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>removeListener的简写方法\n\n移除事件处理函数。 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>的简写方法</p>\n\n<p>移除事件处理函数。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件处理函数关联的事件类型</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>待移除的事件处理函数。 <strong>必须是对传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n的函数的引用。</strong></p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 原先为事件处理函数指定的作用域。\n它必须是和原先调用<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>时指定的作用域参数是一样的，否者监听器将会被移除。</p>\n\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addMembers' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>方法/属性添加到这个类的原型。 ...</div><div class='long'><p>方法/属性添加到这个类的原型。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>添加/重写这个类的静态属性。 ...</div><div class='long'><p>添加/重写这个类的静态属性。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a> fromClass, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='private signature'>private</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>这个类的原型借用另一个类的成员\n\nExt.define('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n...</div><div class='long'><p>这个类的原型借用另一个类的成员</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>借用成员的类</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>借用成员的名称</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this 借用成员</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>创建这个类的新实例。 ...</div><div class='long'><p>创建这个类的新实例。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>所有参数传递至类的构造。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>创建的实例。</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> , <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> origin</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>创建现有的原型方法的别名。例如：\n\nExt.define('My.cool.Class', {\n    method1: function() { ... ...</div><div class='long'><p>创建现有的原型方法的别名。例如：</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>别名新方法的名称，或对象设置多个别名。\n参见<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>原来的方法名</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>以字符串格式，获取当前类的名称。 ...</div><div class='long'><p>以字符串格式，获取当前类的名称。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>className 类名</p>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='deprecated signature'>deprecated</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>重写这个类的成员。通过callParent重写的方法可以调用。 ...</div><div class='long'><p>重写这个类的成员。通过<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>重写的方法可以调用。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!我要成为一只猫！\"\n                          // alerts \"I'm a cat!我是一只猫！\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>在4.1版本, 直接利用这种方法已经过时了。 使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\n代替:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>以上完成了相同的结果，但可以由<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>重写，\n其目标类和生成过程中，可以决定是否需要根据目标类所需的状态覆盖管理(My.Cat)。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> 代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>添加到这个类的属性。\n这应当被指定为一个对象包含一个或多个属性的文字。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class 当前类</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-add' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-add' class='name expandable'>add</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当有数据实例被添加时触发此事件. ...</div><div class='long'><p>当有数据实例被添加时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>被添加的数据实例.</p>\n</div></li><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>数据实例被插入的位置.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeload' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-beforeload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-beforeload' class='name expandable'>beforeload</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在一个新数据对象请求发出前触发此事件. ...</div><div class='long'><p>在一个新数据对象请求发出前触发此事件. 如果beforeload的处理函数返回'false', 数据请求将被取消.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>Store执行加载时作为参数传给Proxy的Ext.data.Operation对象.</p>\n\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeprefetch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-event-beforeprefetch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-event-beforeprefetch' class='name expandable'>beforeprefetch</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> this, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在预取操作之前触发. ...</div><div class='long'><p>在预取操作之前触发. 返回 false 则取消操作.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>相关的操作</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforesync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-beforesync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-beforesync' class='name expandable'>beforesync</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在执行sync调用之前触发此事件. ...</div><div class='long'><p>在执行<a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a>调用之前触发此事件. 当有监听者返回'false'时取消同步.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>所有待同步的数据记录, 分解为create, update和destroy的哈希存储.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-clear' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-clear' class='name expandable'>clear</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在removeAll方法调用之后触发此事件. ...</div><div class='long'><p>在<a href=\"#!/api/Ext.data.AbstractStore-method-removeAll\" rel=\"Ext.data.AbstractStore-method-removeAll\" class=\"docClass\">removeAll</a>方法调用之后触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-datachanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-datachanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-datachanged' class='name expandable'>datachanged</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当Store中的现有数据有任何形式的更改时触发此事件 - 包括了添加、删除数据, 或更改现有数据. ...</div><div class='long'><p>当Store中的现有数据有任何形式的更改时触发此事件 - 包括了添加、删除数据, 或更改现有数据.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-groupchange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-event-groupchange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-event-groupchange' class='name expandable'>groupchange</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[] groupers, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>只要 grid 中的分组一改变就触发 ...</div><div class='long'><p>只要 grid 中的分组一改变就触发</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>store对象</p>\n</div></li><li><span class='pre'>groupers</span> : <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[]<div class='sub-desc'><p>分组后的grouper对象组成的数组</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-load' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-load' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-load' class='name expandable'>load</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> successful, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>每当store从远程数据源读取数据时触发此事件. ...</div><div class='long'><p>每当store从远程数据源读取数据时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n\n</div></li><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>数据记录数组</p>\n\n</div></li><li><span class='pre'>successful</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>当操作成功时为'true'.</p>\n\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-metachange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-metachange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-metachange' class='name expandable'>metachange</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> meta, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当store的底层reader对象(通过proxy对象调用)提供了新的元数据时触发此事件. ...</div><div class='long'><p>当store的底层reader对象(通过proxy对象调用)提供了新的元数据时触发此事件.\n元数据通常由新的字段定义构成, 且可以包含系统所需的任意参数数据, 并可以根据需要由事件监听者处理.\n此事件目前仅为JsonReader对象触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>meta</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>JSON元数据</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-prefetch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.Store'>Ext.data.Store</span><br/><a href='source/Store.html#Ext-data-Store-event-prefetch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.Store-event-prefetch' class='name expandable'>prefetch</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> this, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[] records, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> successful, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在预取操作完成之后触发 ...</div><div class='long'><p>在预取操作完成之后触发</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'>\n</div></li><li><span class='pre'>records</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]<div class='sub-desc'><p>由records组成的数组.</p>\n</div></li><li><span class='pre'>successful</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>如果操作执行成功则返回 true.</p>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>相关的操作</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-refresh' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-refresh' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-refresh' class='name expandable'>refresh</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当数据缓存被整体修改(例如 排序,过滤等), 并且存在一个将当前Store作为记录缓存的组件需要刷新视图时触发此事件. ...</div><div class='long'><p>当数据缓存被整体修改(例如 排序,过滤等), 并且存在一个将当前Store作为记录缓存的组件需要刷新视图时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-remove' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-remove' class='name expandable'>remove</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> index, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当有数据实例被删除时触发此事件. ...</div><div class='long'><p>当有数据实例被删除时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n\n</div></li><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>被删除的数据实例.</p>\n\n</div></li><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>被删除数据实例的位置.</p>\n\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-update' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-update' class='name expandable'>update</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> record, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> operation, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] modifiedFieldNames, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当有数据实例被更新时触发此事件. ...</div><div class='long'><p>当有数据实例被更新时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>被更新后的数据实例.</p>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>执行的数据操作类型. 可能的值为:</p>\n\n<pre><code>Ext.data.Model.EDIT\nExt.data.Model.REJECT\nExt.data.Model.COMMIT\n</code></pre>\n</div></li><li><span class='pre'>modifiedFieldNames</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>被修改的字段名称的数组.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-write' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='defined-in docClass'>Ext.data.AbstractStore</a><br/><a href='source/AbstractStore.html#Ext-data-AbstractStore-event-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.AbstractStore-event-write' class='name expandable'>write</a>( <span class='pre'><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> store, <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> operation, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>每当通过配置的Proxy代理完成写操作时触发此事件. ...</div><div class='long'><p>每当通过配置的<a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">Proxy</a>代理完成写操作时触发此事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>store</span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a><div class='sub-desc'><p>当前Store对象</p>\n</div></li><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>用于写数据操作的<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operation</a>对象.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>"});