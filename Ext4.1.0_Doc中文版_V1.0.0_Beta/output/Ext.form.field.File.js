Ext.data.JsonP.Ext_form_field_File({"tagname":"class","name":"Ext.form.field.File","extends":"Ext.form.field.Trigger","mixins":[],"alternateClassNames":["Ext.form.FileUploadField","Ext.ux.form.FileUploadField","Ext.form.File"],"aliases":{"widget":["filefield","fileuploadfield"]},"singleton":false,"requires":[],"uses":["Ext.button.Button","Ext.layout.component.field.Field"],"code_type":"ext_define","inheritable":false,"inheritdoc":null,"meta":{"docauthor":["Jason Johnston <jason@sencha.com>","译者: 偷发个浪<287716810@qq.com>"]},"id":"class-Ext.form.field.File","members":{"cfg":[{"name":"activeError","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-activeError"},{"name":"activeErrorsTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-activeErrorsTpl"},{"name":"afterLabelTextTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-afterLabelTextTpl"},{"name":"afterLabelTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-afterLabelTpl"},{"name":"afterSubTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-afterSubTpl"},{"name":"allowBlank","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-allowBlank"},{"name":"autoEl","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-autoEl"},{"name":"autoFitErrors","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-autoFitErrors"},{"name":"autoRender","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-autoRender"},{"name":"autoScroll","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-autoScroll"},{"name":"autoShow","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-autoShow"},{"name":"baseBodyCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-baseBodyCls"},{"name":"baseCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-baseCls"},{"name":"beforeLabelTextTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-beforeLabelTextTpl"},{"name":"beforeLabelTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-beforeLabelTpl"},{"name":"beforeSubTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-beforeSubTpl"},{"name":"blankText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-blankText"},{"name":"border","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-border"},{"name":"buttonConfig","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-buttonConfig"},{"name":"buttonMargin","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-buttonMargin"},{"name":"buttonOnly","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-buttonOnly"},{"name":"buttonText","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-buttonText"},{"name":"checkChangeBuffer","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-checkChangeBuffer"},{"name":"checkChangeEvents","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-checkChangeEvents"},{"name":"childEls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-childEls"},{"name":"clearCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-clearCls"},{"name":"cls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-cls"},{"name":"componentCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-componentCls"},{"name":"componentLayout","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-componentLayout"},{"name":"contentEl","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-contentEl"},{"name":"data","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-data"},{"name":"dirtyCls","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-dirtyCls"},{"name":"disableKeyFilter","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-disableKeyFilter"},{"name":"disabled","tagname":"cfg","owner":"Ext.form.field.Field","meta":{},"id":"cfg-disabled"},{"name":"disabledCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-disabledCls"},{"name":"draggable","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-draggable"},{"name":"editable","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-editable"},{"name":"emptyCls","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-emptyCls"},{"name":"emptyText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-emptyText"},{"name":"enableKeyEvents","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-enableKeyEvents"},{"name":"enforceMaxLength","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-enforceMaxLength"},{"name":"errorMsgCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-errorMsgCls"},{"name":"fieldBodyCls","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-fieldBodyCls"},{"name":"fieldCls","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-fieldCls"},{"name":"fieldLabel","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-fieldLabel"},{"name":"fieldStyle","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-fieldStyle"},{"name":"fieldSubTpl","tagname":"cfg","owner":"Ext.form.field.Base","meta":{"private":true},"id":"cfg-fieldSubTpl"},{"name":"floating","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-floating"},{"name":"focusCls","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-focusCls"},{"name":"focusOnToFront","tagname":"cfg","owner":"Ext.util.Floating","meta":{},"id":"cfg-focusOnToFront"},{"name":"formItemCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-formItemCls"},{"name":"frame","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-frame"},{"name":"grow","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"cfg-grow"},{"name":"growAppend","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-growAppend"},{"name":"growMax","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"cfg-growMax"},{"name":"growMin","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"cfg-growMin"},{"name":"height","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-height"},{"name":"hidden","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-hidden"},{"name":"hideEmptyLabel","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-hideEmptyLabel"},{"name":"hideLabel","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-hideLabel"},{"name":"hideMode","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-hideMode"},{"name":"hideTrigger","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-hideTrigger"},{"name":"html","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-html"},{"name":"id","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-id"},{"name":"inputAttrTpl","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-inputAttrTpl"},{"name":"inputId","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-inputId"},{"name":"inputType","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-inputType"},{"name":"invalidCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-invalidCls"},{"name":"invalidText","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-invalidText"},{"name":"itemId","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-itemId"},{"name":"labelAlign","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelAlign"},{"name":"labelAttrTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelAttrTpl"},{"name":"labelCls","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelCls"},{"name":"labelClsExtra","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelClsExtra"},{"name":"labelPad","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelPad"},{"name":"labelSeparator","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelSeparator"},{"name":"labelStyle","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelStyle"},{"name":"labelWidth","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-labelWidth"},{"name":"labelableRenderTpl","tagname":"cfg","owner":"Ext.form.Labelable","meta":{"private":true},"id":"cfg-labelableRenderTpl"},{"name":"listeners","tagname":"cfg","owner":"Ext.util.Observable","meta":{},"id":"cfg-listeners"},{"name":"loader","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-loader"},{"name":"margin","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-margin"},{"name":"maskRe","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-maskRe"},{"name":"maxHeight","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-maxHeight"},{"name":"maxLength","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-maxLength"},{"name":"maxLengthText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-maxLengthText"},{"name":"maxWidth","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-maxWidth"},{"name":"minHeight","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-minHeight"},{"name":"minLength","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-minLength"},{"name":"minLengthText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-minLengthText"},{"name":"minWidth","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-minWidth"},{"name":"msgTarget","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-msgTarget"},{"name":"name","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-name"},{"name":"overCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-overCls"},{"name":"overflowX","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-overflowX"},{"name":"overflowY","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-overflowY"},{"name":"padding","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-padding"},{"name":"plugins","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-plugins"},{"name":"preventMark","tagname":"cfg","owner":"Ext.form.Labelable","meta":{},"id":"cfg-preventMark"},{"name":"readOnly","tagname":"cfg","owner":"Ext.form.field.File","meta":{},"id":"cfg-readOnly"},{"name":"readOnlyCls","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-readOnlyCls"},{"name":"regex","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-regex"},{"name":"regexText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-regexText"},{"name":"renderData","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-renderData"},{"name":"renderSelectors","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-renderSelectors"},{"name":"renderTo","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-renderTo"},{"name":"renderTpl","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{"protected":true},"id":"cfg-renderTpl"},{"name":"repeatTriggerClick","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-repeatTriggerClick"},{"name":"resizable","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-resizable"},{"name":"resizeHandles","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-resizeHandles"},{"name":"saveDelay","tagname":"cfg","owner":"Ext.state.Stateful","meta":{},"id":"cfg-saveDelay"},{"name":"selectOnFocus","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-selectOnFocus"},{"name":"shadow","tagname":"cfg","owner":"Ext.util.Floating","meta":{},"id":"cfg-shadow"},{"name":"shadowOffset","tagname":"cfg","owner":"Ext.util.Floating","meta":{},"id":"cfg-shadowOffset"},{"name":"shrinkWrap","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-shrinkWrap"},{"name":"size","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-size"},{"name":"stateEvents","tagname":"cfg","owner":"Ext.state.Stateful","meta":{},"id":"cfg-stateEvents"},{"name":"stateId","tagname":"cfg","owner":"Ext.state.Stateful","meta":{},"id":"cfg-stateId"},{"name":"stateful","tagname":"cfg","owner":"Ext.state.Stateful","meta":{},"id":"cfg-stateful"},{"name":"stripCharsRe","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-stripCharsRe"},{"name":"style","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-style"},{"name":"styleHtmlCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-styleHtmlCls"},{"name":"styleHtmlContent","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-styleHtmlContent"},{"name":"submitValue","tagname":"cfg","owner":"Ext.form.field.Field","meta":{},"id":"cfg-submitValue"},{"name":"tabIndex","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-tabIndex"},{"name":"toFrontOnShow","tagname":"cfg","owner":"Ext.Component","meta":{},"id":"cfg-toFrontOnShow"},{"name":"tpl","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-tpl"},{"name":"tplWriteMode","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-tplWriteMode"},{"name":"triggerBaseCls","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-triggerBaseCls"},{"name":"triggerCls","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-triggerCls"},{"name":"triggerWrapCls","tagname":"cfg","owner":"Ext.form.field.Trigger","meta":{},"id":"cfg-triggerWrapCls"},{"name":"ui","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-ui"},{"name":"uiCls","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"cfg-uiCls"},{"name":"validateOnBlur","tagname":"cfg","owner":"Ext.form.field.Base","meta":{},"id":"cfg-validateOnBlur"},{"name":"validateOnChange","tagname":"cfg","owner":"Ext.form.field.Field","meta":{},"id":"cfg-validateOnChange"},{"name":"validator","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-validator"},{"name":"value","tagname":"cfg","owner":"Ext.form.field.Field","meta":{},"id":"cfg-value"},{"name":"vtype","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-vtype"},{"name":"vtypeText","tagname":"cfg","owner":"Ext.form.field.Text","meta":{},"id":"cfg-vtypeText"},{"name":"width","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-width"},{"name":"xtype","tagname":"cfg","owner":"Ext.AbstractComponent","meta":{},"id":"cfg-xtype"}],"property":[{"name":"$onExtended","tagname":"property","owner":"Ext.Base","meta":{"private":true},"id":"property-S-onExtended"},{"name":"_isLayoutRoot","tagname":"property","owner":"Ext.AbstractComponent","meta":{"protected":true},"id":"property-_isLayoutRoot"},{"name":"autoGenId","tagname":"property","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"property-autoGenId"},{"name":"bodyEl","tagname":"property","owner":"Ext.form.Labelable","meta":{},"id":"property-bodyEl"},{"name":"button","tagname":"property","owner":"Ext.form.field.File","meta":{},"id":"property-button"},{"name":"componentLayoutCounter","tagname":"property","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"property-componentLayoutCounter"},{"name":"draggable","tagname":"property","owner":"Ext.AbstractComponent","meta":{"readonly":true},"id":"property-draggable"},{"name":"errorEl","tagname":"property","owner":"Ext.form.Labelable","meta":{},"id":"property-errorEl"},{"name":"fileInputEl","tagname":"property","owner":"Ext.form.field.File","meta":{},"id":"property-fileInputEl"},{"name":"floatParent","tagname":"property","owner":"Ext.Component","meta":{"readonly":true},"id":"property-floatParent"},{"name":"frameSize","tagname":"property","owner":"Ext.AbstractComponent","meta":{"readonly":true},"id":"property-frameSize"},{"name":"hasListeners","tagname":"property","owner":"Ext.util.Observable","meta":{"readonly":true},"id":"property-hasListeners"},{"name":"inputCell","tagname":"property","owner":"Ext.form.field.Trigger","meta":{},"id":"property-inputCell"},{"name":"inputEl","tagname":"property","owner":"Ext.form.field.Base","meta":{},"id":"property-inputEl"},{"name":"isComponent","tagname":"property","owner":"Ext.AbstractComponent","meta":{},"id":"property-isComponent"},{"name":"isFieldLabelable","tagname":"property","owner":"Ext.form.Labelable","meta":{},"id":"property-isFieldLabelable"},{"name":"isFormField","tagname":"property","owner":"Ext.form.field.Field","meta":{},"id":"property-isFormField"},{"name":"isObservable","tagname":"property","owner":"Ext.util.Observable","meta":{},"id":"property-isObservable"},{"name":"labelCell","tagname":"property","owner":"Ext.form.Labelable","meta":{},"id":"property-labelCell"},{"name":"labelEl","tagname":"property","owner":"Ext.form.Labelable","meta":{},"id":"property-labelEl"},{"name":"maskOnDisable","tagname":"property","owner":"Ext.AbstractComponent","meta":{},"id":"property-maskOnDisable"},{"name":"noWrap","tagname":"property","owner":"Ext.form.Labelable","meta":{"private":true},"id":"property-noWrap"},{"name":"originalValue","tagname":"property","owner":"Ext.form.field.Field","meta":{},"id":"property-originalValue"},{"name":"ownerCt","tagname":"property","owner":"Ext.AbstractComponent","meta":{"readonly":true},"id":"property-ownerCt"},{"name":"rendered","tagname":"property","owner":"Ext.AbstractComponent","meta":{"readonly":true},"id":"property-rendered"},{"name":"self","tagname":"property","owner":"Ext.Base","meta":{"protected":true},"id":"property-self"},{"name":"suspendCheckChange","tagname":"property","owner":"Ext.form.field.Field","meta":{"private":true},"id":"property-suspendCheckChange"},{"name":"triggerEl","tagname":"property","owner":"Ext.form.field.Trigger","meta":{},"id":"property-triggerEl"},{"name":"triggerWrap","tagname":"property","owner":"Ext.form.field.Trigger","meta":{},"id":"property-triggerWrap"},{"name":"zIndexManager","tagname":"property","owner":"Ext.Component","meta":{"readonly":true},"id":"property-zIndexManager"},{"name":"zIndexParent","tagname":"property","owner":"Ext.Component","meta":{"readonly":true},"id":"property-zIndexParent"}],"method":[{"name":"constructor","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-constructor"},{"name":"addChildEls","tagname":"method","owner":"Ext.util.ElementContainer","meta":{},"id":"method-addChildEls"},{"name":"addClass","tagname":"method","owner":"Ext.AbstractComponent","meta":{"deprecated":{"version":"4.1","text":"Use {@link #addCls} instead."}},"id":"method-addClass"},{"name":"addCls","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-addCls"},{"name":"addClsWithUI","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-addClsWithUI"},{"name":"addConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addConfig"},{"name":"addEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addEvents"},{"name":"addFocusListener","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-addFocusListener"},{"name":"addInheritableStatics","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addInheritableStatics"},{"name":"addListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addListener"},{"name":"addManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-addManagedListener"},{"name":"addMember","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addMember"},{"name":"addPropertyToState","tagname":"method","owner":"Ext.AbstractComponent","meta":{"protected":true},"id":"method-addPropertyToState"},{"name":"addStateEvents","tagname":"method","owner":"Ext.state.Stateful","meta":{},"id":"method-addStateEvents"},{"name":"addUIClsToElement","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-addUIClsToElement"},{"name":"addUIToElement","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-addUIToElement"},{"name":"addXtype","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-addXtype"},{"name":"afterComponentLayout","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-afterComponentLayout"},{"name":"afterHide","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-afterHide"},{"name":"afterRender","tagname":"method","owner":"Ext.util.Renderable","meta":{"template":true,"protected":true},"id":"method-afterRender"},{"name":"afterSetPosition","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-afterSetPosition"},{"name":"afterShow","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-afterShow"},{"name":"alignTo","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-alignTo"},{"name":"animate","tagname":"method","owner":"Ext.util.Animate","meta":{},"id":"method-animate"},{"name":"applyChildEls","tagname":"method","owner":"Ext.util.ElementContainer","meta":{"private":true},"id":"method-applyChildEls"},{"name":"applyRenderSelectors","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-applyRenderSelectors"},{"name":"applyState","tagname":"method","owner":"Ext.state.Stateful","meta":{},"id":"method-applyState"},{"name":"autoSize","tagname":"method","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"method-autoSize"},{"name":"batchChanges","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-batchChanges"},{"name":"batchLayouts","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-batchLayouts"},{"name":"beforeComponentLayout","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-beforeComponentLayout"},{"name":"beforeDestroy","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-beforeDestroy"},{"name":"beforeSetPosition","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-beforeSetPosition"},{"name":"beforeShow","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-beforeShow"},{"name":"bubble","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-bubble"},{"name":"callOverridden","tagname":"method","owner":"Ext.Base","meta":{"protected":true,"deprecated":{"version":"4.1","text":"版本 使用 {@link #callParent} 代替."}},"id":"method-callOverridden"},{"name":"callParent","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-callParent"},{"name":"cancelFocus","tagname":"method","owner":"Ext.Component","meta":{"protected":true},"id":"method-cancelFocus"},{"name":"center","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-center"},{"name":"checkChange","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-checkChange"},{"name":"checkDirty","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-checkDirty"},{"name":"clearInvalid","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-clearInvalid"},{"name":"clearListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearListeners"},{"name":"clearManagedListeners","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-clearManagedListeners"},{"name":"cloneConfig","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-cloneConfig"},{"name":"constructPlugins","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-constructPlugins"},{"name":"continueFireEvent","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-continueFireEvent"},{"name":"convertPosition","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-convertPosition"},{"name":"createFileInput","tagname":"method","owner":"Ext.form.field.File","meta":{"private":true},"id":"method-createFileInput"},{"name":"createRelayer","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-createRelayer"},{"name":"destroy","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-destroy"},{"name":"disable","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-disable"},{"name":"doApplyRenderTpl","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-doApplyRenderTpl"},{"name":"doAutoRender","tagname":"method","owner":"Ext.util.Renderable","meta":{},"id":"method-doAutoRender"},{"name":"doComponentLayout","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-doComponentLayout"},{"name":"doConstrain","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-doConstrain"},{"name":"enable","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-enable"},{"name":"enableBubble","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-enableBubble"},{"name":"ensureAttachedToBody","tagname":"method","owner":"Ext.util.Renderable","meta":{},"id":"method-ensureAttachedToBody"},{"name":"extend","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-extend"},{"name":"extractFileInput","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-extractFileInput"},{"name":"findParentBy","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-findParentBy"},{"name":"findParentByType","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-findParentByType"},{"name":"finishRender","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-finishRender"},{"name":"fireEvent","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-fireEvent"},{"name":"focus","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-focus"},{"name":"forceComponentLayout","tagname":"method","owner":"Ext.AbstractComponent","meta":{"deprecated":{"version":"4.1.0","text":"Use {@link #updateLayout} instead."}},"id":"method-forceComponentLayout"},{"name":"getActiveAnimation","tagname":"method","owner":"Ext.util.Animate","meta":{},"id":"method-getActiveAnimation"},{"name":"getActiveError","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-getActiveError"},{"name":"getActiveErrors","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-getActiveErrors"},{"name":"getAutoId","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-getAutoId"},{"name":"getBodyColspan","tagname":"method","owner":"Ext.form.Labelable","meta":{"private":true},"id":"method-getBodyColspan"},{"name":"getBox","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-getBox"},{"name":"getBubbleParent","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-getBubbleParent"},{"name":"getBubbleTarget","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getBubbleTarget"},{"name":"getConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-getConfig"},{"name":"getConstrainVector","tagname":"method","owner":"Ext.util.Floating","meta":{"private":true},"id":"method-getConstrainVector"},{"name":"getEl","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getEl"},{"name":"getErrors","tagname":"method","owner":"Ext.form.field.Text","meta":{},"id":"method-getErrors"},{"name":"getFieldLabel","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-getFieldLabel"},{"name":"getFocusEl","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-getFocusEl"},{"name":"getFrameInfo","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-getFrameInfo"},{"name":"getFrameTpl","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-getFrameTpl"},{"name":"getHeight","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getHeight"},{"name":"getId","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getId"},{"name":"getInitialConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-getInitialConfig"},{"name":"getInputId","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-getInputId"},{"name":"getInsertPosition","tagname":"method","owner":"Ext.util.Renderable","meta":{},"id":"method-getInsertPosition"},{"name":"getLabelStyle","tagname":"method","owner":"Ext.form.Labelable","meta":{"private":true},"id":"method-getLabelStyle"},{"name":"getLabelableRenderData","tagname":"method","owner":"Ext.form.Labelable","meta":{"protected":true},"id":"method-getLabelableRenderData"},{"name":"getLoader","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getLoader"},{"name":"getModelData","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-getModelData"},{"name":"getName","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-getName"},{"name":"getOverflowStyle","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-getOverflowStyle"},{"name":"getPlugin","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getPlugin"},{"name":"getPosition","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-getPosition"},{"name":"getRawValue","tagname":"method","owner":"Ext.form.field.Text","meta":{},"id":"method-getRawValue"},{"name":"getSize","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getSize"},{"name":"getSizeModel","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getSizeModel"},{"name":"getState","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getState"},{"name":"getStateId","tagname":"method","owner":"Ext.state.Stateful","meta":{"private":true},"id":"method-getStateId"},{"name":"getStyleProxy","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-getStyleProxy"},{"name":"getSubTplData","tagname":"method","owner":"Ext.form.field.Base","meta":{"template":true},"id":"method-getSubTplData"},{"name":"getSubTplMarkup","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-getSubTplMarkup"},{"name":"getSubmitData","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-getSubmitData"},{"name":"getSubmitValue","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-getSubmitValue"},{"name":"getTargetEl","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-getTargetEl"},{"name":"getTpl","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-getTpl"},{"name":"getTriggerMarkup","tagname":"method","owner":"Ext.form.field.File","meta":{},"id":"method-getTriggerMarkup"},{"name":"getTriggerStateFlags","tagname":"method","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"method-getTriggerStateFlags"},{"name":"getTriggerWidth","tagname":"method","owner":"Ext.form.field.Trigger","meta":{},"id":"method-getTriggerWidth"},{"name":"getValue","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-getValue"},{"name":"getWidth","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getWidth"},{"name":"getXType","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-getXType"},{"name":"getXTypes","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-getXTypes"},{"name":"hasActiveError","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-hasActiveError"},{"name":"hasActiveFx","tagname":"method","owner":"Ext.util.Animate","meta":{"deprecated":{"text":"废弃的方法; 4.0以后使用 {@link #getActiveAnimation} 替代"}},"id":"method-hasActiveFx"},{"name":"hasCls","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-hasCls"},{"name":"hasConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-hasConfig"},{"name":"hasListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-hasListener"},{"name":"hasUICls","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-hasUICls"},{"name":"hasVisibleLabel","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-hasVisibleLabel"},{"name":"hide","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-hide"},{"name":"implement","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-implement"},{"name":"initComponent","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-initComponent"},{"name":"initConfig","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-initConfig"},{"name":"initField","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-initField"},{"name":"initFrame","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-initFrame"},{"name":"initLabelable","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-initLabelable"},{"name":"initRenderData","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-initRenderData"},{"name":"initRenderTpl","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-initRenderTpl"},{"name":"initState","tagname":"method","owner":"Ext.state.Stateful","meta":{"private":true},"id":"method-initState"},{"name":"initStyles","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-initStyles"},{"name":"initValue","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-initValue"},{"name":"is","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-is"},{"name":"isDescendantOf","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isDescendantOf"},{"name":"isDirty","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-isDirty"},{"name":"isDisabled","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isDisabled"},{"name":"isDraggable","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isDraggable"},{"name":"isDroppable","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isDroppable"},{"name":"isEqual","tagname":"method","owner":"Ext.form.field.Text","meta":{"private":true},"id":"method-isEqual"},{"name":"isEqualAsString","tagname":"method","owner":"Ext.form.field.Field","meta":{"private":true},"id":"method-isEqualAsString"},{"name":"isFileUpload","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-isFileUpload"},{"name":"isFloating","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isFloating"},{"name":"isHidden","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isHidden"},{"name":"isLayoutRoot","tagname":"method","owner":"Ext.AbstractComponent","meta":{"protected":true},"id":"method-isLayoutRoot"},{"name":"isLayoutSuspended","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isLayoutSuspended"},{"name":"isValid","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-isValid"},{"name":"isVisible","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isVisible"},{"name":"isXType","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-isXType"},{"name":"markInvalid","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-markInvalid"},{"name":"mixin","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-mixin"},{"name":"mon","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-mon"},{"name":"mun","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-mun"},{"name":"nextNode","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-nextNode"},{"name":"nextSibling","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-nextSibling"},{"name":"on","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-on"},{"name":"onAdded","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onAdded"},{"name":"onBlur","tagname":"method","owner":"Ext.form.field.Trigger","meta":{"private":true},"id":"method-onBlur"},{"name":"onChange","tagname":"method","owner":"Ext.form.field.Text","meta":{"private":true},"id":"method-onChange"},{"name":"onConfigUpdate","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-onConfigUpdate"},{"name":"onDestroy","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-onDestroy"},{"name":"onDirtyChange","tagname":"method","owner":"Ext.form.field.Base","meta":{"private":true},"id":"method-onDirtyChange"},{"name":"onDisable","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onDisable"},{"name":"onEnable","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onEnable"},{"name":"onExtended","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-onExtended"},{"name":"onFileChange","tagname":"method","owner":"Ext.form.field.File","meta":{"private":true},"id":"method-onFileChange"},{"name":"onHide","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-onHide"},{"name":"onPosition","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onPosition"},{"name":"onRemoved","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onRemoved"},{"name":"onRender","tagname":"method","owner":"Ext.util.Renderable","meta":{"template":true,"protected":true},"id":"method-onRender"},{"name":"onResize","tagname":"method","owner":"Ext.AbstractComponent","meta":{"template":true,"protected":true},"id":"method-onResize"},{"name":"onShow","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-onShow"},{"name":"onShowComplete","tagname":"method","owner":"Ext.Component","meta":{"template":true,"protected":true},"id":"method-onShowComplete"},{"name":"onStateChange","tagname":"method","owner":"Ext.state.Stateful","meta":{"private":true},"id":"method-onStateChange"},{"name":"onTriggerClick","tagname":"method","owner":"Ext.form.field.Trigger","meta":{"protected":true},"id":"method-onTriggerClick"},{"name":"prepareClass","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-prepareClass"},{"name":"previousNode","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-previousNode"},{"name":"previousSibling","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-previousSibling"},{"name":"processRawValue","tagname":"method","owner":"Ext.form.field.Text","meta":{},"id":"method-processRawValue"},{"name":"rawToValue","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-rawToValue"},{"name":"registerFloatingItem","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-registerFloatingItem"},{"name":"relayEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-relayEvents"},{"name":"removeChildEls","tagname":"method","owner":"Ext.util.ElementContainer","meta":{},"id":"method-removeChildEls"},{"name":"removeCls","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-removeCls"},{"name":"removeClsWithUI","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-removeClsWithUI"},{"name":"removeListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeListener"},{"name":"removeManagedListener","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-removeManagedListener"},{"name":"removeManagedListenerItem","tagname":"method","owner":"Ext.util.Observable","meta":{"private":true},"id":"method-removeManagedListenerItem"},{"name":"removeUIClsFromElement","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-removeUIClsFromElement"},{"name":"removeUIFromElement","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-removeUIFromElement"},{"name":"renderActiveError","tagname":"method","owner":"Ext.form.field.Base","meta":{"private":true},"id":"method-renderActiveError"},{"name":"reset","tagname":"method","owner":"Ext.form.field.Text","meta":{},"id":"method-reset"},{"name":"resetOriginalValue","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-resetOriginalValue"},{"name":"resumeEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-resumeEvents"},{"name":"savePropToState","tagname":"method","owner":"Ext.state.Stateful","meta":{},"id":"method-savePropToState"},{"name":"savePropsToState","tagname":"method","owner":"Ext.state.Stateful","meta":{},"id":"method-savePropsToState"},{"name":"saveState","tagname":"method","owner":"Ext.state.Stateful","meta":{},"id":"method-saveState"},{"name":"scrollBy","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-scrollBy"},{"name":"selectText","tagname":"method","owner":"Ext.form.field.Text","meta":{},"id":"method-selectText"},{"name":"sequenceFx","tagname":"method","owner":"Ext.util.Animate","meta":{},"id":"method-sequenceFx"},{"name":"setActive","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-setActive"},{"name":"setActiveError","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-setActiveError"},{"name":"setActiveErrors","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-setActiveErrors"},{"name":"setAutoScroll","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-setAutoScroll"},{"name":"setBorder","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setBorder"},{"name":"setConfig","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-setConfig"},{"name":"setDisabled","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setDisabled"},{"name":"setDocked","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setDocked"},{"name":"setEditable","tagname":"method","owner":"Ext.form.field.Trigger","meta":{},"id":"method-setEditable"},{"name":"setFieldDefaults","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-setFieldDefaults"},{"name":"setFieldLabel","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-setFieldLabel"},{"name":"setFieldStyle","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-setFieldStyle"},{"name":"setHeight","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setHeight"},{"name":"setLoading","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-setLoading"},{"name":"setOverflowXY","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-setOverflowXY"},{"name":"setPagePosition","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-setPagePosition"},{"name":"setPosition","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setPosition"},{"name":"setRawValue","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-setRawValue"},{"name":"setReadOnly","tagname":"method","owner":"Ext.form.field.Trigger","meta":{},"id":"method-setReadOnly"},{"name":"setSize","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setSize"},{"name":"setUI","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setUI"},{"name":"setValue","tagname":"method","owner":"Ext.form.field.File","meta":{},"id":"method-setValue"},{"name":"setVisible","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setVisible"},{"name":"setWidth","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-setWidth"},{"name":"setupFramingTpl","tagname":"method","owner":"Ext.util.Renderable","meta":{"private":true},"id":"method-setupFramingTpl"},{"name":"show","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-show"},{"name":"showAt","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-showAt"},{"name":"statics","tagname":"method","owner":"Ext.Base","meta":{"protected":true},"id":"method-statics"},{"name":"stopAnimation","tagname":"method","owner":"Ext.util.Animate","meta":{},"id":"method-stopAnimation"},{"name":"stopFx","tagname":"method","owner":"Ext.util.Animate","meta":{"deprecated":{"text":"从 4.0 开始被 {@link #stopAnimation} 替代"}},"id":"method-stopFx"},{"name":"suspendEvents","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-suspendEvents"},{"name":"syncFx","tagname":"method","owner":"Ext.util.Animate","meta":{},"id":"method-syncFx"},{"name":"toBack","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-toBack"},{"name":"toFront","tagname":"method","owner":"Ext.util.Floating","meta":{},"id":"method-toFront"},{"name":"triggerExtended","tagname":"method","owner":"Ext.Base","meta":{"private":true},"id":"method-triggerExtended"},{"name":"un","tagname":"method","owner":"Ext.util.Observable","meta":{},"id":"method-un"},{"name":"unsetActiveError","tagname":"method","owner":"Ext.form.Labelable","meta":{},"id":"method-unsetActiveError"},{"name":"up","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-up"},{"name":"update","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-update"},{"name":"updateAria","tagname":"method","owner":"Ext.AbstractComponent","meta":{"private":true},"id":"method-updateAria"},{"name":"updateBox","tagname":"method","owner":"Ext.Component","meta":{},"id":"method-updateBox"},{"name":"updateLayout","tagname":"method","owner":"Ext.AbstractComponent","meta":{},"id":"method-updateLayout"},{"name":"validate","tagname":"method","owner":"Ext.form.field.Field","meta":{},"id":"method-validate"},{"name":"validateValue","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-validateValue"},{"name":"valueToRaw","tagname":"method","owner":"Ext.form.field.Base","meta":{},"id":"method-valueToRaw"}],"event":[{"name":"activate","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-activate"},{"name":"added","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-added"},{"name":"afterrender","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-afterrender"},{"name":"autosize","tagname":"event","owner":"Ext.form.field.Text","meta":{},"id":"event-autosize"},{"name":"beforeactivate","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforeactivate"},{"name":"beforedeactivate","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforedeactivate"},{"name":"beforedestroy","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforedestroy"},{"name":"beforehide","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforehide"},{"name":"beforerender","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforerender"},{"name":"beforeshow","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-beforeshow"},{"name":"beforestaterestore","tagname":"event","owner":"Ext.state.Stateful","meta":{},"id":"event-beforestaterestore"},{"name":"beforestatesave","tagname":"event","owner":"Ext.state.Stateful","meta":{},"id":"event-beforestatesave"},{"name":"blur","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-blur"},{"name":"boxready","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-boxready"},{"name":"change","tagname":"event","owner":"Ext.form.field.File","meta":{},"id":"event-change"},{"name":"deactivate","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-deactivate"},{"name":"destroy","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-destroy"},{"name":"dirtychange","tagname":"event","owner":"Ext.form.field.Field","meta":{},"id":"event-dirtychange"},{"name":"disable","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-disable"},{"name":"enable","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-enable"},{"name":"errorchange","tagname":"event","owner":"Ext.form.Labelable","meta":{},"id":"event-errorchange"},{"name":"focus","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-focus"},{"name":"hide","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-hide"},{"name":"keydown","tagname":"event","owner":"Ext.form.field.Text","meta":{},"id":"event-keydown"},{"name":"keypress","tagname":"event","owner":"Ext.form.field.Text","meta":{},"id":"event-keypress"},{"name":"keyup","tagname":"event","owner":"Ext.form.field.Text","meta":{},"id":"event-keyup"},{"name":"move","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-move"},{"name":"removed","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-removed"},{"name":"render","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-render"},{"name":"resize","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-resize"},{"name":"show","tagname":"event","owner":"Ext.AbstractComponent","meta":{},"id":"event-show"},{"name":"specialkey","tagname":"event","owner":"Ext.form.field.Base","meta":{},"id":"event-specialkey"},{"name":"staterestore","tagname":"event","owner":"Ext.state.Stateful","meta":{},"id":"event-staterestore"},{"name":"statesave","tagname":"event","owner":"Ext.state.Stateful","meta":{},"id":"event-statesave"},{"name":"validitychange","tagname":"event","owner":"Ext.form.field.Field","meta":{},"id":"event-validitychange"},{"name":"writeablechange","tagname":"event","owner":"Ext.form.field.Base","meta":{},"id":"event-writeablechange"}],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[{"name":"addMembers","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-addMembers"},{"name":"addStatics","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-addStatics"},{"name":"borrow","tagname":"method","owner":"Ext.Base","meta":{"static":true,"private":true},"id":"static-method-borrow"},{"name":"create","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-create"},{"name":"createAlias","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-createAlias"},{"name":"getName","tagname":"method","owner":"Ext.Base","meta":{"static":true},"id":"static-method-getName"},{"name":"override","tagname":"method","owner":"Ext.Base","meta":{"static":true,"markdown":true,"deprecated":{"version":"4.1.0","text":"使用 {@link Ext#define Ext.define} 代替"}},"id":"static-method-override"}],"event":[],"css_var":[],"css_mixin":[]},"files":[{"filename":"File.js","href":"File.html#Ext-form-field-File"}],"html_meta":{"docauthor":null},"component":true,"superclasses":["Ext.Base","Ext.AbstractComponent","Ext.Component","Ext.form.field.Base","Ext.form.field.Text","Ext.form.field.Trigger"],"subclasses":[],"mixedInto":[],"parentMixins":["Ext.form.Labelable","Ext.form.field.Field","Ext.util.Floating","Ext.util.Observable","Ext.util.Animate","Ext.util.ElementContainer","Ext.util.Renderable","Ext.state.Stateful"],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Ext.form.File</div><div class='alternate-class-name'>Ext.form.FileUploadField</div><div class='alternate-class-name'>Ext.ux.form.FileUploadField</div><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='docClass'>Ext.AbstractComponent</a><div class='subclass '><a href='#!/api/Ext.Component' rel='Ext.Component' class='docClass'>Ext.Component</a><div class='subclass '><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='docClass'>Ext.form.field.Base</a><div class='subclass '><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='docClass'>Ext.form.field.Text</a><div class='subclass '><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='docClass'>Ext.form.field.Trigger</a><div class='subclass '><strong>Ext.form.field.File</strong></div></div></div></div></div></div></div><h4>Inherited mixins</h4><div class='dependency'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='docClass'>Ext.form.Labelable</a></div><div class='dependency'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='docClass'>Ext.form.field.Field</a></div><div class='dependency'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='docClass'>Ext.state.Stateful</a></div><div class='dependency'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='docClass'>Ext.util.Animate</a></div><div class='dependency'><a href='#!/api/Ext.util.ElementContainer' rel='Ext.util.ElementContainer' class='docClass'>Ext.util.ElementContainer</a></div><div class='dependency'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='docClass'>Ext.util.Floating</a></div><div class='dependency'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a></div><div class='dependency'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='docClass'>Ext.util.Renderable</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/Ext.button.Button' rel='Ext.button.Button' class='docClass'>Ext.button.Button</a></div><div class='dependency'><a href='#!/api/Ext.layout.component.field.Field' rel='Ext.layout.component.field.Field' class='docClass'>Ext.layout.component.field.Field</a></div><h4>Files</h4><div class='dependency'><a href='source/File.html#Ext-form-field-File' target='_blank'>File.js</a></div></pre><div class='doc-contents'><p>一个文件上传表单项具有自定义的样式，并且可以控制按钮的文本和\n像 <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">文本表单项</a> 的 <a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">空文本</a>类似的其他特性。\n它使用一个隐藏的文件输入元素，并在用户选择文件后\n在 <a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">form 提交</a>的同时执行实际的文件上传。</p>\n\n<p>因为没有安全的跨浏览器以编程的方式对file表单项设值的方式,\n所以标准表单项的 <code>setValue</code> 方法是无效的。 <code><a href=\"#!/api/Ext.form.field.File-method-getValue\" rel=\"Ext.form.field.File-method-getValue\" class=\"docClass\">getValue</a></code> 方法的返回值取决于使用何种\n浏览器; 一些仅仅返回文件名, 一些返回一个完整的文件路径, 一些则\n返回文件的虚拟路径。</p>\n\n<p><strong>重点:</strong> 文件上传不是使用标准的'Ajax' 技术；想要查看更多的细节，请查看\n<a href=\"#!/api/Ext.form.Basic-method-hasUpload\" rel=\"Ext.form.Basic-method-hasUpload\" class=\"docClass\">Ext.form.Basic.hasUpload</a> 。</p>\n\n<h1>惯用法</h1>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'Upload a Photo',\n    width: 400,\n    bodyPadding: 10,\n    frame: true,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    items: [{\n        xtype: 'filefield',\n        name: 'photo',\n        fieldLabel: 'Photo',\n        labelWidth: 50,\n        msgTarget: 'side',\n        allowBlank: false,\n        anchor: '100%',\n        buttonText: 'Select Photo...'\n    }],\n\n    buttons: [{\n        text: 'Upload',\n        handler: function() {\n            var form = this.up('form').getForm();\n            if(form.isValid()){\n                form.submit({\n                    url: 'photo-upload.php',\n                    waitMsg: 'Uploading your photo...',\n                    success: function(fp, o) {\n                        <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Success', 'Your photo \"' + o.result.file + '\" has been uploaded.');\n                    }\n                });\n            }\n        }\n    }]\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-activeError' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-activeError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-activeError' class='name expandable'>activeError</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>如果指定，则当第一次渲染时，该组件会显示这个值作为其主动消息。 ...</div><div class='long'><p>如果指定，则当第一次渲染时，该组件会显示这个值作为其主动消息。\n使用<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a>或<a href=\"#!/api/Ext.form.Labelable-method-unsetActiveError\" rel=\"Ext.form.Labelable-method-unsetActiveError\" class=\"docClass\">unsetActiveError</a>在组件创建之后更改它。</p>\n</div></div></div><div id='cfg-activeErrorsTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-activeErrorsTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-activeErrorsTpl' class='name expandable'>activeErrorsTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>模板，用于把传递到setActiveErrors错误消息的数组格式化成一个HTML字符串。 ...</div><div class='long'><p>模板，用于把传递到<a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a>错误消息的数组格式化成一个HTML字符串。\n默认情况下，渲染每个消息作为一个无序列表中的一项。</p>\n<p>Defaults to: <code>[&quot;&lt;tpl if=&quot;errors &amp;&amp; errors.length&quot;&gt;&quot;, &quot;&lt;ul&gt;&lt;tpl for=&quot;errors&quot;&gt;&lt;li&gt;{.}&lt;/li&gt;&lt;/tpl&gt;&lt;/ul&gt;&quot;, &quot;&lt;/tpl&gt;&quot;]</code></p></div></div></div><div id='cfg-afterLabelTextTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-afterLabelTextTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-afterLabelTextTpl' class='name expandable'>afterLabelTextTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>An optional string or XTemplate configuration to insert in the field markup\nafter the label text. ...</div><div class='long'><p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the label text. If an <code>XTemplate</code> is used, the component's <a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">render data</a>\nserves as the context.\n可选的字符串或<code>XTemplate</code>配置为在标签文本后标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-afterLabelTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-afterLabelTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-afterLabelTpl' class='name expandable'>afterLabelTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在标签元素后标记插入域。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在标签元素后标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-afterSubTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-afterSubTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-afterSubTpl' class='name expandable'>afterSubTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在subTpl markup后标记插入域。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在<a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>后标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-allowBlank' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-allowBlank' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-allowBlank' class='name expandable'>allowBlank</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>指定为false将会只允许值的长度>0(默认为true) ...</div><div class='long'><p>指定为false将会只允许值的长度>0(默认为true)</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-autoEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-autoEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-autoEl' class='name expandable'>autoEl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个标签名或者 DomHelper 描述，用来创建 Element ，它将封装当前组件。 ...</div><div class='long'><p>一个标签名或者 <a href=\"#!/api/Ext.dom.Helper\" rel=\"Ext.dom.Helper\" class=\"docClass\">DomHelper</a> 描述，用来创建 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> ，它将封装当前组件。</p>\n\n<p>一般情况下你不必指定此值。 对于基类 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 和\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>, 此值默认为 <strong>'div'</strong>。 越复杂的sencha类使用越复杂的DOM结构，\n这些是由它们自己的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderTpl\" rel=\"Ext.AbstractComponent-cfg-renderTpl\" class=\"docClass\">renderTpl</a>方法创建的。</p>\n\n<p>这被设计用来允许开发者创建针对特定应用的 工具组件，这些组件由不同的DOM元素封装而成。\n示例用法:</p>\n\n<pre><code>{\n    xtype: 'component',\n    autoEl: {\n        tag: 'img',\n        src: 'http://www.example.com/example.jpg'\n    }\n}, {\n    xtype: 'component',\n    autoEl: {\n        tag: 'blockquote',\n        html: 'autoEl is cool!'\n    }\n}, {\n    xtype: 'container',\n    autoEl: 'ul',\n    cls: 'ux-unordered-list',\n    items: {\n        xtype: 'component',\n        autoEl: 'li',\n        html: 'First list item'\n    }\n}\n</code></pre>\n</div></div></div><div id='cfg-autoFitErrors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-autoFitErrors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-autoFitErrors' class='name expandable'>autoFitErrors</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>是否调整组件的body区域，给'side'或'under'的错误消息留出空间。 ...</div><div class='long'><p>是否调整组件的body区域，给'side'或'under'的<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">错误消息</a>留出空间。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-autoRender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-autoRender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-autoRender' class='name expandable'>autoRender</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'>这个配置主要面向非 floating 组件, 这个组件可能显示可能不显示. ...</div><div class='long'><p>这个配置主要面向非 <a href=\"#!/api/Ext.AbstractComponent-cfg-floating\" rel=\"Ext.AbstractComponent-cfg-floating\" class=\"docClass\">floating</a> 组件, 这个组件可能显示可能不显示. 这个配置允许组件首次使用 <em>show</em>\n进行自我渲染来代替使用 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTo\" rel=\"Ext.AbstractComponent-cfg-renderTo\" class=\"docClass\">renderTo</a> 以及基于构造的渲染.\n如果 <a href=\"#!/api/Ext.AbstractComponent-cfg-floating\" rel=\"Ext.AbstractComponent-cfg-floating\" class=\"docClass\">floating</a> 为 true, 这个配置的值被忽略, 就相当于为 'true'.</p>\n\n<p>设置为 <code>true</code> 组件首次显示将自动渲染到文档的正文区域.</p>\n\n<p>设置为一个元素, 或者元素的 ID 组件首次显示将自动渲染到指定元素.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-autoScroll' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-autoScroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-autoScroll' class='name expandable'>autoScroll</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>'true'使用溢出：'自动'的组件布局元素，并在必要时自动显示滚动条，\n'false'溢出的内容。 ...</div><div class='long'><p>'true'使用溢出：'自动'的组件布局元素，并在必要时自动显示滚动条，\n'false'溢出的内容。\n不能像这样定义<a href=\"#!/api/Ext.Component-cfg-overflowX\" rel=\"Ext.Component-cfg-overflowX\" class=\"docClass\">overflowX</a> or  <a href=\"#!/api/Ext.Component-cfg-overflowY\" rel=\"Ext.Component-cfg-overflowY\" class=\"docClass\">overflowY</a>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-autoShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-autoShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-autoShow' class='name expandable'>autoShow</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置 True 组件创建时自动显示. ...</div><div class='long'><p>设置 True 组件创建时自动显示. 这个配置项可能仅仅用于\n<a href=\"#!/api/Ext.AbstractComponent-cfg-floating\" rel=\"Ext.AbstractComponent-cfg-floating\" class=\"docClass\">floating</a> 组件或者组件使用 <a href=\"#!/api/Ext.AbstractComponent-cfg-autoRender\" rel=\"Ext.AbstractComponent-cfg-autoRender\" class=\"docClass\">autoRender</a>. 默认为false.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-baseBodyCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-baseBodyCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-baseBodyCls' class='name expandable'>baseBodyCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>应用到body内容元素的CSS类。 ...</div><div class='long'><p>应用到body内容元素的CSS类。</p>\n<p>Defaults to: <code>&quot;x-form-item-body&quot;</code></p></div></div></div><div id='cfg-baseCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-baseCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-baseCls' class='name expandable'>baseCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>一个基础 CSS 类, 它将被添加到当前的组件元素上. ...</div><div class='long'><p>一个基础 CSS 类, 它将被添加到当前的组件元素上. 这个将被传给这个组件内部的一个元素,\n比如 Panel 的 body 将会得到一个 x-panel-body 的类. 这意味着你创建一个子面板,\n你想让它得到所有的面板造型元素和主体, 你舍弃 baseCls x-panel 并使用\ncomponentCls 为组件添加特定的造型.</p>\n<p>Defaults to: <code>&quot;x-component&quot;</code></p></div></div></div><div id='cfg-beforeLabelTextTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-beforeLabelTextTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-beforeLabelTextTpl' class='name expandable'>beforeLabelTextTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在标签文本前标记插入域。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在标签文本前标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-beforeLabelTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-beforeLabelTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-beforeLabelTpl' class='name expandable'>beforeLabelTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在标签元素前域标记插入。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在标签元素前域标记插入。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-beforeSubTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-beforeSubTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-beforeSubTpl' class='name expandable'>beforeSubTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在subTpl markup前标记插入域。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在<a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>前标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-blankText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-blankText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-blankText' class='name expandable'>blankText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>如果allowBlank校验失败时显示的出错文本 ...</div><div class='long'><p>如果<strong><a href=\"#!/api/Ext.form.field.Text-cfg-allowBlank\" rel=\"Ext.form.field.Text-cfg-allowBlank\" class=\"docClass\">allowBlank</a></strong>校验失败时显示的出错文本</p>\n<p>Defaults to: <code>&quot;This field is required&quot;</code></p></div></div></div><div id='cfg-border' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-border' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-border' class='name expandable'>border</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>指定该组件的边框. ...</div><div class='long'><p>指定该组件的边框. 边框可以是一个数值适用于所有边\n或者它可以是每个样式的CSS样式规范, 例如: '10 5 3 10'.</p>\n</div></div></div><div id='cfg-buttonConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-buttonConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-buttonConfig' class='name not-expandable'>buttonConfig</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>一个标准的 <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> 配置对象。</p>\n</div><div class='long'><p>一个标准的 <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> 配置对象。</p>\n</div></div></div><div id='cfg-buttonMargin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-buttonMargin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-buttonMargin' class='name expandable'>buttonMargin</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>按钮和文本表单项之间空白区域的像素值。注意，这个属性只对\nbuttonOnly 设置为 false 时有效。 ...</div><div class='long'><p>按钮和文本表单项之间空白区域的像素值。注意，这个属性只对\n<a href=\"#!/api/Ext.form.field.File-cfg-buttonOnly\" rel=\"Ext.form.field.File-cfg-buttonOnly\" class=\"docClass\">buttonOnly</a> 设置为 false 时有效。</p>\n<p>Defaults to: <code>3</code></p></div></div></div><div id='cfg-buttonOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-buttonOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-buttonOnly' class='name expandable'>buttonOnly</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true时，文件上传表单项只显示为一个不带可见的文本表单项的按钮。 ...</div><div class='long'><p>设置为true时，文件上传表单项只显示为一个不带可见的文本表单项的按钮。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-buttonText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-buttonText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-buttonText' class='name expandable'>buttonText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>上传按钮显示的文本值。 ...</div><div class='long'><p>上传按钮显示的文本值。 注意，如果你配置了\n<a href=\"#!/api/Ext.form.field.File-cfg-buttonConfig\" rel=\"Ext.form.field.File-cfg-buttonConfig\" class=\"docClass\">buttonConfig</a>，buttonConfig.text 值将会代替buttonText。</p>\n<p>Defaults to: <code>&quot;Browse...&quot;</code></p></div></div></div><div id='cfg-checkChangeBuffer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-checkChangeBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-checkChangeBuffer' class='name expandable'>checkChangeBuffer</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>以毫秒为单位为checkChangeEvents定义超时缓冲\n默认为50毫秒 ...</div><div class='long'><p>以毫秒为单位为<a href=\"#!/api/Ext.form.field.Base-cfg-checkChangeEvents\" rel=\"Ext.form.field.Base-cfg-checkChangeEvents\" class=\"docClass\">checkChangeEvents</a>定义超时缓冲\n默认为50毫秒</p>\n<p>Defaults to: <code>50</code></p></div></div></div><div id='cfg-checkChangeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-checkChangeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-checkChangeEvents' class='name expandable'>checkChangeEvents</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span></div><div class='description'><div class='short'>用于监听表单项中的input element事件名称列表，将用于检查表单项值的改变。 ...</div><div class='long'><p>用于监听表单项中的<a href=\"#!/api/Ext.form.field.Base-property-inputEl\" rel=\"Ext.form.field.Base-property-inputEl\" class=\"docClass\">input element</a>事件名称列表，将用于检查表单项值的改变。\n如果检测到其中之一改变了，<a href=\"#!/api/Ext.form.field.Base-event-change\" rel=\"Ext.form.field.Base-event-change\" class=\"docClass\">change event</a>将会被触发\n如果<a href=\"#!/api/Ext.form.field.Base-cfg-validateOnChange\" rel=\"Ext.form.field.Base-cfg-validateOnChange\" class=\"docClass\">validateOnChange</a>配置项设置成enabled，将跟随着出发验证</p>\n\n<p>默认在Internet Explorer中为['change', 'propertychange']，在其他浏览器为['change', 'input', 'textInput', 'keyup',\n'dragdrop']。这将在大多数支持的浏览器中捕获表单项值的变化。在当前版本仅仅的特殊情况为如下：</p>\n\n<p>-Safari 3.2或以前的版本：在textareas中通过上下文菜单使用cut/paste命令还有拖动文本到textareas中\n-Opera 10 and 11：拖动文本到text fields and textareas，还有在text fields and textareas中通过上下文菜单进行剪切\n- Opera 9:和Opera 10 and 11一样，此外在text fields and textareas中从上下文菜单进行粘贴也不行。</p>\n\n<p>如果需要在上述这些特殊情况下确保及时的变更通知，可以在一个定时器中不断调用\n<a href=\"#!/api/Ext.form.field.Base-method-checkChange\" rel=\"Ext.form.field.Base-method-checkChange\" class=\"docClass\">checkChange</a>方法,例如使用<a href=\"#!/api/Ext.TaskManager\" rel=\"Ext.TaskManager\" class=\"docClass\">Ext.TaskManager</a>，或者如果这个表单项在\n<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>中，可以使用FormPanel的<a href=\"#!/api/Ext.form.Panel-cfg-pollForChanges\" rel=\"Ext.form.Panel-cfg-pollForChanges\" class=\"docClass\">Ext.form.Panel.pollForChanges</a>配置\n自动建立一个任务。</p>\n</div></div></div><div id='cfg-childEls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-childEls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-childEls' class='name expandable'>childEls</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span></div><div class='description'><div class='short'>一个描述组件的子元素的数组. ...</div><div class='long'><p>一个描述组件的子元素的数组.\n数组的每个成员是这些属性的对象:</p>\n\n<ul>\n<li><code>name</code> - 组件的子元素的属性名称.</li>\n<li><code>itemId</code> - ID结合组件的ID是子元素的ID.</li>\n<li><code>id</code> - 子元素的id.</li>\n</ul>\n\n\n<p>如果数组成员是字符串, 它相当于 <code>{ name: m, itemId: m }</code>.</p>\n\n<p>例如, 组件呈现一个标题和正文:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    renderTpl: [\n        '&lt;h1 id=\"{id}-title\"&gt;{title}&lt;/h1&gt;',\n        '&lt;p&gt;{msg}&lt;/p&gt;',\n    ],\n    renderData: {\n        title: \"Error\",\n        msg: \"Something went wrong\"\n    },\n    childEls: [\"title\"],\n    listeners: {\n        afterrender: function(cmp){\n            // After rendering the component will have a title property\n            cmp.title.setStyle({color: \"red\"});\n        }\n    }\n});\n</code></pre>\n\n<p>一个更灵活的, 但是有些慢, 方法是 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderSelectors\" rel=\"Ext.AbstractComponent-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a>.</p>\n</div></div></div><div id='cfg-clearCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-clearCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-clearCls' class='name expandable'>clearCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>CSS类，用来域内容提供域清除的封装封装之后，div渲染的直接特殊清除。 ...</div><div class='long'><p>CSS类，用来域内容提供域清除的封装封装之后，div渲染的直接特殊清除。</p>\n<p>Defaults to: <code>&quot;x-clear&quot;</code></p></div></div></div><div id='cfg-cls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-cls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-cls' class='name expandable'>cls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>可选的额外的CSS类将被添加到该组件的元素. ...</div><div class='long'><p>可选的额外的CSS类将被添加到该组件的元素.\n这可用于添加自定义样式的成分或任何其子组件使用标准的CSS规则.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-componentCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-componentCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-componentCls' class='name not-expandable'>componentCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>CSS 类被添加到组件根级别元素通过样式区别它.</p>\n</div><div class='long'><p>CSS 类被添加到组件根级别元素通过样式区别它.</p>\n</div></div></div><div id='cfg-componentLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-componentLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-componentLayout' class='name expandable'>componentLayout</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个组件的内部元素的尺寸大小和定位是由组件的布局管理器决定的,\n组件的布局管理器掌管着被衡量组件的内部结构. ...</div><div class='long'><p>一个组件的内部元素的尺寸大小和定位是由组件的布局管理器决定的,\n组件的布局管理器掌管着被衡量组件的内部结构.</p>\n\n<p>一般来说, 开发者不会使用这个配置, 因为所有给定的需要制定尺寸大小的内部元素的组件\n(比如 <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">input fields</a>) 是由其自身的组件布局管理器来决定的.</p>\n\n<p><a href=\"#!/api/Ext.layout.container.Auto\" rel=\"Ext.layout.container.Auto\" class=\"docClass\">默认布局管理</a> 将被用于基本类 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 的实例上,\n这个类将会简单地通过 <a href=\"#!/api/Ext.AbstractComponent-method-setSize\" rel=\"Ext.AbstractComponent-method-setSize\" class=\"docClass\">setSize</a> 方法来设置组件的封装元素的高度和宽度.</p>\n</div></div></div><div id='cfg-contentEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-contentEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-contentEl' class='name expandable'>contentEl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>指定一个已存在的HTML元素, 或者一个已存在HTML元素的 id , 它们将被用作当前组件的内容. ...</div><div class='long'><p>指定一个已存在的HTML元素, 或者一个已存在HTML元素的 id , 它们将被用作当前组件的内容.</p>\n\n<p>此配置选项被用来将一个已存在的HTML元素 插入到一个新组件(在组件渲染之后它简单地移动DOM元素) 的layout元素中,\n使它成为该组件的内容.</p>\n\n<p><strong>注意:</strong></p>\n\n<p>指定的HTML元素将被附加到组件的layout元素中, 在所有配置的\n<a href=\"#!/api/Ext.AbstractComponent-cfg-html\" rel=\"Ext.AbstractComponent-cfg-html\" class=\"docClass\">HTML</a> 被插入之后, 并且, 这样的话,\n在 <a href=\"#!/api/Ext.AbstractComponent-event-render\" rel=\"Ext.AbstractComponent-event-render\" class=\"docClass\">render</a> 事件被触发时, document中将不再包含此元素.</p>\n\n<p>指定的 HTML 元素将不会参与所有的可能使用的 <strong><code><a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a></code></strong>\n过程. 它仅是 HTML 而已. 布局操作是在\n<strong><code><a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a></code></strong> 上进行的.</p>\n\n<p>添加 <code>x-hidden</code> 或者 <code>x-hide-display</code> 类, 以防在内容渲染到panel时发生闪烁.</p>\n</div></div></div><div id='cfg-data' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-data' class='name not-expandable'>data</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>初始数据集应用到 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-tpl\" rel=\"Ext.AbstractComponent-cfg-tpl\" class=\"docClass\">tpl</a></code> 更新组件的内容区域.</p>\n</div><div class='long'><p>初始数据集应用到 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-tpl\" rel=\"Ext.AbstractComponent-cfg-tpl\" class=\"docClass\">tpl</a></code> 更新组件的内容区域.</p>\n</div></div></div><div id='cfg-dirtyCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-dirtyCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-dirtyCls' class='name expandable'>dirtyCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当表单项修改过后使用的CSS类The CSS class to use when the field value . ...</div><div class='long'><p>当表单项<a href=\"#!/api/Ext.form.field.Base-method-isDirty\" rel=\"Ext.form.field.Base-method-isDirty\" class=\"docClass\">修改</a>过后使用的CSS类The CSS class to use when the field value .</p>\n<p>Defaults to: <code>&quot;x-form-dirty&quot;</code></p></div></div></div><div id='cfg-disableKeyFilter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-disableKeyFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-disableKeyFilter' class='name expandable'>disableKeyFilter</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>指定为true将会禁用按键过滤(默认为false) ...</div><div class='long'><p>指定为true将会禁用按键过滤(默认为false)</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-disabled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-cfg-disabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-cfg-disabled' class='name expandable'>disabled</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>True 禁用表单项。禁用的表单项将不会被submitted. ...</div><div class='long'><p>True 禁用表单项。禁用的表单项将不会被<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitted</a>.</p>\n<p>Defaults to: <code>false</code></p><p>Overrides: <a href='#!/api/Ext.AbstractComponent-cfg-disabled' rel='Ext.AbstractComponent-cfg-disabled' class='docClass'>Ext.AbstractComponent.disabled</a></p></div></div></div><div id='cfg-disabledCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-disabledCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-disabledCls' class='name expandable'>disabledCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当组件被禁用添加的CSS 类. ...</div><div class='long'><p>当组件被禁用添加的CSS 类. 默认为 'x-item-disabled'.</p>\n<p>Defaults to: <code>&quot;x-item-disabled&quot;</code></p></div></div></div><div id='cfg-draggable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-draggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-draggable' class='name expandable'>draggable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>指定正确的使用组件的封装元件的拖动手柄进行floating\n浮动组件拖动的。 ...</div><div class='long'><p>指定正确的使用组件的封装元件的拖动手柄进行<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>\n浮动组件拖动的。</p>\n\n<p>这也可以被指定作为配置对象被实例化的<a href=\"#!/api/Ext.util.ComponentDragger\" rel=\"Ext.util.ComponentDragger\" class=\"docClass\">ComponentDragger</a>\n执行拖动。</p>\n\n<p>例如，创建一个组件，只能将它拖动周围使用某些内部元件的句柄，\n使用委托选项：</p>\n\n<pre><code>new <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>({\n    constrain: true,\n    floating: true,\n    style: {\n        backgroundColor: '#fff',\n        border: '1px solid black'\n    },\n    html: '&lt;h1 style=\"cursor:move\"&gt;The title&lt;/h1&gt;&lt;p&gt;The content&lt;/p&gt;',\n    draggable: {\n        delegate: 'h1'\n    }\n}).show();\n</code></pre>\n<p>Defaults to: <code>false</code></p><p>Overrides: <a href='#!/api/Ext.AbstractComponent-cfg-draggable' rel='Ext.AbstractComponent-cfg-draggable' class='docClass'>Ext.AbstractComponent.draggable</a></p></div></div></div><div id='cfg-editable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-editable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-editable' class='name expandable'>editable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为false阻止直接在表单项的文本框中输入字符；这时表单项只能通过从trigger调用的方式来取值。 ...</div><div class='long'><p>设置为false阻止直接在表单项的文本框中输入字符；这时表单项只能通过从trigger调用的方式来取值。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-emptyCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-emptyCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-emptyCls' class='name expandable'>emptyCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>The CSS class to apply to an empty field to style the emptyText. ...</div><div class='long'><p>The CSS class to apply to an empty field to style the <strong><a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a></strong>.\nThis class is automatically added and removed as needed depending on the current field value.</p>\n<p>Defaults to: <code>&quot;x-form-empty-field&quot;</code></p></div></div></div><div id='cfg-emptyText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-emptyText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-emptyText' class='name expandable'>emptyText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>放置到空表单项中的默认文本(默认为null)。 ...</div><div class='long'><p>放置到空表单项中的默认文本(默认为null)。</p>\n\n<p>注意: 如果当前表单栏处于有效状态并且被配置了一个名称，那么此值会被 提交到服务器。\n为了防止提交可以设置<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">Ext.form.Basic.submit</a>中的<a href=\"#!/api/Ext.form.action.Action-cfg-submitEmptyText\" rel=\"Ext.form.action.Action-cfg-submitEmptyText\" class=\"docClass\">submitEmptyText</a>\n选项为false</p>\n\n<p>如果使用<a href=\"#!/api/Ext.form.field.Text-cfg-inputType\" rel=\"Ext.form.field.Text-cfg-inputType\" class=\"docClass\">inputType</a>:'file'，<a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a>不支持并且应当避免使用。\n注意对于浏览器支持这个选项的，设置这个属性会使用HTML5 的placeholder属性，对于\n老的浏览器不支持HTML 5 placeholder属性的这个值会直接放到输入元素的原始值里。\n这意味着老浏览器对于密码输入框会混乱<a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a>值。</p>\n</div></div></div><div id='cfg-enableKeyEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-enableKeyEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-enableKeyEvents' class='name expandable'>enableKeyEvents</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>true用于启用HTML输入表单项的按键事件代理 ...</div><div class='long'><p>true用于启用HTML输入表单项的按键事件代理</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-enforceMaxLength' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-enforceMaxLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-enforceMaxLength' class='name expandable'>enforceMaxLength</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>True时潜在的输入表单项中设置最大长度属性。在默认为false\nTrue to set the maxLength property on the underlying input field. ...</div><div class='long'><p>True时潜在的输入表单项中设置最大长度属性。在默认为false\nTrue to set the maxLength property on the underlying input field. 默认为 false</p>\n</div></div></div><div id='cfg-errorMsgCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-errorMsgCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-errorMsgCls' class='name expandable'>errorMsgCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>应用到错误消息元素的CSS类。 ...</div><div class='long'><p>应用到错误消息元素的CSS类。</p>\n<p>Defaults to: <code>&quot;x-form-error-msg&quot;</code></p></div></div></div><div id='cfg-fieldBodyCls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-fieldBodyCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-fieldBodyCls' class='name expandable'>fieldBodyCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>一个额外的CSS类可以应用于除了fieldBodyCls以外的body内容元素。 ...</div><div class='long'><p>一个额外的CSS类可以应用于除了<a href=\"#!/api/Ext.form.field.File-cfg-fieldBodyCls\" rel=\"Ext.form.field.File-cfg-fieldBodyCls\" class=\"docClass\">fieldBodyCls</a>以外的body内容元素。</p>\n<p>Defaults to: <code>&quot;x-form-file-wrap&quot;</code></p><p>Overrides: <a href='#!/api/Ext.form.Labelable-cfg-fieldBodyCls' rel='Ext.form.Labelable-cfg-fieldBodyCls' class='docClass'>Ext.form.Labelable.fieldBodyCls</a></p></div></div></div><div id='cfg-fieldCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-fieldCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-fieldCls' class='name expandable'>fieldCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>表单项默认的CSS类，默认为Ext.baseCSSPrefix + 'form-field'... ...</div><div class='long'><p>表单项默认的CSS类，默认为Ext.baseCSSPrefix + 'form-field'...</p>\n<p>Defaults to: <code>&quot;x-form-field&quot;</code></p></div></div></div><div id='cfg-fieldLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-fieldLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-fieldLabel' class='name expandable'>fieldLabel</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>域标签。它被附加了labelSeparator，\n其位置和大小被labelAlign、 labelWidth和labelPad配置确认。 ...</div><div class='long'><p>域标签。它被附加了<a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>，\n其位置和大小被<a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>、 <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a>和<a href=\"#!/api/Ext.form.Labelable-cfg-labelPad\" rel=\"Ext.form.Labelable-cfg-labelPad\" class=\"docClass\">labelPad</a>配置确认。</p>\n</div></div></div><div id='cfg-fieldStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-fieldStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-fieldStyle' class='name expandable'>fieldStyle</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>应用到field input element上面可选的CSS样式。 ...</div><div class='long'><p>应用到<a href=\"#!/api/Ext.form.field.Base-property-inputEl\" rel=\"Ext.form.field.Base-property-inputEl\" class=\"docClass\">field input element</a>上面可选的CSS样式。\n对于<a href=\"#!/api/Ext.dom.Element-method-applyStyles\" rel=\"Ext.dom.Element-method-applyStyles\" class=\"docClass\">Ext.Element.applyStyles</a>方法需要为有效的参数\n默认为undefined.在初始化后也可参见<a href=\"#!/api/Ext.form.field.Base-method-setFieldStyle\" rel=\"Ext.form.field.Base-method-setFieldStyle\" class=\"docClass\">setFieldStyle</a>方法来改变样式</p>\n</div></div></div><div id='cfg-fieldSubTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-fieldSubTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-fieldSubTpl' class='name expandable'>fieldSubTpl</a><span> : <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>表单项主体内容配置项. ...</div><div class='long'><p>表单项主体内容配置项.</p>\n<p>Defaults to: <code>[&quot;&lt;input id=&quot;{id}&quot; type=&quot;{type}&quot; {inputAttrTpl}&quot;, &quot; size=&quot;1&quot;&quot;, &quot;&lt;tpl if=&quot;name&quot;&gt; name=&quot;{name}&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;value&quot;&gt; value=&quot;{[Ext.util.Format.htmlEncode(values.value)]}&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;placeholder&quot;&gt; placeholder=&quot;{placeholder}&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;maxLength !== undefined&quot;&gt; maxlength=&quot;{maxLength}&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;readOnly&quot;&gt; readonly=&quot;readonly&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;disabled&quot;&gt; disabled=&quot;disabled&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;tabIdx&quot;&gt; tabIndex=&quot;{tabIdx}&quot;&lt;/tpl&gt;&quot;, &quot;&lt;tpl if=&quot;fieldStyle&quot;&gt; style=&quot;{fieldStyle}&quot;&lt;/tpl&gt;&quot;, &quot; class=&quot;{fieldCls} {typeCls} {editableCls}&quot; autocomplete=&quot;off&quot;/&gt;&quot;, {disableFormats: true}]</code></p></div></div></div><div id='cfg-floating' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-floating' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-floating' class='name expandable'>floating</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>指定为'true'的时候浮动组件以外的文档流中使用CSS绝对定位。 ...</div><div class='long'><p>指定为'true'的时候浮动组件以外的文档流中使用CSS绝对定位。</p>\n\n<p><a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a> Window and <a href=\"#!/api/Ext.menu.Menu\" rel=\"Ext.menu.Menu\" class=\"docClass\">Ext.menu.Menu</a> Menu 组件默认情况下是浮动的.</p>\n\n<p>浮动的组件编程方式将自己<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">rendered</a>注册到全局<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a></p>\n\n<h3>作为一个容器的子项的浮动组件</h3>\n\n<p>一个浮动的组件，也可以使用一个容器作为一个子项。这只是允许的浮动组件，\nThis just allows the floating Component to seek a ZIndexManager by examining the ownerCt chain.</p>\n\n<p>当配置为浮动，组件获取，在渲染时，一个<a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a>管理堆栈相关的浮动元件。\nZIndexManager带来一个单一的浮动组件组件<a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">toFront</a>的方法被调用时，它的堆栈的顶部。</p>\n\n<p>ZIndexManager通过遍历链找到一个被继承的<a href=\"#!/api/Ext.Component-property-ownerCt\" rel=\"Ext.Component-property-ownerCt\" class=\"docClass\">ownerCt</a>这本身就是浮动的。\n这使子类浮动容器组件（如在一个窗口一个ComboBox下拉）可以有它的zIndex的管理\n相对于任何同级节点，但始终高于浮动被继承的对象。</p>\n\n<p>如果没有父类的浮动定义，浮动组件注册本身的默认\n<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a>.</p>\n\n<p>在容器的布局，浮动组件不参与。正因为如此，他们都不会呈现，直到您明确。<a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a></p>\n\n<p>渲染后，父类浮动引用将被删除，该属性设置为找到的父类容器<a href=\"#!/api/Ext.Component-property-floatParent\" rel=\"Ext.Component-property-floatParent\" class=\"docClass\">floatParent</a>。\n如果没有浮动的父类容器<a href=\"#!/api/Ext.Component-property-floatParent\" rel=\"Ext.Component-property-floatParent\" class=\"docClass\">floatParent</a>的属性\n不会被删除.</p>\n<p>Defaults to: <code>false</code></p><p>Overrides: <a href='#!/api/Ext.AbstractComponent-cfg-floating' rel='Ext.AbstractComponent-cfg-floating' class='docClass'>Ext.AbstractComponent.floating</a></p></div></div></div><div id='cfg-focusCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-focusCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-focusCls' class='name expandable'>focusCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当表单项获得焦点时使用的CSS类(默认为 'x-form-focus') ...</div><div class='long'><p>当表单项获得焦点时使用的CSS类(默认为 'x-form-focus')</p>\n<p>Defaults to: <code>&quot;x-form-focus&quot;</code></p></div></div></div><div id='cfg-focusOnToFront' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-cfg-focusOnToFront' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-cfg-focusOnToFront' class='name expandable'>focusOnToFront</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>指定当一个浮动组件被 带到顶层 时,是否应该自动 获得焦点. ...</div><div class='long'><p>指定当一个浮动组件被 <a href=\"#!/api/Ext.util.Floating-method-toFront\" rel=\"Ext.util.Floating-method-toFront\" class=\"docClass\">带到顶层</a> 时,是否应该自动 <a href=\"#!/api/Ext.Component-method-focus\" rel=\"Ext.Component-method-focus\" class=\"docClass\">获得焦点</a>.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-formItemCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-formItemCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-formItemCls' class='name expandable'>formItemCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>应用到最外层元素的CSS类，标志它主动参与表单域的布局。 ...</div><div class='long'><p>应用到最外层元素的CSS类，标志它主动参与表单域的布局。</p>\n<p>Defaults to: <code>&quot;x-form-item&quot;</code></p></div></div></div><div id='cfg-frame' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-frame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-frame' class='name expandable'>frame</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为 'true' 在组件渲染时在组件周围提供一个圆角边框. ...</div><div class='long'><p>设置为 'true' 在组件渲染时在组件周围提供一个圆角边框.</p>\n\n<p>当运行在过时的, 或者不符合规范的浏览器如微软的IE 9 浏览器之前不支持圆角,\n这才是必要的配置.</p>\n\n<p>由该框架采取了额外的空间，可从只读属性 <a href=\"#!/api/Ext.AbstractComponent-property-frameSize\" rel=\"Ext.AbstractComponent-property-frameSize\" class=\"docClass\">frameSize</a>.</p>\n</div></div></div><div id='cfg-grow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-grow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-grow' class='name not-expandable'>grow</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n<p>Overrides: <a href='#!/api/Ext.form.field.Text-cfg-grow' rel='Ext.form.field.Text-cfg-grow' class='docClass'>Ext.form.field.Text.grow</a></p></div></div></div><div id='cfg-growAppend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-growAppend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-growAppend' class='name expandable'>growAppend</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>为了计算当前表单项的尺寸添加到当前表单项值后面的字符串。 ...</div><div class='long'><p>为了计算当前表单项的尺寸添加到当前表单项值后面的字符串。\n仅当<a href=\"#!/api/Ext.form.field.Text-cfg-grow\" rel=\"Ext.form.field.Text-cfg-grow\" class=\"docClass\">grow</a>配置项为true时使用。默认是一个字母\"W\"(在普通\n字体中最快的字符),为下一个输入的字符留下足够的空间并在宽度调整前\n避免表单项值的改变。</p>\n<p>Defaults to: <code>&quot;W&quot;</code></p></div></div></div><div id='cfg-growMax' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-growMax' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-growMax' class='name not-expandable'>growMax</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n<p>Overrides: <a href='#!/api/Ext.form.field.Text-cfg-growMax' rel='Ext.form.field.Text-cfg-growMax' class='docClass'>Ext.form.field.Text.growMax</a></p></div></div></div><div id='cfg-growMin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-growMin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-growMin' class='name not-expandable'>growMin</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n<p>Overrides: <a href='#!/api/Ext.form.field.Text-cfg-growMin' rel='Ext.form.field.Text-cfg-growMin' class='docClass'>Ext.form.field.Text.growMin</a></p></div></div></div><div id='cfg-height' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-height' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-height' class='name not-expandable'>height</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>此组件的高度，以像素为单位。</p>\n</div><div class='long'><p>此组件的高度，以像素为单位。</p>\n</div></div></div><div id='cfg-hidden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-hidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-hidden' class='name expandable'>hidden</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>True 将隐藏该组件。 ...</div><div class='long'><p>True 将隐藏该组件。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-hideEmptyLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-hideEmptyLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-hideEmptyLabel' class='name expandable'>hideEmptyLabel</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>当设置为true，如果fieldLabel为空，则标签元素（fieldLabel和labelSeparator）会被自动隐藏。 ...</div><div class='long'><p>当设置为true，如果<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>为空，则标签元素（<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>和<a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>）会被自动隐藏。\n如果设置为false，会导致空标签元素被渲染，预留空格；\n这对于想要在同一个表单里有一个没有标签的域于其他有标签的域对齐很有用。</p>\n\n<p>如果想无条件隐藏标签，即使一个非空的fieldLabel配置，那么设置<a href=\"#!/api/Ext.form.Labelable-cfg-hideLabel\" rel=\"Ext.form.Labelable-cfg-hideLabel\" class=\"docClass\">hideLabel</a>配置为true。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-hideLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-hideLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-hideLabel' class='name expandable'>hideLabel</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true时，完全隐藏标签元素（fieldLabel和labelSeparator）。 ...</div><div class='long'><p>设置为true时，完全隐藏标签元素（<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>和<a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>）。\n参考<a href=\"#!/api/Ext.form.Labelable-cfg-hideEmptyLabel\" rel=\"Ext.form.Labelable-cfg-hideEmptyLabel\" class=\"docClass\">hideEmptyLabel</a>，它控制是否空间会被保留为空fieldLabel。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-hideMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-hideMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-hideMode' class='name expandable'>hideMode</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>一个字符串，它指定了这个组件的封装DOM元素会被隐藏. ...</div><div class='long'><p>一个字符串，它指定了这个组件的封装DOM元素会被隐藏. 值可以是:</p>\n\n<ul>\n<li><code>'display'</code> : 使用 <code>display: none</code> 样式组件将被隐藏.</li>\n<li><code>'visibility'</code> : 使用 <code>visibility: hidden</code> 样式组件将被隐藏.</li>\n<li><code>'offsets'</code> : 组件定位在文档的可见区域之外将被隐藏.\n当一个隐藏的组件必须保持可测量的这是有用的. 使用 <code>display</code> 将导致一个\n组件不可测.</li>\n</ul>\n\n<p>Defaults to: <code>&quot;display&quot;</code></p></div></div></div><div id='cfg-hideTrigger' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-hideTrigger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-hideTrigger' class='name expandable'>hideTrigger</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true时隐藏trigger按钮，只显示为基础的文本框。 ...</div><div class='long'><p>设置为true时隐藏trigger按钮，只显示为基础的文本框。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-html' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-html' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-html' class='name expandable'>html</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个 HTML 片段, 或者一个 DomHelper 描述, 用作 layout 元素的内容. ...</div><div class='long'><p>一个 HTML 片段, 或者一个 <a href=\"#!/api/Ext.dom.Helper\" rel=\"Ext.dom.Helper\" class=\"docClass\">DomHelper</a> 描述, 用作 layout 元素的内容.\n这个 HTML 内容在组件渲染之后才被添加, 所以在 <a href=\"#!/api/Ext.AbstractComponent-event-render\" rel=\"Ext.AbstractComponent-event-render\" class=\"docClass\">render</a> 触发的时候, document 中尚未包含此 HTML.\n但是这个内容将会在所有配置的 <a href=\"#!/api/Ext.AbstractComponent-cfg-contentEl\" rel=\"Ext.AbstractComponent-cfg-contentEl\" class=\"docClass\">contentEl</a> 之前被插入到 body 标签中.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-id' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-id' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-id' class='name expandable'>id</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当前组件实例唯一的ID。 ...</div><div class='long'><p><strong>当前组件实例唯一的ID。</strong></p>\n\n<p>它不应该是必要的，除了在你的应用程序使用这个配置单例对象。\n用一个 id 创建的组件可以使用 <a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">Ext.getCmp</a> 进行全局访问。</p>\n\n<p>代替使用分配的id, 使用 <a href=\"#!/api/Ext.AbstractComponent-cfg-itemId\" rel=\"Ext.AbstractComponent-cfg-itemId\" class=\"docClass\">itemId</a> 配置项, 和 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>\n它提供了基于选择搜索Sencha组件类似于DOM查询。 <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a> 类包含 <a href=\"#!/api/Ext.container.Container-method-down\" rel=\"Ext.container.Container-method-down\" class=\"docClass\">快捷方法</a>\n通过选择器查询子组件。</p>\n\n<p>注意这个ID也将被用于包含HTML元素，在页面上呈现此组件的元素的ID。\n这允许你写的基于ID的CSS规则让组件的特定实例风格独特，\n也可以把这个组件作为父组件, 使用它的 id 来查找子元素。</p>\n\n<p><strong>注意</strong>: 为了避免与唯一的id 产生重复，请参见 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-itemId\" rel=\"Ext.AbstractComponent-cfg-itemId\" class=\"docClass\">itemId</a></code>.</p>\n\n<p><strong>注意</strong>: 如需访问一个元素的容器，参见 <code><a href=\"#!/api/Ext.AbstractComponent-property-ownerCt\" rel=\"Ext.AbstractComponent-property-ownerCt\" class=\"docClass\">ownerCt</a></code>.</p>\n\n<p>默认为 <a href=\"#!/api/Ext.AbstractComponent-method-getId\" rel=\"Ext.AbstractComponent-method-getId\" class=\"docClass\">auto-assigned id</a>.</p>\n</div></div></div><div id='cfg-inputAttrTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-inputAttrTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-inputAttrTpl' class='name not-expandable'>inputAttrTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'><p>可选的 string or <code>XTemplate</code> 配置用于在input元素的标签中插入\n如果使用<code>XTemplate</code> <a href=\"#!/api/Ext.form.field.Base-method-getSubTplData\" rel=\"Ext.form.field.Base-method-getSubTplData\" class=\"docClass\">subTpl data</a>作为数据上下文</p>\n</div><div class='long'><p>可选的 string or <code>XTemplate</code> 配置用于在input元素的标签中插入\n如果使用<code>XTemplate</code> <a href=\"#!/api/Ext.form.field.Base-method-getSubTplData\" rel=\"Ext.form.field.Base-method-getSubTplData\" class=\"docClass\">subTpl data</a>作为数据上下文</p>\n</div></div></div><div id='cfg-inputId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-inputId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-inputId' class='name not-expandable'>inputId</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>该ID号会被传入到生成的输入DOM元素中，默认ID号是自动生成的。如果手动配置该项，必须确保此ID在文档中是唯一的。</p>\n</div><div class='long'><p>该ID号会被传入到生成的输入DOM元素中，默认ID号是自动生成的。如果手动配置该项，必须确保此ID在文档中是唯一的。</p>\n</div></div></div><div id='cfg-inputType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-inputType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-inputType' class='name expandable'>inputType</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>输入类型\n输入栏的类型属性---例如radio,text,password,file。HTML5支持的输入(url, email, etc.)的扩展类型中也支持。 ...</div><div class='long'><p>输入类型\n输入栏的类型属性---例如radio,text,password,file。HTML5支持的输入(url, email, etc.)的扩展类型中也支持。\n但是在老的浏览器中这些类型会变成'text'.</p>\n\n<p>当前对于'password'输入必须使用password inputType -- 没有单独为password创建单独的组件。\n可以使用<a href=\"#!/api/Ext.form.field.File\" rel=\"Ext.form.field.File\" class=\"docClass\">Ext.form.field.File</a>用于创建单独自定义文件上传表单项。但是如果想创建一个没有样式的输入，可以用Base类型,inputType为'file'</p>\n<p>Defaults to: <code>&quot;text&quot;</code></p></div></div></div><div id='cfg-invalidCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-invalidCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-invalidCls' class='name expandable'>invalidCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>用来标记组件无效的CSS类。 ...</div><div class='long'><p>用来标记组件无效的CSS类。</p>\n<p>Defaults to: <code>&quot;x-form-invalid&quot;</code></p></div></div></div><div id='cfg-invalidText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-invalidText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-invalidText' class='name expandable'>invalidText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当把一个表单项标记为非法状态并且没有提供消息时所使用的出错文本... ...</div><div class='long'><p>当把一个表单项标记为非法状态并且没有提供消息时所使用的出错文本...</p>\n<p>Defaults to: <code>&quot;The value in this field is invalid&quot;</code></p></div></div></div><div id='cfg-itemId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-itemId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-itemId' class='name expandable'>itemId</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当没有可利用的对象引用时，itemId可以作为第二选择，用来获得一个组件的引用。 ...</div><div class='long'><p>当没有可利用的对象引用时，itemId可以作为第二选择，用来获得一个组件的引用。\n代替 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-id\" rel=\"Ext.AbstractComponent-cfg-id\" class=\"docClass\">id</a></code> 与 <a href=\"#!/api/Ext\" rel=\"Ext\" class=\"docClass\">Ext</a>.<a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">getCmp</a>, 使用 <code>itemId</code> 与\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>.<a href=\"#!/api/Ext.container.Container-method-getComponent\" rel=\"Ext.container.Container-method-getComponent\" class=\"docClass\">getComponent</a> 将会获得\n<code>itemId</code>'s 或者 <a href=\"#!/api/Ext.AbstractComponent-cfg-id\" rel=\"Ext.AbstractComponent-cfg-id\" class=\"docClass\">id</a>'s。 既然 <code>itemId</code>'s 是一个到容器内部MixedCollection的索引，\n<code>itemId</code> 的作用域就被限定在容器之内 -- 避免与 <a href=\"#!/api/Ext.ComponentManager\" rel=\"Ext.ComponentManager\" class=\"docClass\">Ext.ComponentManager</a> 产生潜在的冲突，\n它需要一个 <strong>唯一</strong> <code><a href=\"#!/api/Ext.AbstractComponent-cfg-id\" rel=\"Ext.AbstractComponent-cfg-id\" class=\"docClass\">id</a></code>.</p>\n\n<pre><code>var c = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({ //\n    <a href=\"#!/api/Ext.Component-cfg-height\" rel=\"Ext.Component-cfg-height\" class=\"docClass\">height</a>: 300,\n    <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTo\" rel=\"Ext.AbstractComponent-cfg-renderTo\" class=\"docClass\">renderTo</a>: document.body,\n    <a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a>: 'auto',\n    <a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a>: [\n        {\n            itemId: 'p1',\n            <a href=\"#!/api/Ext.panel.Panel-cfg-title\" rel=\"Ext.panel.Panel-cfg-title\" class=\"docClass\">title</a>: 'Panel 1',\n            <a href=\"#!/api/Ext.Component-cfg-height\" rel=\"Ext.Component-cfg-height\" class=\"docClass\">height</a>: 150\n        },\n        {\n            itemId: 'p2',\n            <a href=\"#!/api/Ext.panel.Panel-cfg-title\" rel=\"Ext.panel.Panel-cfg-title\" class=\"docClass\">title</a>: 'Panel 2',\n            <a href=\"#!/api/Ext.Component-cfg-height\" rel=\"Ext.Component-cfg-height\" class=\"docClass\">height</a>: 150\n        }\n    ]\n})\np1 = c.<a href=\"#!/api/Ext.container.Container-method-getComponent\" rel=\"Ext.container.Container-method-getComponent\" class=\"docClass\">getComponent</a>('p1'); // not the same as <a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">Ext.getCmp()</a>\np2 = p1.<a href=\"#!/api/Ext.AbstractComponent-property-ownerCt\" rel=\"Ext.AbstractComponent-property-ownerCt\" class=\"docClass\">ownerCt</a>.<a href=\"#!/api/Ext.container.Container-method-getComponent\" rel=\"Ext.container.Container-method-getComponent\" class=\"docClass\">getComponent</a>('p2'); // reference via a sibling\n</code></pre>\n\n<p>也可以参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-id\" rel=\"Ext.AbstractComponent-cfg-id\" class=\"docClass\">id</a>, <code><a href=\"#!/api/Ext.container.Container-method-query\" rel=\"Ext.container.Container-method-query\" class=\"docClass\">Ext.container.Container.query</a></code>, <code><a href=\"#!/api/Ext.container.Container-method-down\" rel=\"Ext.container.Container-method-down\" class=\"docClass\">Ext.container.Container.down</a></code> 和\n<code><a href=\"#!/api/Ext.container.Container-method-child\" rel=\"Ext.container.Container-method-child\" class=\"docClass\">Ext.container.Container.child</a></code>.</p>\n\n<p><strong>注意</strong>: 需要访问一个item的容易请参见 <a href=\"#!/api/Ext.AbstractComponent-property-ownerCt\" rel=\"Ext.AbstractComponent-property-ownerCt\" class=\"docClass\">ownerCt</a>.</p>\n</div></div></div><div id='cfg-labelAlign' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelAlign' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelAlign' class='name expandable'>labelAlign</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>控制fieldLabel的位置和对齐方式。有效值为：\n\n\n\"left\" (默认) - 标签位于域的左边，其文本左对齐。其宽度由labelWidth配置确定。 ...</div><div class='long'><p>控制<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>的位置和对齐方式。有效值为：</p>\n\n<ul>\n<li>\"left\" (默认) - 标签位于域的左边，其文本左对齐。其宽度由<a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a>配置确定。</li>\n<li>\"top\" - 标签位于域的顶端。</li>\n<li>\"right\" - 标签位于域的右边，其文本右对齐。其宽度由<a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a>配置确定。</li>\n</ul>\n\n<p>Defaults to: <code>&quot;left&quot;</code></p></div></div></div><div id='cfg-labelAttrTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelAttrTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelAttrTpl' class='name expandable'>labelAttrTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span></div><div class='description'><div class='short'>可选的字符串或XTemplate配置为在标签文本内部（作为属性）标记插入域。 ...</div><div class='long'><p>可选的字符串或<code>XTemplate</code>配置为在标签文本内部（作为属性）标记插入域。\n如果使用<code>XTemplate</code>，组件的<a href=\"#!/api/Ext.AbstractComponent-cfg-renderData\" rel=\"Ext.AbstractComponent-cfg-renderData\" class=\"docClass\">渲染数据</a>为上下文服务。</p>\n</div></div></div><div id='cfg-labelCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelCls' class='name expandable'>labelCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>应用到标签元素的CSS类。CSS类被用来定制renderSelector和驱动域布局，\n它被连字符（'-'）和labelAlign连接。 ...</div><div class='long'><p>应用到标签元素的CSS类。CSS类被用来定制renderSelector和驱动域布局，\n它被连字符（'-'）和<a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>连接。\n使用<a href=\"#!/api/Ext.form.Labelable-cfg-labelClsExtra\" rel=\"Ext.form.Labelable-cfg-labelClsExtra\" class=\"docClass\">labelClsExtra</a>添加附加类。</p>\n<p>Defaults to: <code>&quot;x-form-item-label&quot;</code></p></div></div></div><div id='cfg-labelClsExtra' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelClsExtra' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelClsExtra' class='name not-expandable'>labelClsExtra</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>可选的添加到标签元素一个或多个附加的CSS类的字符串。默认为空。</p>\n</div><div class='long'><p>可选的添加到标签元素一个或多个附加的CSS类的字符串。默认为空。</p>\n</div></div></div><div id='cfg-labelPad' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelPad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelPad' class='name expandable'>labelPad</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>fieldLabel和输入域之间的像素空间的合计。 ...</div><div class='long'><p><a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>和输入域之间的像素空间的合计。</p>\n<p>Defaults to: <code>5</code></p></div></div></div><div id='cfg-labelSeparator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelSeparator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelSeparator' class='name expandable'>labelSeparator</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>插入到fieldLabel后面的字符。 ...</div><div class='long'><p>插入到<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>后面的字符。</p>\n<p>Defaults to: <code>&quot;:&quot;</code></p></div></div></div><div id='cfg-labelStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelStyle' class='name not-expandable'>labelStyle</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>直接应用到这个域的标签的CSS样式规范字符串。</p>\n</div><div class='long'><p>直接应用到这个域的标签的CSS样式规范字符串。</p>\n</div></div></div><div id='cfg-labelWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelWidth' class='name expandable'>labelWidth</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>fieldLabel以像素为单位的宽度。只适用于 labelAlign设置了“left”或“right”。 ...</div><div class='long'><p><a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>以像素为单位的宽度。只适用于 <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>设置了“left”或“right”。</p>\n<p>Defaults to: <code>100</code></p></div></div></div><div id='cfg-labelableRenderTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-labelableRenderTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-labelableRenderTpl' class='name expandable'>labelableRenderTpl</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>渲染模板的字段装饰。 ...</div><div class='long'><p>渲染模板的字段装饰。\n组件类用这个混合类应包括逻辑以此作为其 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTpl\" rel=\"Ext.AbstractComponent-cfg-renderTpl\" class=\"docClass\">renderTpl</a>\n并实现<a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">getSubTplMarkup</a>方法以生成域主体内容。</p>\n\n<p>一个域的结构如下表：</p>\n\n<p>如果<code>label:align: 'left|top'</code>：</p>\n\n<pre><code> +----------------------+------------+---------+--------------+\n | Label:               | InputField           | sideErrorEl |\n +----------------------+------------+---------+-------------+\n |                      | underErrorEl (colspan=3)           |\n +-----------------------------------------------------------+\n</code></pre>\n\n<p>或者如果<code>labelAlign: 'top'</code>：</p>\n\n<pre><code> +-----------------------------------------------------------+\n | labelAlign:'top' label: (colspan=3)                       |\n +----------------------+------------+---------+-------------+\n | InputField (colspan=2)                      | sideErrorEl |\n +----------------------+------------+---------+-------------+\n | underErrorEl (colspan=3)                                  |\n +-----------------------------------------------------------+\n</code></pre>\n\n<p>总列始数终加起来是3（即使 <code>labelAlign: 'top'</code>），因为当渲染到<a href=\"#!/api/Ext.layout.container.Form\" rel=\"Ext.layout.container.Form\" class=\"docClass\">Ext.layout.container.Form</a>布局，\n只是表格的<code>TR</code>将被放置到表单的主<code>TABLE</code>中，全部兄弟列必须匹配，使他们都贴齐线。</p>\n\n<p>当triggerCell或旁边错误单元格被隐藏或显示，输入单元格的合并将被重新计算，以保持正确的3行可见列数。</p>\n<p>Defaults to: <code>[&quot;&lt;tpl if=&quot;labelAlign==\\'top\\'&quot;&gt;&quot;, &quot;&lt;tr&gt;&quot;, &quot;&lt;td id=&quot;{id}-labelCell&quot; colspan=&quot;3&quot; style=&quot;{labelCellStyle}&quot; {labelCellAttrs}&gt;&quot;, &quot;{beforeLabelTpl}&quot;, &quot;&lt;label id=&quot;{id}-labelEl&quot; {labelAttrTpl}&lt;tpl if=&quot;inputId&quot;&gt; for=&quot;{inputId}&quot;&lt;/tpl&gt; class=&quot;{labelCls}&quot;&quot;, &quot;&lt;tpl if=&quot;labelStyle&quot;&gt; style=&quot;{labelStyle}&quot;&lt;/tpl&gt;&gt;&quot;, &quot;{beforeLabelTextTpl}&quot;, &quot;&lt;tpl if=&quot;fieldLabel&quot;&gt;{fieldLabel}{labelSeparator}&lt;/tpl&gt;&quot;, &quot;{afterLabelTextTpl}&quot;, &quot;&lt;/label&gt;&quot;, &quot;{afterLabelTpl}&quot;, &quot;&lt;/td&gt;&quot;, &quot;&lt;/tr&gt;&quot;, &quot;&lt;/tpl&gt;&quot;, &quot;&lt;tr id=&quot;{id}-inputRow&quot; &lt;tpl if=&quot;inFormLayout&quot;&gt;id=&quot;{id}&quot;&lt;/tpl&gt;&gt;&quot;, &quot;&lt;tpl if=&quot;labelOnLeft&quot;&gt;&quot;, &quot;&lt;td id=&quot;{id}-labelCell&quot; style=&quot;{labelCellStyle}&quot; {labelCellAttrs}&gt;&quot;, &quot;{beforeLabelTpl}&quot;, &quot;&lt;label id=&quot;{id}-labelEl&quot; {labelAttrTpl}&lt;tpl if=&quot;inputId&quot;&gt; for=&quot;{inputId}&quot;&lt;/tpl&gt; class=&quot;{labelCls}&quot;&quot;, &quot;&lt;tpl if=&quot;labelStyle&quot;&gt; style=&quot;{labelStyle}&quot;&lt;/tpl&gt;&gt;&quot;, &quot;{beforeLabelTextTpl}&quot;, &quot;&lt;tpl if=&quot;fieldLabel&quot;&gt;{fieldLabel}{labelSeparator}&lt;/tpl&gt;&quot;, &quot;{afterLabelTextTpl}&quot;, &quot;&lt;/label&gt;&quot;, &quot;{afterLabelTpl}&quot;, &quot;&lt;/td&gt;&quot;, &quot;&lt;/tpl&gt;&quot;, &quot;&lt;td class=&quot;{baseBodyCls} {fieldBodyCls}&quot; id=&quot;{id}-bodyEl&quot; role=&quot;presentation&quot; colspan=&quot;{bodyColspan}&quot;&gt;&quot;, &quot;{beforeSubTpl}&quot;, &quot;{[values.$comp.getSubTplMarkup()]}&quot;, &quot;{afterSubTpl}&quot;, &quot;&lt;/td&gt;&quot;, &quot;&lt;tpl if=&quot;msgTarget==\\'side\\'&quot;&gt;&quot;, &quot;&lt;td id=&quot;{id}-errorEl&quot; class=&quot;{errorMsgCls}&quot; style=&quot;display:none&quot; width=&quot;{errorIconWidth}&quot;&gt;&lt;/td&gt;&quot;, &quot;&lt;/tpl&gt;&quot;, &quot;&lt;/tr&gt;&quot;, &quot;&lt;tpl if=&quot;msgTarget==\\'under\\'&quot;&gt;&quot;, &quot;&lt;tr&gt;&quot;, &quot;&lt;tpl if=&quot;labelOnLeft&quot;&gt;&quot;, &quot;&lt;td&gt;&lt;/td&gt;&quot;, &quot;&lt;/tpl&gt;&quot;, &quot;&lt;td id=&quot;{id}-errorEl&quot; class=&quot;{errorMsgClass}&quot; colspan=&quot;{[values.labelOnLeft ? 2 : 3]}&quot; style=&quot;display:none&quot;&gt;&lt;/td&gt;&quot;, &quot;&lt;/tr&gt;&quot;, &quot;&lt;/tpl&gt;&quot;, {disableFormats: true}]</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-cfg-listeners' class='name expandable'>listeners</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个配置对象，包含一个或多个事件处理函数，在对象初始化时添加到对象。 ...</div><div class='long'><p>一个配置对象，包含一个或多个事件处理函数，在对象初始化时添加到对象。\n它应该是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>指定的一个有效的监听器配置对象，\n一次添加多个事件处理函数。</p>\n\n<p><strong>Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">组建</a>的DOM事件</strong></p>\n\n<p>虽然<em>一些</em>Ext JS组件类输出选定的DOM事件（例如\"click\"、\"mouseover\"等),\n但是这只能通过添加额外的值（如果能）。例如，<a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>的<strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>传递被单击的节点。为了通过Component的子元素直接访问DOM事件，\n我们需要指定<code>element</code>选项来标识要\n添加DOM监听器的Component属性：</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n</div></div></div><div id='cfg-loader' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-loader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-loader' class='name not-expandable'>loader</a><span> : <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>一个配置对象或者一个 <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a> 实例加载组件远程内容.</p>\n</div><div class='long'><p>一个配置对象或者一个 <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a> 实例加载组件远程内容.</p>\n</div></div></div><div id='cfg-margin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-margin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-margin' class='name expandable'>margin</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>为组件设置margin. ...</div><div class='long'><p>为组件设置margin. margin 可以是一个数值适用于所有边\n或者它可以是每个样式的CSS样式规范, 例如: '10 5 3 10'.</p>\n</div></div></div><div id='cfg-maskRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-maskRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-maskRe' class='name not-expandable'>maskRe</a><span> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a></span></div><div class='description'><div class='short'><p>一个输入掩码正则表达式，用来过滤不匹配的按键(默认为null)\nNote: 不过滤已经输入的字符</p>\n</div><div class='long'><p>一个输入掩码正则表达式，用来过滤不匹配的按键(默认为null)\nNote: 不过滤已经输入的字符</p>\n</div></div></div><div id='cfg-maxHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-maxHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-maxHeight' class='name expandable'>maxHeight</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>设置组件的最大高度值. ...</div><div class='long'><p>设置组件的最大高度值.</p>\n\n<p><strong>警告:</strong> 布局管理器应用的任何管理大小的配置将会被此属性覆盖.</p>\n</div></div></div><div id='cfg-maxLength' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-maxLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-maxLength' class='name expandable'>maxLength</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>校验时表单项允许输入的最大长度。通过改善可用性允许粘贴、编辑、重做和回退，\n此行为被设计用来为用户提供即时的反馈。限定表单项中可以输入字符的最大长度使用\nenforceMaxLength选项。 ...</div><div class='long'><p>校验时表单项允许输入的最大长度。通过改善可用性允许粘贴、编辑、重做和回退，\n此行为被设计用来为用户提供即时的反馈。限定表单项中可以输入字符的最大长度使用\n<strong><a href=\"#!/api/Ext.form.field.Text-cfg-enforceMaxLength\" rel=\"Ext.form.field.Text-cfg-enforceMaxLength\" class=\"docClass\">enforceMaxLength</a></strong>选项。</p>\n\n<p>默认为 Number.MAX_VALUE.</p>\n</div></div></div><div id='cfg-maxLengthText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-maxLengthText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-maxLengthText' class='name expandable'>maxLengthText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>如果 *maximum length** 校验失败时显示的出错文本 ...</div><div class='long'><p>如果 *<a href=\"#!/api/Ext.form.field.Text-cfg-maxLength\" rel=\"Ext.form.field.Text-cfg-maxLength\" class=\"docClass\">maximum length</a>** 校验失败时显示的出错文本</p>\n<p>Defaults to: <code>&quot;The maximum length for this field is {0}&quot;</code></p></div></div></div><div id='cfg-maxWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-maxWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-maxWidth' class='name expandable'>maxWidth</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>设置组件的最大宽度值. ...</div><div class='long'><p>设置组件的最大宽度值.</p>\n\n<p><strong>警告:</strong> 布局管理器应用的任何管理大小的配置将会被此属性覆盖.</p>\n</div></div></div><div id='cfg-minHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-minHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-minHeight' class='name expandable'>minHeight</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>设置组件的最小高度值. ...</div><div class='long'><p>设置组件的最小高度值.</p>\n\n<p><strong>警告:</strong> 布局管理器应用的任何管理大小的配置将会被此属性覆盖.</p>\n</div></div></div><div id='cfg-minLength' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-minLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-minLength' class='name expandable'>minLength</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>输入栏必须的最小长度(默认为0) ...</div><div class='long'><p>输入栏必须的最小长度(默认为0)</p>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='cfg-minLengthText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-minLengthText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-minLengthText' class='name expandable'>minLengthText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>如果 minimum length 校验失败时显示的出错文本 ...</div><div class='long'><p>如果 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-minLength\" rel=\"Ext.form.field.Text-cfg-minLength\" class=\"docClass\">minimum length</a></strong> 校验失败时显示的出错文本</p>\n<p>Defaults to: <code>&quot;The minimum length for this field is {0}&quot;</code></p></div></div></div><div id='cfg-minWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-minWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-minWidth' class='name expandable'>minWidth</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>设置组件的最小宽度值. ...</div><div class='long'><p>设置组件的最小宽度值.</p>\n\n<p><strong>警告:</strong> 布局管理器应用的任何管理大小的配置将会被此属性覆盖.</p>\n</div></div></div><div id='cfg-msgTarget' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-msgTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-msgTarget' class='name expandable'>msgTarget</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>错误消息文本应该显示的位置。必须是下列值之一：\n\n\nqtip 当用户鼠标悬停在该域之上时显示包含了消息的迅速提示。这是默认的。 ...</div><div class='long'><p>错误消息文本应该显示的位置。必须是下列值之一：</p>\n\n<ul>\n<li><p><code>qtip</code> 当用户鼠标悬停在该域之上时显示包含了消息的迅速提示。这是默认的。</p>\n\n<p><strong><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>必须被这个设置调用以起作用。</strong></p></li>\n<li><p><code>title</code> 显示消息在默认浏览器title属性弹出。</p></li>\n<li><code>under</code> 在域下方添加一块包含了错误消息的div。</li>\n<li><code>side</code> 添加一个错误图标在域的右边，鼠标悬停上面时弹出显示消息。</li>\n<li><code>none</code> 不显示任何错误消息。这可能对如果要实现自定义错误显示有用。</li>\n<li><code>[element id]</code> 直接把错误消息添加到一个指定元素的innerHTML。</li>\n</ul>\n\n<p>Defaults to: <code>&quot;qtip&quot;</code></p></div></div></div><div id='cfg-name' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-name' class='name expandable'>name</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>表单项名称。当使用form submit()方法其中包含这个表单项时，name作为参数名称。 ...</div><div class='long'><p>表单项名称。当使用<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">form submit()</a>方法其中包含这个表单项时，name作为参数名称。\n如果没有指定name配置项,使用<a href=\"#!/api/Ext.form.field.Base-cfg-inputId\" rel=\"Ext.form.field.Base-cfg-inputId\" class=\"docClass\">inputId</a>作为其值。\n为了在表单提交时不包括这个字段,设置<a href=\"#!/api/Ext.form.field.Base-cfg-submitValue\" rel=\"Ext.form.field.Base-cfg-submitValue\" class=\"docClass\">submitValue</a>为false</p>\n<p>Overrides: <a href='#!/api/Ext.form.field.Field-cfg-name' rel='Ext.form.field.Field-cfg-name' class='docClass'>Ext.form.field.Field.name</a></p></div></div></div><div id='cfg-overCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-overCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-overCls' class='name expandable'>overCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当鼠标移到该元素, 一个可选的额外的CSS类将被添加到该组件的元素,\n并在鼠标移出后删除. ...</div><div class='long'><p>当鼠标移到该元素, 一个可选的额外的CSS类将被添加到该组件的元素,\n并在鼠标移出后删除. 这可能对添加自定义的 'active' 或者 'hover' 样式的组件有用\n或任何其子组件使用标准的CSS规则.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-overflowX' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-overflowX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-overflowX' class='name not-expandable'>overflowX</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>可能的值有:\n* <code>'auto'</code> 自动启用水平滚动条(水平溢出:'auto')\n* <code>'scroll'</code> 始终启用水平滚动条(水平溢出:'scroll')\n默认的水平溢出是'hidden',不能这样指定<a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.又自动又始终</p>\n</div><div class='long'><p>可能的值有:\n* <code>'auto'</code> 自动启用水平滚动条(水平溢出:'auto')\n* <code>'scroll'</code> 始终启用水平滚动条(水平溢出:'scroll')\n默认的水平溢出是'hidden',不能这样指定<a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.又自动又始终</p>\n</div></div></div><div id='cfg-overflowY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-overflowY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-overflowY' class='name not-expandable'>overflowY</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>可能的值有:\n* <code>'auto'</code> 自动启用自动垂直滚动条(垂直溢出:'auto')\n* <code>'scroll'</code> 始终启用垂直滚动条(垂直溢出:'scroll')\n默认的垂直溢出是'hidden',不能这样指定<a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.又自动又始终</p>\n</div><div class='long'><p>可能的值有:\n* <code>'auto'</code> 自动启用自动垂直滚动条(垂直溢出:'auto')\n* <code>'scroll'</code> 始终启用垂直滚动条(垂直溢出:'scroll')\n默认的垂直溢出是'hidden',不能这样指定<a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.又自动又始终</p>\n</div></div></div><div id='cfg-padding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-padding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-padding' class='name expandable'>padding</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>为组件设置padding. ...</div><div class='long'><p>为组件设置padding. padding 可以是一个数值适用于所有边\n或者它可以是每个样式的CSS样式规范, 例如: '10 5 3 10'.</p>\n</div></div></div><div id='cfg-plugins' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-plugins' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-plugins' class='name expandable'>plugins</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]</span></div><div class='description'><div class='short'>一个对象或者对象数组, 组件将提供自定义功能. ...</div><div class='long'><p>一个对象或者对象数组, 组件将提供自定义功能.\n一个有效的插件唯一的要求是包含一个 init 方法, 接收一个 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 类型参数.\n当组件被创建时, 如果有可用的插件, 组件将会调用每个插件的 init 方法,\n并将自身的引用作为方法参数传递给它. 然后, 每个插件就可以调用方法或者响应组件上的事件, 就像需要的那样提供自己的功能.</p>\n</div></div></div><div id='cfg-preventMark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-cfg-preventMark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-cfg-preventMark' class='name expandable'>preventMark</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>为true时，禁止显示任何这个对象上的错误消息。 ...</div><div class='long'><p>为true时，禁止显示任何这个对象上的<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">错误消息</a>。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-readOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-cfg-readOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-cfg-readOnly' class='name expandable'>readOnly</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>和其他form表单项不同的是File表单项readOnly属性默认值是true。 ...</div><div class='long'><p>和其他form表单项不同的是File表单项readOnly属性默认值是true。</p>\n<p>Defaults to: <code>true</code></p><p>Overrides: <a href='#!/api/Ext.form.field.Trigger-cfg-readOnly' rel='Ext.form.field.Trigger-cfg-readOnly' class='docClass'>Ext.form.field.Trigger.readOnly</a></p></div></div></div><div id='cfg-readOnlyCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-readOnlyCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-readOnlyCls' class='name expandable'>readOnlyCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当表单项为readOnly时，应用到组件主体元素的CSS样式. ...</div><div class='long'><p>当表单项为<a href=\"#!/api/Ext.form.field.Base-cfg-readOnly\" rel=\"Ext.form.field.Base-cfg-readOnly\" class=\"docClass\">readOnly</a>时，应用到组件主体元素的CSS样式.</p>\n<p>Defaults to: <code>&quot;x-form-readonly&quot;</code></p></div></div></div><div id='cfg-regex' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-regex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-regex' class='name expandable'>regex</a><span> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a></span></div><div class='description'><div class='short'>在校验时，需要在表单项值纸上进行测试的JavaScript RegExp对象(默认为 null)。 ...</div><div class='long'><p>在校验时，需要在表单项值纸上进行测试的JavaScript RegExp对象(默认为 null)。\n如果测试失败，表单项将会使用 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-regexText\" rel=\"Ext.form.field.Text-cfg-regexText\" class=\"docClass\">regexText</a></strong> 或者 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-invalidText\" rel=\"Ext.form.field.Text-cfg-invalidText\" class=\"docClass\">invalidText</a></strong> 进行标记。</p>\n</div></div></div><div id='cfg-regexText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-regexText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-regexText' class='name expandable'>regexText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>如果使用了regex并且在校验失败了显示的出错文本 ...</div><div class='long'><p>如果使用了<strong><a href=\"#!/api/Ext.form.field.Text-cfg-regex\" rel=\"Ext.form.field.Text-cfg-regex\" class=\"docClass\">regex</a></strong>并且在校验失败了显示的出错文本</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-renderData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-renderData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-renderData' class='name not-expandable'>renderData</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>所使用的数据 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTpl\" rel=\"Ext.AbstractComponent-cfg-renderTpl\" class=\"docClass\">renderTpl</a> 除了以下属性值的组件:</p>\n\n<ul>\n<li>id</li>\n<li>ui</li>\n<li>uiCls</li>\n<li>baseCls</li>\n<li>componentCls</li>\n<li>frame</li>\n</ul>\n\n\n<p>参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderSelectors\" rel=\"Ext.AbstractComponent-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> 和 <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> 用法示例.</p>\n</div><div class='long'><p>所使用的数据 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTpl\" rel=\"Ext.AbstractComponent-cfg-renderTpl\" class=\"docClass\">renderTpl</a> 除了以下属性值的组件:</p>\n\n<ul>\n<li>id</li>\n<li>ui</li>\n<li>uiCls</li>\n<li>baseCls</li>\n<li>componentCls</li>\n<li>frame</li>\n</ul>\n\n\n<p>参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderSelectors\" rel=\"Ext.AbstractComponent-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> 和 <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> 用法示例.</p>\n</div></div></div><div id='cfg-renderSelectors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-renderSelectors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-renderSelectors' class='name expandable'>renderSelectors</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>一个对象其中包含指定DomQuery\n选择器确定创建的子元素渲染过程的属性. ...</div><div class='long'><p>一个对象其中包含指定<a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">DomQuery</a>\n选择器确定创建的子元素渲染过程的属性.</p>\n\n<p>在组件的内部结构呈现根据 <a href=\"#!/api/Ext.AbstractComponent-cfg-renderTpl\" rel=\"Ext.AbstractComponent-cfg-renderTpl\" class=\"docClass\">renderTpl</a>, 这个对象遍历,\n找到的元素作为属性添加到组件使用 <code>renderSelector</code> 属性名称.</p>\n\n<p>例如, 一个的组件渲染标题和描述到它的元素:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    renderTpl: [\n        '&lt;h1 class=\"title\"&gt;{title}&lt;/h1&gt;',\n        '&lt;p&gt;{desc}&lt;/p&gt;'\n    ],\n    renderData: {\n        title: \"Error\",\n        desc: \"Something went wrong\"\n    },\n    renderSelectors: {\n        titleEl: 'h1.title',\n        descEl: 'p'\n    },\n    listeners: {\n        afterrender: function(cmp){\n            // After rendering the component will have a titleEl and descEl properties\n            cmp.titleEl.setStyle({color: \"red\"});\n        }\n    }\n});\n</code></pre>\n\n<p>对于一个更快, 但弹性较差, 替代方案达到相同的最终结果 (渲染后组件的子元素属性),\n参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> 和 <a href=\"#!/api/Ext.AbstractComponent-method-addChildEls\" rel=\"Ext.AbstractComponent-method-addChildEls\" class=\"docClass\">addChildEls</a>.</p>\n</div></div></div><div id='cfg-renderTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-renderTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-renderTo' class='name expandable'>renderTo</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'>指定元素的id, 一个DOM元素或现有的元素，这个组件将被渲染成. ...</div><div class='long'><p>指定元素的id, 一个DOM元素或现有的元素，这个组件将被渲染成.</p>\n\n<p><strong>注意:</strong></p>\n\n<p><em>不</em>使用此配置项，如果该组件是一个<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a>的子元素.\n它的职责是 <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a>的\n<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout manager</a> 渲染和管理其子项.</p>\n\n<p>当使用此配置, 调用 render() 不是必须的.</p>\n\n<p>也可参见 <code><a href=\"#!/api/Ext.AbstractComponent-event-render\" rel=\"Ext.AbstractComponent-event-render\" class=\"docClass\">render</a></code> .</p>\n</div></div></div><div id='cfg-renderTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-renderTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-renderTpl' class='name expandable'>renderTpl</a><span> : <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>一个 XTemplate 用于创建此组件的封装内的内部结构\nElement. ...</div><div class='long'><p>一个 <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">XTemplate</a> 用于创建此组件的封装内的内部结构\n<a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a>.</p>\n\n<p>你通常不需要进行设置. 对基类 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 和\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>, 默认值为 <strong><code>null</code></strong> 这意味着它们最最初将被呈现没有内部结构;\n他们渲染 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> 为空. 很多专用的ExtJS和Touch\n类使用更复杂的DOM结构类, 提供自己的模板定义.</p>\n\n<p>这是为了允许开发者创建应用程序特定的效用与定制的内部结构的组成部分.</p>\n\n<p>在渲染时候, 任何创建的子元素可以自动导入对象属性的使用\n<a href=\"#!/api/Ext.AbstractComponent-cfg-renderSelectors\" rel=\"Ext.AbstractComponent-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> 和 <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> 配置项.</p>\n<p>Defaults to: <code>&quot;{%this.renderContent(out,values)%}&quot;</code></p></div></div></div><div id='cfg-repeatTriggerClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-repeatTriggerClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-repeatTriggerClick' class='name expandable'>repeatTriggerClick</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>设置为true使trigger按钮的长按事件生效。 ...</div><div class='long'><p>设置为true使trigger按钮的<a href=\"#!/api/Ext.util.ClickRepeater\" rel=\"Ext.util.ClickRepeater\" class=\"docClass\">长按事件</a>生效。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-resizable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-resizable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-resizable' class='name not-expandable'>resizable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>默认指定为'true'来适应这个组件渲染之后<a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Resizer</a></p>\n\n<p>也可以指定一个配置对象被传递到覆盖任何默认的构造函数\n默认情况下,组件的最大化,最小化使用 'false'</p>\n</div><div class='long'><p>默认指定为'true'来适应这个组件渲染之后<a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Resizer</a></p>\n\n<p>也可以指定一个配置对象被传递到覆盖任何默认的构造函数\n默认情况下,组件的最大化,最小化使用 'false'</p>\n</div></div></div><div id='cfg-resizeHandles' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-resizeHandles' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-resizeHandles' class='name expandable'>resizeHandles</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>Ext.resizer.Resizer 只有在自动大小为true的情况下,配置字符串才有效 ...</div><div class='long'><p><a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Ext.resizer.Resizer</a> 只有在自动大小为true的情况下,配置字符串才有效</p>\n<p>Defaults to: <code>&quot;all&quot;</code></p></div></div></div><div id='cfg-saveDelay' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-cfg-saveDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-cfg-saveDelay' class='name expandable'>saveDelay</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>如果许多state事件在短时间内被触发，这个缓冲区将被应用。 ...</div><div class='long'><p>如果许多state事件在短时间内被触发，这个缓冲区将被应用。</p>\n<p>Defaults to: <code>100</code></p></div></div></div><div id='cfg-selectOnFocus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-selectOnFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-selectOnFocus' class='name expandable'>selectOnFocus</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>true当表单项获得输入焦点时，将会自动选中所有存在的表单项文本。只在\neditable设置为true有效。 ...</div><div class='long'><p>true当表单项获得输入焦点时，将会自动选中所有存在的表单项文本。只在\n<a href=\"#!/api/Ext.form.field.Trigger-cfg-editable\" rel=\"Ext.form.field.Trigger-cfg-editable\" class=\"docClass\">editable</a>设置为true有效。</p>\n<p>Defaults to: <code>false</code></p><p>Overrides: <a href='#!/api/Ext.form.field.Text-cfg-selectOnFocus' rel='Ext.form.field.Text-cfg-selectOnFocus' class='docClass'>Ext.form.field.Text.selectOnFocus</a></p></div></div></div><div id='cfg-shadow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-cfg-shadow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-cfg-shadow' class='name expandable'>shadow</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>定义浮动组件是否应该有阴影效果. ...</div><div class='long'><p>定义浮动组件是否应该有阴影效果. 设置为 true 则自动创建一个 <a href=\"#!/api/Ext.Shadow\" rel=\"Ext.Shadow\" class=\"docClass\">Ext.Shadow</a> 对象,\n或者设为string类型的值,用于指定 阴影的显示模式 <a href=\"#!/api/Ext.Shadow-cfg-mode\" rel=\"Ext.Shadow-cfg-mode\" class=\"docClass\">Ext.Shadow.mode</a>. 设置为 false 则禁用阴影.</p>\n<p>Defaults to: <code>&quot;sides&quot;</code></p></div></div></div><div id='cfg-shadowOffset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-cfg-shadowOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-cfg-shadowOffset' class='name not-expandable'>shadowOffset</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'><p>阴影效果偏移的像素值.</p>\n</div><div class='long'><p>阴影效果偏移的像素值.</p>\n</div></div></div><div id='cfg-shrinkWrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-shrinkWrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-shrinkWrap' class='name expandable'>shrinkWrap</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>如果此属性是一个数字, 解释如下:\n\n\n0: 无论是宽度还是高度不依赖于内容. ...</div><div class='long'><p>如果此属性是一个数字, 解释如下:</p>\n\n<ul>\n<li>0: 无论是宽度还是高度不依赖于内容. 这等效于 <code>false</code>.</li>\n<li>1: 宽度依赖内容 (shrink wraps), 但是高度不依赖.</li>\n<li>2: 高度依赖内容 (shrink wraps), 但是宽度不依赖.使用默认的.</li>\n<li>3: 宽度和高度都依赖于内容 (shrink wrap). 这等效于 <code>true</code>.</li>\n</ul>\n\n\n<p>在 CSS 方面, shrink-wrap 宽度类似于 inline-block 元素而不是类似一个\nblock-level 元素. 有些容器布局总是 shrink-wrap 他们的子元素,\n忽略这个属性 (e.g., <a href=\"#!/api/Ext.layout.container.HBox\" rel=\"Ext.layout.container.HBox\" class=\"docClass\">Ext.layout.container.HBox</a>,\n<a href=\"#!/api/Ext.layout.container.VBox\" rel=\"Ext.layout.container.VBox\" class=\"docClass\">Ext.layout.container.VBox</a>, <a href=\"#!/api/Ext.layout.component.Dock\" rel=\"Ext.layout.component.Dock\" class=\"docClass\">Ext.layout.component.Dock</a>).</p>\n<p>Defaults to: <code>2</code></p></div></div></div><div id='cfg-size' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-size' class='name expandable'>size</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>text input元素的'size'属性的初始化值。仅在表单项没有配置width时使用\n并且没有由容器布局指定宽度。默认值20。 ...</div><div class='long'><p>text input元素的'size'属性的初始化值。仅在表单项没有配置<a href=\"#!/api/Ext.form.field.Text-cfg-width\" rel=\"Ext.form.field.Text-cfg-width\" class=\"docClass\">width</a>时使用\n并且没有由容器布局指定宽度。默认值20。</p>\n<p>Defaults to: <code>20</code></p></div></div></div><div id='cfg-stateEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-cfg-stateEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-cfg-stateEvents' class='name expandable'>stateEvents</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span></div><div class='description'><div class='short'>一组事件，当被触发时，应该触发这个对象去保存它的state。默认是none。 ...</div><div class='long'><p>一组事件，当被触发时，应该触发这个对象去保存它的state。默认是none。\n<code>stateEvents</code>可以是任何类型的事件支持的对象，包括浏览器或客户端事件。\n\n(例如, <tt>['click', 'customerchange']</tt>).</p>\n\n\n<p>参见 <code><a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a></code> 对于一个解释的保存和恢复的state。</p>\n\n</div></div></div><div id='cfg-stateId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-cfg-stateId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-cfg-stateId' class='name expandable'>stateId</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>这个对象独一无二的id是以state管理为目的。 ...</div><div class='long'><p>这个对象独一无二的id是以state管理为目的。</p>\n\n<p>参见 <a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a> 对于一个解释的保存和恢复的state。</p>\n\n</div></div></div><div id='cfg-stateful' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-cfg-stateful' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-cfg-stateful' class='name expandable'>stateful</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>一个试图从启动时保存的state恢复到state的内部属性状态的标志。 ...</div><div class='long'><p>一个试图从启动时保存的state恢复到state的内部属性状态的标志。\n对象必定有一个<a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a>为state被管理。</p>\n\n<p>自动生成的id不能保证稳定的跨页面加载和不能被指望来保存和恢复相同的状态对象。</p>\n\n<p>为state保存工作，state管理的提供者必须被设置为一个实现<a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a>，\n并且覆盖了<a href=\"#!/api/Ext.state.Provider-method-set\" rel=\"Ext.state.Provider-method-set\" class=\"docClass\">set</a>和<a href=\"#!/api/Ext.state.Provider-method-get\" rel=\"Ext.state.Provider-method-get\" class=\"docClass\">get</a>\n方法保存和召回name/value对。</p>\n\n<pre><code> 一个内置的实现，<a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a>是可用的。\n</code></pre>\n\n<p>设置state提供的当前页面：</p>\n\n<p>   <a href=\"#!/api/Ext.state.Manager-method-setProvider\" rel=\"Ext.state.Manager-method-setProvider\" class=\"docClass\">Ext.state.Manager.setProvider</a>(new <a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a>({</p>\n\n<pre><code>   expires: new Date(new Date().getTime()+(1000*60*60*24*7)), //从现在开始后的7天\n</code></pre>\n\n<p>   }));</p>\n\n<p>当<a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a>中被列出的事件被触发时，\n一个stateful对象试图去保存state。</p>\n\n<p>为了保存state，stateful对象首先序列化它的state通过调用<em><a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">getState</a></em>。</p>\n\n<p>state只有在最初配置，并改变了配置的值，\n组件基类来实现{ @link # getState }来保存它的宽度和高度。</p>\n\n<p>Panel类保存它折叠的state除了那个。</p>\n\n<p>Grid类保存它的列state除了它超类的state。</p>\n\n<p>假如有更多的应用state要保存，开发者必须提供一个实现首先\n调用超类的方法去继承上面的行为，然后注入新的属性到返回的对象。</p>\n\n<p>通过getState得到的值被传递给<a href=\"#!/api/Ext.state.Manager-method-set\" rel=\"Ext.state.Manager-method-set\" class=\"docClass\">Ext.state.Manager.set</a>，\n使用配置的<a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a>，通过<a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a>来保存对象键。</p>\n\n<p>在构造过程中，stateful对象试图通过调用<a href=\"#!/api/Ext.state.Manager-method-get\" rel=\"Ext.state.Manager-method-get\" class=\"docClass\">Ext.state.Manager.get</a>\n传送<a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a>修复它的状态。</p>\n\n<p>作为传递给<a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a>的对象。默认实现<a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a>\n简单地复制属性的对象，但开发者可以覆盖这个支持更复杂的应用程序状态的恢复。</p>\n\n<p>您可以执行额外的处理状态保存和恢复通过附加处理程序到<a href=\"#!/api/Ext.state.Stateful-event-beforestaterestore\" rel=\"Ext.state.Stateful-event-beforestaterestore\" class=\"docClass\">beforestaterestore</a>，\n<a href=\"#!/api/Ext.state.Stateful-event-staterestore\" rel=\"Ext.state.Stateful-event-staterestore\" class=\"docClass\">staterestore</a>，<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a>和<a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a>事件。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-stripCharsRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-stripCharsRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-stripCharsRe' class='name expandable'>stripCharsRe</a><span> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a></span></div><div class='description'><div class='short'>一个JavaScript RegExp对象，用来在校验之前从值中去除不想要的内容(默认为 null)。 ...</div><div class='long'><p>一个JavaScript RegExp对象，用来在校验之前从值中去除不想要的内容(默认为 null)。\n如果指定了<code>stripCharsRe</code>配置项，每一个匹配<code>stripCharsRe</code>的<em>字符序列</em>都会被移除。</p>\n</div></div></div><div id='cfg-style' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-style' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-style' class='name expandable'>style</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>自定义风格规范适用于该组件的元素. ...</div><div class='long'><p>自定义风格规范适用于该组件的元素.\n应该是<a href=\"#!/api/Ext.dom.Element-method-applyStyles\" rel=\"Ext.dom.Element-method-applyStyles\" class=\"docClass\">Ext.Element.applyStyles</a>的一个有效参数.</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    title: 'Some Title',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 400, height: 300,\n    layout: 'form',\n    items: [{\n        xtype: 'textarea',\n        style: {\n            width: '95%',\n            marginBottom: '10px'\n        }\n    },\n    new <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>({\n        text: 'Send',\n        minWidth: '100',\n        style: {\n            marginBottom: '10px'\n        }\n    })\n    ]\n});\n</code></pre>\n</div></div></div><div id='cfg-styleHtmlCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-styleHtmlCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-styleHtmlCls' class='name expandable'>styleHtmlCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>当你设置 styleHtmlContent 为 true 的时候, 配置的样式类添加到目标的内容区域. ...</div><div class='long'><p>当你设置 styleHtmlContent 为 true 的时候, 配置的样式类添加到目标的内容区域.</p>\n<p>Defaults to: <code>&quot;x-html&quot;</code></p></div></div></div><div id='cfg-styleHtmlContent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-styleHtmlContent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-styleHtmlContent' class='name expandable'>styleHtmlContent</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果设置为 true，就自动地将这个html嵌入在这个组件 (body for panels) 的内容目标里. ...</div><div class='long'><p>如果设置为 true，就自动地将这个html嵌入在这个组件 (body for panels) 的内容目标里.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-submitValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-cfg-submitValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-cfg-submitValue' class='name expandable'>submitValue</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>即使表单项启用了，设置为false将防止当前表单项被submitted ...</div><div class='long'><p>即使表单项启用了，设置为false将防止当前表单项被<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitted</a></p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-tabIndex' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-tabIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-tabIndex' class='name expandable'>tabIndex</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>该表单项的tabIndex. ...</div><div class='long'><p>该表单项的tabIndex. 注意，此属性仅仅应用到被渲染好的，而不是那些通过applyTo...</p>\n</div></div></div><div id='cfg-toFrontOnShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-cfg-toFrontOnShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-cfg-toFrontOnShow' class='name expandable'>toFrontOnShow</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>如果为True，则自动调用toFront，当show被调用已经可见的，\n浮动的组件。浮动组件的层在最 ...</div><div class='long'><p>如果为True，则自动调用<a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">toFront</a>，当<a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a>被调用已经可见的，\n浮动的组件。浮动组件的层在最</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-tpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-tpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-tpl' class='name expandable'>tpl</a><span> : <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>/<a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span></div><div class='description'><div class='short'>一个 Ext.Template, Ext.XTemplate 或者一个字符串数字以形成一个 Ext.XTemplate. ...</div><div class='long'><p>一个 <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>, <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a> 或者一个字符串数字以形成一个 <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>.\n配合 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-data\" rel=\"Ext.AbstractComponent-cfg-data\" class=\"docClass\">data</a></code> 和 <code><a href=\"#!/api/Ext.AbstractComponent-cfg-tplWriteMode\" rel=\"Ext.AbstractComponent-cfg-tplWriteMode\" class=\"docClass\">tplWriteMode</a></code> 配置一起使用.</p>\n</div></div></div><div id='cfg-tplWriteMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-tplWriteMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-tplWriteMode' class='name expandable'>tplWriteMode</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>Ext.(X)Template 更新内容区域使用的方法. ...</div><div class='long'><p>Ext.(X)Template 更新内容区域使用的方法.\n参见 <code><a href=\"#!/api/Ext.XTemplate-method-overwrite\" rel=\"Ext.XTemplate-method-overwrite\" class=\"docClass\">Ext.XTemplate.overwrite</a></code> 默认模式信息.</p>\n<p>Defaults to: <code>&quot;overwrite&quot;</code></p></div></div></div><div id='cfg-triggerBaseCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-triggerBaseCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-triggerBaseCls' class='name expandable'>triggerBaseCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>附加在trigger按钮上的基础样式。样式triggerCls 被附加在\n这个样式上。 ...</div><div class='long'><p>附加在trigger按钮上的基础样式。样式<a href=\"#!/api/Ext.form.field.Trigger-cfg-triggerCls\" rel=\"Ext.form.field.Trigger-cfg-triggerCls\" class=\"docClass\">triggerCls</a> 被附加在\n这个样式上。</p>\n<p>Defaults to: <code>&quot;x-form-trigger&quot;</code></p></div></div></div><div id='cfg-triggerCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-triggerCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-triggerCls' class='name not-expandable'>triggerCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>trigger按钮的附加样式。trigger按钮默认使用<a href=\"#!/api/Ext.form.field.Trigger-cfg-triggerBaseCls\" rel=\"Ext.form.field.Trigger-cfg-triggerBaseCls\" class=\"docClass\">triggerBaseCls</a>样式，\n如果指定triggerCls属性的话将<strong>appended</strong>上原有的样式上。</p>\n</div><div class='long'><p>trigger按钮的附加样式。trigger按钮默认使用<a href=\"#!/api/Ext.form.field.Trigger-cfg-triggerBaseCls\" rel=\"Ext.form.field.Trigger-cfg-triggerBaseCls\" class=\"docClass\">triggerBaseCls</a>样式，\n如果指定triggerCls属性的话将<strong>appended</strong>上原有的样式上。</p>\n</div></div></div><div id='cfg-triggerWrapCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-cfg-triggerWrapCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-cfg-triggerWrapCls' class='name expandable'>triggerWrapCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>封装trigger按钮(组)的div使用的样式。 ...</div><div class='long'><p>封装trigger按钮(组)的div使用的样式。</p>\n<p>Defaults to: <code>&quot;x-form-trigger-wrap&quot;</code></p></div></div></div><div id='cfg-ui' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-ui' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-ui' class='name expandable'>ui</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span></div><div class='description'><div class='short'>设置组件样式. ...</div><div class='long'><p>设置组件样式. 可以是一个字符串或者字符串数组 (UIs)</p>\n<p>Defaults to: <code>&quot;default&quot;</code></p></div></div></div><div id='cfg-uiCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-uiCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-uiCls' class='name expandable'>uiCls</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>An array of of classNames which are currently applied to this component ...</div><div class='long'><p>An array of of classNames which are currently applied to this component</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='cfg-validateOnBlur' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-cfg-validateOnBlur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-cfg-validateOnBlur' class='name expandable'>validateOnBlur</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>此项判断当表单项失去焦点时，该表单项是否需要验证。由于在表单中逐步调试表单项，即使在操作中是否使表单项以某种方式发生变化，这也会引发验证表单项。validateOnChange用法类似。 ...</div><div class='long'><p>此项判断当表单项失去焦点时，该表单项是否需要验证。由于在表单中逐步调试表单项，即使在操作中是否使表单项以某种方式发生变化，这也会引发验证表单项。<a href=\"#!/api/Ext.form.field.Base-cfg-validateOnChange\" rel=\"Ext.form.field.Base-cfg-validateOnChange\" class=\"docClass\">validateOnChange</a>用法类似。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-validateOnChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-cfg-validateOnChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-cfg-validateOnChange' class='name expandable'>validateOnChange</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>无论合适检测到表单项的值变化了，指定这个表单项是否立马验证。 ...</div><div class='long'><p>无论合适检测到表单项的值变化了，指定这个表单项是否立马验证。\n如果验证导致表单项有效性的变化，一个<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>事件将会被触发。\n这允许当用户在输入时，这个表单项立马对内容的的有效性给出即时的反馈。</p>\n\n<p>当设置成false，反馈不会立马得到。如果clientValidation配置项<a href=\"#!/api/Ext.form.Basic-method-doAction\" rel=\"Ext.form.Basic-method-doAction\" class=\"docClass\">Ext.form.Basic.doAction</a>启用了，或者这个表单项或表单手动验证了\n则这个表单提交前无论怎样都会被验证。</p>\n\n<p>也可参见 <a href=\"#!/api/Ext.form.field.Base-cfg-checkChangeEvents\" rel=\"Ext.form.field.Base-cfg-checkChangeEvents\" class=\"docClass\">Ext.form.field.Base.checkChangeEvents</a> 来控制表单项的值是检测变化的</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-validator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-validator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-validator' class='name expandable'>validator</a><span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span></div><div class='description'><div class='short'>在表单项校验(getErrors)中自定义的调用的校验函数\n如果指定了，这个函数会首先被调用，允许开发者重写默认的校验过程\n\n这个函数会传递一下参数: ...</div><div class='long'><p>在表单项校验(<a href=\"#!/api/Ext.form.field.Text-method-getErrors\" rel=\"Ext.form.field.Text-method-getErrors\" class=\"docClass\">getErrors</a>)中自定义的调用的校验函数\n如果指定了，这个函数会首先被调用，允许开发者重写默认的校验过程</p>\n\n<p>这个函数会传递一下参数:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>当前表单项值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>校验器的返回值</p>\n\n<ul>\n<li>True如果值是有效的</li>\n<li>如果值是无效的将会显示错误文本</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='cfg-value' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-cfg-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-cfg-value' class='name not-expandable'>value</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>表单项的初始化值</p>\n</div><div class='long'><p>表单项的初始化值</p>\n</div></div></div><div id='cfg-vtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-vtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-vtype' class='name not-expandable'>vtype</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'><p>一个校验类型名，在<a href=\"#!/api/Ext.form.field.VTypes\" rel=\"Ext.form.field.VTypes\" class=\"docClass\">Ext.form.field.VTypes</a>中定义(默认为null)</p>\n</div><div class='long'><p>一个校验类型名，在<a href=\"#!/api/Ext.form.field.VTypes\" rel=\"Ext.form.field.VTypes\" class=\"docClass\">Ext.form.field.VTypes</a>中定义(默认为null)</p>\n</div></div></div><div id='cfg-vtypeText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-cfg-vtypeText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-cfg-vtypeText' class='name expandable'>vtypeText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>一个自定义的出错消息，用来替代为当前表单项所设置的vtype所提供的默认消息(默认为'')。 ...</div><div class='long'><p>一个自定义的出错消息，用来替代为当前表单项所设置的<strong><code><a href=\"#!/api/Ext.form.field.Text-cfg-vtype\" rel=\"Ext.form.field.Text-cfg-vtype\" class=\"docClass\">vtype</a></code></strong>所提供的默认消息(默认为'')。\n<strong>Note</strong>:只有设置了 <strong><code><a href=\"#!/api/Ext.form.field.Text-cfg-vtype\" rel=\"Ext.form.field.Text-cfg-vtype\" class=\"docClass\">vtype</a></code></strong> 时才应用此项，否则忽略。</p>\n</div></div></div><div id='cfg-width' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-width' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-width' class='name not-expandable'>width</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>此组件的宽度，以像素为单位。</p>\n</div><div class='long'><p>此组件的宽度，以像素为单位。</p>\n</div></div></div><div id='cfg-xtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-cfg-xtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-cfg-xtype' class='name expandable'>xtype</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>此属性提供了一个较短的替代全类型创建对象. ...</div><div class='long'><p>此属性提供了一个较短的替代全类型创建对象.\n使用 <code>xtype</code> 是最常见的方式来定义组件实例,\n特别是在一个容器中. 例如,\n在一个表单包含文本域的元素可以显式创建像这样:</p>\n\n<pre><code> items: [\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n         fieldLabel: 'Foo'\n     }),\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n         fieldLabel: 'Bar'\n     }),\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Number\" rel=\"Ext.form.field.Number\" class=\"docClass\">Ext.form.field.Number</a>', {\n         fieldLabel: 'Num'\n     })\n ]\n</code></pre>\n\n<p>但使用 <code>xtype</code>, 上述成为:</p>\n\n<pre><code> items: [\n     {\n         xtype: 'textfield',\n         fieldLabel: 'Foo'\n     },\n     {\n         xtype: 'textfield',\n         fieldLabel: 'Bar'\n     },\n     {\n         xtype: 'numberfield',\n         fieldLabel: 'Num'\n     }\n ]\n</code></pre>\n\n<p>当 <code>xtype</code> 是多个元素共有, <a href=\"#!/api/Ext.container.AbstractContainer-cfg-defaultType\" rel=\"Ext.container.AbstractContainer-cfg-defaultType\" class=\"docClass\">Ext.container.AbstractContainer.defaultType</a>\n是另一种方式为所有没有明确<code>xtype</code>的元素明确 <code>xtype</code>:</p>\n\n<pre><code> defaultType: 'textfield',\n items: [\n     { fieldLabel: 'Foo' },\n     { fieldLabel: 'Bar' },\n     { fieldLabel: 'Num', xtype: 'numberfield' }\n ]\n</code></pre>\n\n<p><code>items</code> 数组所有成员现在仅仅是一个\"配置对象\".\n这些对象用于创建和配置组件的实例.\n一个配置对象可以使用 <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>手动实例化一个组件:</p>\n\n<pre><code> var text1 = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n     fieldLabel: 'Foo'\n });\n\n // or alternatively:\n\n var text1 = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>({\n     xtype: 'textfield',\n     fieldLabel: 'Foo'\n });\n</code></pre>\n\n<p>这种转换的配置对象实例化组件完成时创建容器作为其 {<a href=\"#!/api/Ext.container.AbstractContainer-method-initComponent\" rel=\"Ext.container.AbstractContainer-method-initComponent\" class=\"docClass\">Ext.container.AbstractContainer.initComponent</a>}\n的过程的一部分. 就像同一进程的一部分, <code>items</code> 数组\n由原来的数组转换成 <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> 示例.</p>\n\n<p>你可以定义自己的 <code>xtype</code> 在一个自定义的 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">component</a> 指定\n<code>xtype</code> 属性在 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>. 例如:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.PressMeButton', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'pressmebutton',\n    text: 'Press Me'\n});\n</code></pre>\n\n<p>当给一个自定义组件命名<code>xtype</code>应谨慎, 因为他是唯一的,\n所有xtypes共享范围.\n第三方组件可考虑使用一个前缀以免冲突.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo.form.CoolButton', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'ux-coolbutton',\n    text: 'Cool!'\n});\n</code></pre>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-onExtended' class='name expandable'>$onExtended</a><span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>扩展事件 ...</div><div class='long'><p>扩展事件</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-_isLayoutRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-_isLayoutRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-_isLayoutRoot' class='name expandable'>_isLayoutRoot</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>设置这个属性为 'true' 会引起 isLayoutRoot 方法返回 'true'\n并且停止寻找最顶级的组件布局. ...</div><div class='long'><p>设置这个属性为 'true' 会引起 <a href=\"#!/api/Ext.AbstractComponent-method-isLayoutRoot\" rel=\"Ext.AbstractComponent-method-isLayoutRoot\" class=\"docClass\">isLayoutRoot</a> 方法返回 'true'\n并且停止寻找最顶级的组件布局.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-autoGenId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-autoGenId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-autoGenId' class='name expandable'>autoGenId</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>true 表示ID是自动生成而不是通过配置提供。 ...</div><div class='long'><p><code>true</code> 表示ID是自动生成而不是通过配置提供。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-bodyEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-bodyEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-bodyEl' class='name not-expandable'>bodyEl</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>DIV Element包装组件的内容。仅在组件已被渲染后可用。</p>\n</div><div class='long'><p>DIV Element包装组件的内容。仅在组件已被渲染后可用。</p>\n</div></div></div><div id='property-button' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-property-button' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-property-button' class='name expandable'>button</a><span> : <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a></span></div><div class='description'><div class='short'>文件上传表单项创建的触发按钮的一个引用。 ...</div><div class='long'><p>文件上传表单项创建的触发按钮的一个引用。 只作用在组件被渲染之后。</p>\n</div></div></div><div id='property-componentLayoutCounter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-componentLayoutCounter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-componentLayoutCounter' class='name expandable'>componentLayoutCounter</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>The number of component layout calls made on this object. ...</div><div class='long'><p>The number of component layout calls made on this object.</p>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-draggable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-draggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-draggable' class='name expandable'>draggable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>标识是否可以拖动组件。 ...</div><div class='long'><p>标识是否可以拖动组件。</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-errorEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-errorEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-errorEl' class='name not-expandable'>errorEl</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>包含组件作物信息的DIV Element。注意，根据所配置的<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a>，\n这个元素可能隐藏支持一些其他形式展示，但使用辅助技术会永远存在于DOM中。</p>\n</div><div class='long'><p>包含组件作物信息的DIV Element。注意，根据所配置的<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a>，\n这个元素可能隐藏支持一些其他形式展示，但使用辅助技术会永远存在于DOM中。</p>\n</div></div></div><div id='property-fileInputEl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-property-fileInputEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-property-fileInputEl' class='name not-expandable'>fileInputEl</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>文件上传表单项创建的不可见的文件输入元素的一个引用。只可以在组件被渲染之后使用。</p>\n</div><div class='long'><p>文件上传表单项创建的不可见的文件输入元素的一个引用。只可以在组件被渲染之后使用。</p>\n</div></div></div><div id='property-floatParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-property-floatParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-property-floatParent' class='name expandable'>floatParent</a><span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>只存在于作为容器的子项被插入的浮动组件。 ...</div><div class='long'><p>只存在于作为容器的子项被插入的浮动组件。</p>\n\n<p>浮动的组件编程方式<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">rendered</a>\n将不会有浮动的父级属性</p>\n\n<p>对于<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动组件是一个容器的子项，浮动上级将是拥有容器</p>\n\n<p>例如，在一个窗口的下拉列表<a href=\"#!/api/Ext.view.BoundList\" rel=\"Ext.view.BoundList\" class=\"docClass\">BoundList</a> 在窗体中,\n它的浮动父窗口就是窗体</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> and <a href=\"#!/api/Ext.Component-property-zIndexManager\" rel=\"Ext.Component-property-zIndexManager\" class=\"docClass\">zIndexManager</a></p>\n</div></div></div><div id='property-frameSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-frameSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-frameSize' class='name expandable'>frameSize</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>其中加入任何划分元件内的密封元件,以提供图形表示的宽度,\n圆角边界. ...</div><div class='long'><p>其中加入任何划分元件内的密封元件,以提供图形表示的宽度,\n圆角边界. 参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-frame\" rel=\"Ext.AbstractComponent-cfg-frame\" class=\"docClass\">frame</a> 配置.</p>\n\n<p>这是包含以像素为单位的一个对象为所有四个侧面包含下面属性的组件:</p>\n<p>Defaults to: <code>{left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0}</code></p><ul><li><span class='pre'>top</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>顶部边框元素的像素宽度.</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>right</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>右侧边框元素的像素宽度.</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>bottom</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>底部边框元素的像素宽度.</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>left</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>左侧边框元素的像素宽度.</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>左右边框元素的像素总宽度</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>顶部和右侧底部的像素总宽度.</p>\n<p>Defaults to: <code>0</code></p></div></li></ul></div></div></div><div id='property-hasListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-property-hasListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-hasListeners' class='name expandable'>hasListeners</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>本对象包含任何有监听器的事件的键。监听器可以在实例上直接设置，\n或者在其类或者父类(通过observe)\n或者在MVC EventBus上设置。本对象的值为真\n(一个非零的数字)和假(0或者undefined)。它们并不代表确切的监听...</div><div class='long'><p>本对象包含任何有监听器的事件的键。监听器可以在实例上直接设置，\n或者在其类或者父类(通过<a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>)\n或者在<a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>上设置。本对象的值为真\n(一个非零的数字)和假(0或者undefined)。它们并不代表确切的监听器数量。\n如果事件必须被触发，它的值是真的，\n如果没有必要，就是假的。</p>\n\n<p>本属性的设计目的是避免没有监听器时调用fireEvent的开销。\n如果fireEvent要调用成百上千次，这尤其有用。\n用法:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n</div></div></div><div id='property-inputCell' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-property-inputCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-property-inputCell' class='name not-expandable'>inputCell</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>封装成输入框元素的‘TD’元素的一个引用。只可以在表单项被渲染后设置。</p>\n</div><div class='long'><p>封装成输入框元素的‘TD’元素的一个引用。只可以在表单项被渲染后设置。</p>\n</div></div></div><div id='property-inputEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-property-inputEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-property-inputEl' class='name not-expandable'>inputEl</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>表单的输入元素，仅当表单项被渲染才可用。</p>\n</div><div class='long'><p>表单的输入元素，仅当表单项被渲染才可用。</p>\n</div></div></div><div id='property-isComponent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-isComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-isComponent' class='name expandable'>isComponent</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>true 在这个类标识对象是 Component或者其子类的实例。 ...</div><div class='long'><p><code>true</code> 在这个类标识对象是 Component或者其子类的实例。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isFieldLabelable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-isFieldLabelable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-isFieldLabelable' class='name expandable'>isFieldLabelable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>Flag。标志这个对象作为域是labelabe。总为true。 ...</div><div class='long'><p>Flag。标志这个对象作为域是labelabe。总为true。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isFormField' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-property-isFormField' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-property-isFormField' class='name expandable'>isFormField</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>标记这个组件是一个Field。通常是true。 ...</div><div class='long'><p>标记这个组件是一个Field。通常是true。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isObservable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-property-isObservable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-property-isObservable' class='name expandable'>isObservable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>在本类中设置为true将一个对象标识为实例化的Observable或其子类。 ...</div><div class='long'><p>在本类中设置为<code>true</code>将一个对象标识为实例化的Observable或其子类。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-labelCell' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-labelCell' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-labelCell' class='name not-expandable'>labelCell</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p><code>&lt;TD&gt;</code> Element，其中包含这个组件的标签Element。仅在组件已被渲染后可用。</p>\n</div><div class='long'><p><code>&lt;TD&gt;</code> Element，其中包含这个组件的标签Element。仅在组件已被渲染后可用。</p>\n</div></div></div><div id='property-labelEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-labelEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-labelEl' class='name not-expandable'>labelEl</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>这个组件的标签Element。仅在组件已被渲染后可用。</p>\n</div><div class='long'><p>这个组件的标签Element。仅在组件已被渲染后可用。</p>\n</div></div></div><div id='property-maskOnDisable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-maskOnDisable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-maskOnDisable' class='name expandable'>maskOnDisable</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>创建自定义组件时这是个内部标识. ...</div><div class='long'><p>创建自定义组件时这是个内部标识. 默认情况下, 此设置为 'true'\n这意味着禁用时每个组件都获得一个蒙版. 组件像 FieldContainer, FieldSet, Field, Button, Tab\n覆盖这个属性为 <code>false</code> 因为他们希望实现自定义禁用逻辑.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-noWrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-property-noWrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-property-noWrap' class='name expandable'>noWrap</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>统治布局系统高度可被立即测量，因为宽度不需要设置。 ...</div><div class='long'><p>统治布局系统高度可被立即测量，因为宽度不需要设置。</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-originalValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-property-originalValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-property-originalValue' class='name not-expandable'>originalValue</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p>配置在<a href=\"#!/api/Ext.form.field.Field-cfg-value\" rel=\"Ext.form.field.Field-cfg-value\" class=\"docClass\">value</a>上的表单项的原始值，如果表单的<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a>\n设置为<code>true</code>,载入表单上次加载操作的值。</p>\n</div><div class='long'><p>配置在<a href=\"#!/api/Ext.form.field.Field-cfg-value\" rel=\"Ext.form.field.Field-cfg-value\" class=\"docClass\">value</a>上的表单项的原始值，如果表单的<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a>\n设置为<code>true</code>,载入表单上次加载操作的值。</p>\n</div></div></div><div id='property-ownerCt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-ownerCt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-ownerCt' class='name expandable'>ownerCt</a><span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>组件所属的 Container (当前组件被添加到一个容器中时此值被自动设置)。 ...</div><div class='long'><p>组件所属的 <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a> (当前组件被添加到一个容器中时此值被自动设置)。</p>\n\n<p><strong>注意</strong>: 如需访问容器中的子组件参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-itemId\" rel=\"Ext.AbstractComponent-cfg-itemId\" class=\"docClass\">itemId</a>.</p>\n</div></div></div><div id='property-rendered' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-property-rendered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-property-rendered' class='name expandable'>rendered</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>显示是否是这个组件已经被渲染. ...</div><div class='long'><p>显示是否是这个组件已经被渲染.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>本身\n\n获取当前类的引用，此对象被实例化。不同于 statics,\nthis.self是依赖范围，它意味着要使用动态继承。 ...</div><div class='long'><p>本身</p>\n\n<p>获取当前类的引用，此对象被实例化。不同于 <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code>是依赖范围，它意味着要使用动态继承。\n参见 <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> 详细对比</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // 依赖 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat' 猫\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard' 雪豹\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div><div id='property-suspendCheckChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-property-suspendCheckChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-property-suspendCheckChange' class='name expandable'>suspendCheckChange</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-triggerEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-property-triggerEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-property-triggerEl' class='name expandable'>triggerEl</a><span> : <a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.CompositeElement</a></span></div><div class='description'><div class='short'>所有trigger按钮元素的封装。 ...</div><div class='long'><p>所有trigger按钮元素的封装。 只可以在表单项被渲染后设置。</p>\n</div></div></div><div id='property-triggerWrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-property-triggerWrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-property-triggerWrap' class='name not-expandable'>triggerWrap</a><span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span></div><div class='description'><div class='short'><p>封装成一个输入框元素和按钮(组)的‘TABLE’元素的一个引用。只可以在表单项被渲染后设置。</p>\n</div><div class='long'><p>封装成一个输入框元素和按钮(组)的‘TABLE’元素的一个引用。只可以在表单项被渲染后设置。</p>\n</div></div></div><div id='property-zIndexManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-property-zIndexManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-property-zIndexManager' class='name expandable'>zIndexManager</a><span> : <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">Ext.ZIndexManager</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>只存在于floating组件后，他们已提供。 ...</div><div class='long'><p>只存在于<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>组件后，他们已提供。</p>\n\n<p>管理该组件的ZIndexManager的参考是z-index。</p>\n\n<p><a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a>维护一个堆栈的浮动组件z轴，\n并且还提供了一个单一模态面具下是插入模态浮动组件的可见。</p>\n\n<p>浮动组件可能是 <a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">brought to the front</a> or <a href=\"#!/api/Ext.Component-method-toBack\" rel=\"Ext.Component-method-toBack\" class=\"docClass\">sent to the back</a> of the\nz轴 堆栈.</p>\n\n<p>这个默认为全局<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a> 浮动组件\n他们以编程方式访问<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">rendered</a>.</p>\n\n<p>对于浮动<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>组件被添加到一个容器中，\nZIndexManager首先回收第一个父类的浮动状态,\n如果没有浮动层,全局<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a>就被使用</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> and <a href=\"#!/api/Ext.Component-property-zIndexParent\" rel=\"Ext.Component-property-zIndexParent\" class=\"docClass\">zIndexParent</a></p>\n</div></div></div><div id='property-zIndexParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-property-zIndexParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-property-zIndexParent' class='name expandable'>zIndexParent</a><span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a></span><strong class='readonly signature'>readonly</strong></div><div class='description'><div class='short'>只存在于被插入的floating浮动组件作为子项的容器，\n有一个浮动的容器包含在其中。 ...</div><div class='long'><p>只存在于被插入的<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动组件作为子项的容器，\n有一个浮动的容器包含在其中。</p>\n\n<p>对于<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动组件是一个容器的子项，zIndexParent将是一个浮动的顶层容器，\n负责其所有浮动的子类z-index值。\n它提供了<a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a>的Z-索引服务，\n提供其所有的后代浮动组件。</p>\n\n<p>浮动的组件<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">rendered</a>编程方式呈现，\n不会有一个'zIndexParent`属性</p>\n\n<p>例如，在一个窗口这是一个ComboBox的的下拉<a href=\"#!/api/Ext.view.BoundList\" rel=\"Ext.view.BoundList\" class=\"docClass\">BoundList</a> 的窗口，\n它的zIndexParent，上面显示该窗口，无论被放置在窗口的z-index堆栈。</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> and <a href=\"#!/api/Ext.Component-property-zIndexManager\" rel=\"Ext.Component-property-zIndexManager\" class=\"docClass\">zIndexManager</a></p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.Component-method-constructor' class='name expandable'>Ext.form.field.File</a>( <span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Creates new Component. ...</div><div class='long'><p>Creates new Component.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The configuration options may be specified as either:</p>\n\n<ul>\n<li><strong>an element</strong> :它被设置为在内部元件和使用它的id作为组分的id</li>\n<li><strong>a string</strong> : 它被假定为是一个现有元素的id和被用作组件id</li>\n<li><strong>anything else</strong> : 它被假定为是一个标准的配置对象，并且被施加到该组件</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.AbstractComponent-method-constructor' rel='Ext.AbstractComponent-method-constructor' class='docClass'>Ext.AbstractComponent.constructor</a></p></div></div></div><div id='method-addChildEls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.ElementContainer' rel='Ext.util.ElementContainer' class='defined-in docClass'>Ext.util.ElementContainer</a><br/><a href='source/ElementContainer.html#Ext-util-ElementContainer-method-addChildEls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.ElementContainer-method-addChildEls' class='name expandable'>addChildEls</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>此方法添加解析到的每个参数到 childEls 数组. ...</div><div class='long'><p>此方法添加解析到的每个参数到 childEls 数组.</p>\n</div></div></div><div id='method-addClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addClass' class='name expandable'>addClass</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] cls</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>从代表此组件的顶层元素添加 CSS 类. ...</div><div class='long'><p>从代表此组件的顶层元素添加 CSS 类.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1</p>\n        <p>Use <a href=\"#!/api/Ext.AbstractComponent-method-addCls\" rel=\"Ext.AbstractComponent-method-addCls\" class=\"docClass\">addCls</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>添加的 CSS 类名</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>返回此组件让方法可以链接.</p>\n\n</div></li></ul></div></div></div><div id='method-addCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addCls' class='name expandable'>addCls</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] cls</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>从代表此组件的顶层元素添加 CSS 类. ...</div><div class='long'><p>从代表此组件的顶层元素添加 CSS 类.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>添加的 CSS 类名</p>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>返回此组件让方法可以链接.</p>\n\n</div></li></ul></div></div></div><div id='method-addClsWithUI' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addClsWithUI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addClsWithUI' class='name expandable'>addClsWithUI</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] classes, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> skip</span> )</div><div class='description'><div class='short'>添加一个 cls 到 uiCls 数组, 这也将调用 addUIClsToElement 并增加到该组件的所有元素. ...</div><div class='long'><p>添加一个 cls 到 uiCls 数组, 这也将调用 <a href=\"#!/api/Ext.AbstractComponent-method-addUIClsToElement\" rel=\"Ext.AbstractComponent-method-addUIClsToElement\" class=\"docClass\">addUIClsToElement</a> 并增加到该组件的所有元素.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>classes</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>一个字符串或一个字符串数组添加到 uiCls</p>\n</div></li><li><span class='pre'>skip</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(Boolean) skip 设置为 True 跳过添加到类. (通过返回值可以添加到类)</p>\n</div></li></ul></div></div></div><div id='method-addConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>添加配置 ...</div><div class='long'><p>添加配置</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... eventNames</span> )</div><div class='description'><div class='short'>向本Observable可能触发的事件列表中添加指定的事件。 ...</div><div class='long'><p>向本Observable可能触发的事件列表中添加指定的事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventNames</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...<div class='sub-desc'><p>要么是有事件名作为属性，属性值为\n<code>true</code>的对象。例如:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>要么是作为参数的任意个数的事件名。例如:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n</div></li></ul></div></div></div><div id='method-addFocusListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addFocusListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addFocusListener' class='name expandable'>addFocusListener</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Sets up the focus listener on this Component's focusEl if it has one. ...</div><div class='long'><p>Sets up the focus listener on this Component's <a href=\"#!/api/Ext.AbstractComponent\" rel=\"Ext.AbstractComponent\" class=\"docClass\">focusEl</a> if it has one.</p>\n\n\n<p>Form Components which must implicitly participate in tabbing order usually have a naturally focusable\nelement as their <a href=\"#!/api/Ext.AbstractComponent\" rel=\"Ext.AbstractComponent\" class=\"docClass\">focusEl</a>, and it is the DOM event of that recieving focus which drives\nthe Component's onFocus handling, and the DOM event of it being blurred which drives the onBlur handling.</p>\n\n\n<p>If the <a href=\"#!/api/Ext.AbstractComponent\" rel=\"Ext.AbstractComponent\" class=\"docClass\">focusEl</a> is <b>not</b> naturally focusable, then the listeners are only added\nif the <a href=\"#!/api/Ext.FocusManager\" rel=\"Ext.FocusManager\" class=\"docClass\">FocusManager</a> is enabled.</p>\n\n</div></div></div><div id='method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eventName, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>向本对象添加一个事件处理函数，例如:\n\nmyGridPanel.on(\"mouseover\", this.onMouseOver, this);\n\n\n这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:\n\n...</div><div class='long'><p>向本对象添加一个事件处理函数，例如:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>你也能为每个事件处理函数单独指定选项：</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p>也能使用在特定作用域的方法<em>名</em>。注意\n必须指定<code>scope</code>:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>被监听的事件名。\n也可以是属性名字是事件名字的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>事件调用的方法, 或者<em>如果指定了<code>scope</code>，在指定<code>scope</code>的方法</em>名*。\n会被调用，\n参数为<a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a>的参数加上下述<code>options</code>参数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>包含事件处理函数配置的对象。</p>\n\n\n\n\n<p><strong>注意:</strong> 不像ExtJS 3.x, options对象也会作为最后一个参数\n传递给每一个事件处理函数。</p>\n\n\n\n\n<p>这个对象可能包含以下任何一个属性:</p>\n\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>事件触发后，调用事件处理函数延时毫秒数。</p>\n\n</div></li><li><span class='pre'>single</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为true添加一个事件处理函数，只处理下一次触发的事件, 然后移除这个函数。</p>\n\n</div></li><li><span class='pre'>buffer</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>使事件处理函数在<a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a>中调度运行，\n  延时指定的毫秒数。如果事件在这段事件再次触发，\n  原先的事件处理函数<em>不</em>再调用, 新的事件处理函数接替。</p>\n\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><div class='sub-desc'><p>只有当事件在目标Observable上触发时调用事件处理函数,\n  如果事件是从Observable的子类起泡的，<em>不会</em>调用事件处理函数</p>\n\n</div></li><li><span class='pre'>element</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p><strong>这个选项只对绑定在<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>上的监听器有效。</strong>\n  Component的一个属性名，这个属性引用一个待添加监听器的元素</p>\n\n\n\n\n<p>  这个选项在Component构造过程中向<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>的元素添加DOM事件监听器有用。\n  这些元素只有在Component渲染之后才会存在。\n  例如, 向Panel的body中添加click监听器:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p><strong>组合选项</strong></p>\n\n\n\n\n<p>使用options参数, 可以组合不同类型的监听器：</p>\n\n\n\n\n<p>一个延时的一次性监听器：</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n</div></li></ul></div></li></ul></div></div></div><div id='method-addManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addManagedListener' class='name expandable'>addManagedListener</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> opt</span> )</div><div class='description'><div class='short'>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除 ...</div><div class='long'><p>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>添加监听器的目标项。</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li><li><span class='pre'>opt</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的)如果<code>ename</code>参数是事件名,\n这就是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的选项。</p>\n\n</div></li></ul></div></div></div><div id='method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addMember' class='name expandable'>addMember</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> member</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li><li><span class='pre'>member</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='method-addPropertyToState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addPropertyToState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addPropertyToState' class='name expandable'>addPropertyToState</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> propName, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> value]</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>如果不是默认或配置值对象, 保存属性给定的状态. ...</div><div class='long'><p>如果不是默认或配置值对象, 保存属性给定的状态.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>状态对象</p>\n</div></li><li><span class='pre'>propName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>此对象要保存的属性名称.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>状态属性的值 (defaults to <code>this[propName]</code>).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>返回状态对象或当状态是空返回一个新的对象并保存该属性.</p>\n</div></li></ul></div></div></div><div id='method-addStateEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-addStateEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-addStateEvents' class='name expandable'>addStateEvents</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] events</span> )</div><div class='description'><div class='short'>添加事件，这将触发state才可以保存。 ...</div><div class='long'><p>添加事件，这将触发state才可以保存。\n如果第一个参数是一个数组，数组中的每一个元素就是state的事件。\n否则，每个参数传递给该方法的名称是一个state的事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>事件名或者事件组名。</p>\n</div></li></ul></div></div></div><div id='method-addUIClsToElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addUIClsToElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addUIClsToElement' class='name expandable'>addUIClsToElement</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ui</span> )</div><div class='description'><div class='short'>方法, 添加一个特定的 UI + uiCls 到组件元素. ...</div><div class='long'><p>方法, 添加一个特定的 UI + uiCls 到组件元素. 可以覆盖不仅仅是组件元素的 UI.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ui</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>从元素中删除的 UI</p>\n</div></li></ul></div></div></div><div id='method-addUIToElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-addUIToElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-addUIToElement' class='name expandable'>addUIToElement</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Method which adds a specified UI to the components element. ...</div><div class='long'><p>Method which adds a specified UI to the components element.</p>\n</div></div></div><div id='method-addXtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-addXtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addXtype' class='name expandable'>addXtype</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> xtype</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>添加 Xtype ...</div><div class='long'><p>添加 Xtype</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterComponentLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-afterComponentLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-afterComponentLayout' class='name expandable'>afterComponentLayout</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> width, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> height, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> oldWidth, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> oldHeight</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Called by the layout system after the Component has been layed out. ...</div><div class='long'><p>Called by the layout system after the Component has been layed out.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The width that was set</p>\n</div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The height that was set</p>\n</div></li><li><span class='pre'>oldWidth</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The old width. <code>undefined</code> if this was the initial layout.</p>\n</div></li><li><span class='pre'>oldHeight</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The old height. <code>undefined</code> if this was the initial layout.</p>\n</div></li></ul></div></div></div><div id='method-afterHide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-afterHide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-afterHide' class='name expandable'>afterHide</a>( <span class='pre'>[<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>容器隐藏后调用的函数\n\n获取通过相同的回调范围和作用范围`。 ...</div><div class='long'><p>容器隐藏后调用的函数</p>\n\n<p>获取通过相同的回调范围<code>和</code>作用范围`。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterRender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-afterRender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-afterRender' class='name expandable'>afterRender</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>允许完成渲染之后添加行为。在这个阶段，组件的元素\n根据配置已经有了样式, 已经添加了任意CSS类名，\n具有配置的可见性和启用状态。 ...</div><div class='long'><p>允许完成渲染之后添加行为。在这个阶段，组件的元素\n根据配置已经有了样式, 已经添加了任意CSS类名，\n具有配置的可见性和启用状态。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-afterSetPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-afterSetPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-afterSetPosition' class='name expandable'>afterSetPosition</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> x, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> y</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Template method called after a Component has been positioned. ...</div><div class='long'><p>Template method called after a Component has been positioned.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-afterShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-afterShow' class='name expandable'>afterShow</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> animateTarget], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>组件显示后调用\n\n相同的参数被传递 ...</div><div class='long'><p>组件显示后调用</p>\n\n<p>相同的参数被传递</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animateTarget</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-alignTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-alignTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-alignTo' class='name expandable'>alignTo</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> element, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> position], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[] offsets]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>将此浮动组件对齐到指定的元素(element) ...</div><div class='long'><p>将此浮动组件对齐到指定的元素(element)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>element</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要对齐的元素或者 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>. 如果此参数为组件,则其必须是一个 component 实例.\n如果是一个字符串形式的id, 将被当做元素 element 的 id.</p>\n</div></li><li><span class='pre'>position</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>要对齐的位置\n(请参考 <a href=\"#!/api/Ext.dom.Element-method-alignTo\" rel=\"Ext.dom.Element-method-alignTo\" class=\"docClass\">Ext.Element.alignTo</a> 了解更多细节).</p>\n<p>Defaults to: <code>&quot;tl-bl?&quot;</code></p></div></li><li><span class='pre'>offsets</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[] (optional)<div class='sub-desc'><p>位置的偏移,格式为 [x, y]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-animate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-animate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-animate' class='name expandable'>animate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>在 this 这个对象上执行自定义动画. ...</div><div class='long'><p>在 this 这个对象上执行自定义动画.</p>\n\n<p>动画方法适用于 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a> 类和 <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> 类.\n它在指定的时间内,对this对象的特定属性进行动画.</p>\n\n<p>唯一的参数是一个配置对象, 该对象定义了开始属性值, 结束属性值,以及描述时间线的属性.</p>\n\n<h3>对一个 <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> 执行动画</h3>\n\n<p>当一个元素进行动画时, 下列的属性都可定义在 <code>from</code>, <code>to</code>, 以及 <code>keyframe</code> 这几个配置对象中:</p>\n\n<ul>\n<li><p><code>x</code> - 页面 X 位置,单位:像素.</p></li>\n<li><p><code>y</code> - 页面 Y 位置,单位:像素.</p></li>\n<li><p><code>left</code> - 元素的 CSS <code>left</code> 值. 必须指定单位(比如: \"6px\").</p></li>\n<li><p><code>top</code> - 元素的 CSS <code>top</code> 值. 必须指定单位(比如: \"6px\").</p></li>\n<li><p><code>width</code> - 元素的 CSS <code>width</code> 值. 必须指定单位(比如: \"6px\").</p></li>\n<li><p><code>height</code> - 元素的 CSS <code>height</code> 值. 必须指定单位(比如: \"6px\").</p></li>\n<li><p><code>scrollLeft</code> - 元素的 <code>scrollLeft</code> 值.</p></li>\n<li><p><code>scrollTop</code> - 元素的 <code>scrollLeft</code> 值.</p></li>\n<li><p><code>opacity</code> - 元素的 <code>opacity</code> 值. 透明度,值只能位于 <code>0</code> 和 <code>1</code>之间.</p></li>\n</ul>\n\n\n<p><strong>需要注意的是, 如果动画一个被 Ext Component 所使用的元素,却不以某种方式通知组件Component 元素改变过后的状态,\n可能会导致错误的 Component 行为.\n这是因为 Component会继续使用元素旧的状态. 想要规避这个问题, 直接对Components 特定的属性值进行动画即可(而不要动画其内部的元素).</strong></p>\n\n<h3>Animating a <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a></h3>\n\n<p>当组件进行动画的时候, 下列的属性都可定义在 <code>from</code>, <code>to</code>, and <code>keyframe</code> 这几个配置对象中:</p>\n\n<ul>\n<li><p><code>x</code> - 组件在页面内的 X 位置,单位:像素.</p></li>\n<li><p><code>y</code> - 组件在页面内的 Y 位置,单位:像素.</p></li>\n<li><p><code>left</code> - 组件的  <code>left</code> 值,单位:像素.</p></li>\n<li><p><code>top</code> - 组件的  <code>top</code> 值,单位:像素.</p></li>\n<li><p><code>width</code> - 组件的  <code>width</code> 值,单位:像素.</p></li>\n<li><p><code>height</code> - 组件的  <code>height</code> 值,单位:像素.</p></li>\n<li><p><code>dynamic</code> - 指定为 true, 则动画的每一帧都会 更新组件的布局 (如果是容器的话).\n<em>需要注意,每次组件大小改变,立即就重新进行布局是一种昂贵的操作.请根据实际需要进行取舍</em></p></li>\n</ul>\n\n\n<p>要将一个 Window 通过动画效果改变大小, 确保其内部的布局,以及所有的阴影都正确,代码如下:</p>\n\n<pre><code>myWindow = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {\n    title: 'Test Component animation',\n    width: 500,\n    height: 300,\n    layout: {\n        type: 'hbox',\n        align: 'stretch'\n    },\n    items: [{\n        title: 'Left: 33%',\n        margins: '5 0 5 5',\n        flex: 1\n    }, {\n        title: 'Left: 66%',\n        margins: '5 5 5 5',\n        flex: 2\n    }]\n});\nmyWindow.show();\nmyWindow.header.el.on('click', function() {\n    myWindow.animate({\n        to: {\n            width: (myWindow.getWidth() == 500) ? 700 : 500,\n            height: (myWindow.getHeight() == 300) ? 400 : 300,\n        }\n    });\n});\n</code></pre>\n\n<p>基于效率和性能的考虑, 默认情况下, Window 的内部布局只在其达到 <code>\"to\"</code> 所指定的大小时才进行刷新.\n如果需要动态更新 Window 的子组件, 可以指定动画的属性 <code>dynamic: true</code> ,\n此时两个子item在动画过程中都保持其比例.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>一个对象,包含动画相关的属性,这些属性包括: 指定起始状态,结束状态,以及动画的时间线 相关的值.\n下面所列出的属性中,只有 <strong><code>to</code></strong> 是强制必须有的.</p>\n\n<p>config的属性值包括:</p>\n<ul><li><span class='pre'>from</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>一个对象,指定动画开始时的相关CSS属性值. 如果没有指定,则默认使用元素当前实际的值.\n实际的属性可能受此对象前面的动画所影响. 参见下面的元素与组件动画小节.</p>\n</div></li><li><span class='pre'>to</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>一个对象,指定动画结束时需要达到的相关CSS属性值.</p>\n</div></li><li><span class='pre'>duration</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>每次动画的持续时间，单位: 毫秒 <strong> milliseconds</strong>.</p>\n</div></li><li><span class='pre'>easing</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>一个字符串值.用于描述 如何从默认的线下 变为 非线性 的速率的类型.\n其值 可以 是下列英文字符串 之一:</p>\n\n<ul>\n<li>ease</li>\n<li>easeIn 开始慢,随后加速</li>\n<li>easeOut 开始快,随后减速</li>\n<li>easeInOut</li>\n<li>backIn</li>\n<li>backOut</li>\n<li>elasticIn (弹性in?)</li>\n<li>elasticOut (弹性out?)</li>\n<li>bounceIn (反弹进入?)</li>\n<li>bounceOut (反弹退出?)</li>\n</ul>\n\n</div></li><li><span class='pre'>keyframes</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>关键帧; 此参数是一个描述在时间轴(时间线)中特定点动作属性的对象.\n其包含的属性, 名称是时间轴百分比的数字,对应的值指定在这个点的动画状态.</p>\n</div></li><li><span class='pre'>listeners</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>这是一个标准的 <a href=\"#!/api/Ext.util.Observable-cfg-listeners\" rel=\"Ext.util.Observable-cfg-listeners\" class=\"docClass\">监听器</a> 配置对象,\n可用于在<code>beforeanimate</code> 事件 或者 <code>afteranimate</code> 事件中注入行为.</p>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-applyChildEls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.ElementContainer' rel='Ext.util.ElementContainer' class='defined-in docClass'>Ext.util.ElementContainer</a><br/><a href='source/ElementContainer.html#Ext-util-ElementContainer-method-applyChildEls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.ElementContainer-method-applyChildEls' class='name expandable'>applyChildEls</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> el, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> id</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>私有方法,设置组件内部的元素引用. ...</div><div class='long'><p>私有方法,设置组件内部的元素引用.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>el</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>id</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-applyRenderSelectors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-applyRenderSelectors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-applyRenderSelectors' class='name expandable'>applyRenderSelectors</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Sets references to elements inside the component. ...</div><div class='long'><p>Sets references to elements inside the component. This applies renderSelectors\nas well as childEls.</p>\n</div></div></div><div id='method-applyState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-applyState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-applyState' class='name expandable'>applyState</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state</span> )</div><div class='description'><div class='short'>应用状态对象。这应该在子类中被覆盖处理更复杂的state操作。 ...</div><div class='long'><p>应用状态对象。这应该在子类中被覆盖处理更复杂的state操作。\n 默认应用state属性到当前对象。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>state对象</p>\n</div></li></ul></div></div></div><div id='method-autoSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-autoSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-autoSize' class='name expandable'>autoSize</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href='#!/api/Ext.form.field.Text-method-autoSize' rel='Ext.form.field.Text-method-autoSize' class='docClass'>Ext.form.field.Text.autoSize</a></p></div></div></div><div id='method-batchChanges' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-batchChanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-batchChanges' class='name expandable'>batchChanges</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> fn</span> )</div><div class='description'><div class='short'>用于对修改进行分组的工具方法，使得其在一个单一的事务中触发值变化以防止过多的触发change事件. ...</div><div class='long'><p>用于对修改进行分组的工具方法，使得其在一个单一的事务中触发值变化以防止过多的触发<a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change</a>事件.\n对于表单项有子表单项，并且子表单项作为一组更新时则非常有用。不想容器表单项对于每一个其子表单项的变化\n都去检查其变化状态。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>包含事务代码的函数</p>\n</div></li></ul></div></div></div><div id='method-batchLayouts' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-batchLayouts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-batchLayouts' class='name expandable'>batchLayouts</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )</div><div class='description'><div class='short'>实用的包装, 挂起所有组件的布局为给定的函数作用期限. ...</div><div class='long'><p>实用的包装, 挂起所有组件的布局为给定的函数作用期限.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>要执行的方法.</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the specified function is executed.</p>\n</div></li></ul></div></div></div><div id='method-beforeComponentLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-beforeComponentLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-beforeComponentLayout' class='name expandable'>beforeComponentLayout</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> adjWidth, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> adjHeight</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Occurs before componentLayout is run. ...</div><div class='long'><p>Occurs before componentLayout is run. Returning false from this method will prevent the componentLayout from\nbeing executed.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>adjWidth</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The box-adjusted width that was set</p>\n</div></li><li><span class='pre'>adjHeight</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The box-adjusted height that was set</p>\n</div></li></ul></div></div></div><div id='method-beforeDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-beforeDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-beforeDestroy' class='name expandable'>beforeDestroy</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Invoked before the Component is destroyed. ...</div><div class='long'><p>Invoked before the Component is destroyed.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-beforeSetPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-beforeSetPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-beforeSetPosition' class='name expandable'>beforeSetPosition</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> x, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> y, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> animate</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method called before a Component is positioned. ...</div><div class='long'><p>Template method called before a Component is positioned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>animate</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-beforeShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-beforeShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-beforeShow' class='name expandable'>beforeShow</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>显示之前调用组件。 ...</div><div class='long'><p>显示之前调用组件。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-bubble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-bubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-bubble' class='name expandable'>bubble</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>泡沫起来组件/容器的层次结构，每个组件调用指定的功能。 ...</div><div class='long'><p>泡沫起来组件/容器的层次结构，每个组件调用指定的功能。\n(<em>this</em>)函数调用作用域，将规定的范围或当前组件。该函数的参数将提供的\nargs或当前组件。如果在任何时候，该函数返回false泡沫停止。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>调用的函数</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>函数的作用域,默认当前节点</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> (optional)<div class='sub-desc'><p>调用函数的参数,默认当前组件</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments </span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature'>deprecated</strong><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>调用原来的方法，这是以前的override重写\n\nExt.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n...</div><div class='long'><p>调用原来的方法，这是以前的<a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a>重写</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1</p>\n        <p>版本 使用 <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> 代替.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>参数的参数，数组或'参数'对象\n来自当前方法，例如： <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回调用重写方法的结果。</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>所谓的\"parent\"方法是指当前的方法。 ...</div><div class='long'><p>所谓的\"parent\"方法是指当前的方法。\n这是以前的方法派生或重写(参见 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>)。</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>这可以用来重写如下:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // 调用原来的My.Derived构造\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // 现在提示 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // 调用 My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>然后，它也可以重写静态方法。</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // 调用 My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // 现在提示 40\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>这个参数, 通过当前方法得到数组或者 <code>arguments</code> 对象,\n例如: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>返回调用父类的方法的结果。</p>\n</div></li></ul></div></div></div><div id='method-cancelFocus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-cancelFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-cancelFocus' class='name expandable'>cancelFocus</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>此组件上取消任何递延重点 ...</div><div class='long'><p>此组件上取消任何递延重点</p>\n</div></div></div><div id='method-center' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-center' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-center' class='name expandable'>center</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>将此组件定位到父容器的中心. ...</div><div class='long'><p>将此组件定位到父容器的中心.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-checkChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-checkChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-checkChange' class='name expandable'>checkChange</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>检查表单项自从上次检查后，其值是否变化了\n如果值已经改变，将做一下一些操作：\n\n\n触发change event\n如果validateOnChange配置项启用执行校验，\n如果有效性改变了并触发validitychange event\n...</div><div class='long'><p>检查表单项自从上次检查后，其值是否变化了\n如果值已经改变，将做一下一些操作：</p>\n\n<ol>\n<li>触发<a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change event</a></li>\n<li>如果<a href=\"#!/api/Ext.form.field.Field-cfg-validateOnChange\" rel=\"Ext.form.field.Field-cfg-validateOnChange\" class=\"docClass\">validateOnChange</a>配置项启用执行校验，\n如果有效性改变了并触发<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange event</a></li>\n<li>检查表单项的<a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">dirty state</a>，如果变化了并触发<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange event</a></li>\n</ol>\n\n</div></div></div><div id='method-checkDirty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-checkDirty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-checkDirty' class='name expandable'>checkDirty</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>检查表单项的isDirty状态并且如果自从上次检查后改变了触发dirtychange事件 ...</div><div class='long'><p>检查表单项的<a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">isDirty</a>状态并且如果自从上次检查后改变了触发<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>事件</p>\n</div></div></div><div id='method-clearInvalid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-clearInvalid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-clearInvalid' class='name expandable'>clearInvalid</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>清除该表单项的任何不可用的类型/信息。 ...</div><div class='long'><p>清除该表单项的任何不可用的类型/信息。</p>\n\n<p><strong>注意</strong>：如果值没有能过<em>pass</em>校验，该方法不会引起表单项<a href=\"#!/api/Ext.form.field.Base-method-validate\" rel=\"Ext.form.field.Base-method-validate\" class=\"docClass\">validate</a> 或 <a href=\"#!/api/Ext.form.field.Base-method-isValid\" rel=\"Ext.form.field.Base-method-isValid\" class=\"docClass\">isValid</a>方法，返回'true'。\n所以简单清除表单项的错误不允许<a href=\"#!/api/Ext.form.action.Submit-cfg-clientValidation\" rel=\"Ext.form.action.Submit-cfg-clientValidation\" class=\"docClass\">Ext.form.action.Submit.clientValidation</a>的提交。</p>\n<p>Overrides: <a href='#!/api/Ext.form.field.Field-method-clearInvalid' rel='Ext.form.field.Field-method-clearInvalid' class='docClass'>Ext.form.field.Field.clearInvalid</a></p></div></div></div><div id='method-clearListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-clearListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearListeners' class='name expandable'>clearListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>移除本对象的包括受管理的监听器在内的所有监听器 ...</div><div class='long'><p>移除本对象的包括受管理的监听器在内的所有监听器</p>\n</div></div></div><div id='method-clearManagedListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-clearManagedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-clearManagedListeners' class='name expandable'>clearManagedListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>移除本对象的所有受管理的监听器 ...</div><div class='long'><p>移除本对象的所有受管理的监听器</p>\n</div></div></div><div id='method-cloneConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-cloneConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-cloneConfig' class='name expandable'>cloneConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> overrides</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>克隆当前组件使用原来的配置传入到该实例的默认值。 ...</div><div class='long'><p>克隆当前组件使用原来的配置传入到该实例的默认值。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>overrides</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>覆盖一个新的配置包含任何属性来覆盖在克隆版本。\n可以通过对这个对象的id属性，否则将产生以避免重复。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>此组件克隆的克隆副本</p>\n</div></li></ul></div></div></div><div id='method-constructPlugins' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-constructPlugins' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-constructPlugins' class='name expandable'>constructPlugins</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>确保plugins数组包含完全构建插件实例. ...</div><div class='long'><p>确保plugins数组包含完全构建插件实例. 这个将所有的配置转换成他们相应的实例.</p>\n</div></div></div><div id='method-continueFireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-continueFireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-continueFireEvent' class='name expandable'>continueFireEvent</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> args, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> bubbles</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Continue to fire event. ...</div><div class='long'><p>Continue to fire event.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'>\n</div></li><li><span class='pre'>bubbles</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-convertPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-convertPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-convertPosition' class='name expandable'>convertPosition</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> pos, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> withUnits</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>This method converts an \"{x: x, y: y}\" object to a \"{left: x+'px', top: y+'px'}\" object. ...</div><div class='long'><p>This method converts an \"{x: x, y: y}\" object to a \"{left: x+'px', top: y+'px'}\" object.\nThe returned object contains the styles to set to effect the position. This is\noverridden in RTL mode to be \"{right: x, top: y}\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pos</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>withUnits</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createFileInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-method-createFileInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-method-createFileInput' class='name expandable'>createFileInput</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Creates the file input element. ...</div><div class='long'><p>Creates the file input element. It is inserted into the trigger button component, made\ninvisible, and floated on top of the button's other content so that it will receive the\nbutton's clicks.</p>\n</div></div></div><div id='method-createRelayer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-createRelayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-createRelayer' class='name expandable'>createRelayer</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> newName, [<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> beginEnd]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Creates an event handling function which refires the event from this object as the passed event name. ...</div><div class='long'><p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newName</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>beginEnd</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a> (optional)<div class='sub-desc'><p>The caller can specify on which indices to slice</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>销毁组件. ...</div><div class='long'><p>销毁组件.</p>\n<p>Overrides: <a href='#!/api/Ext.state.Stateful-method-destroy' rel='Ext.state.Stateful-method-destroy' class='docClass'>Ext.state.Stateful.destroy</a></p></div></div></div><div id='method-disable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-disable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-disable' class='name expandable'>disable</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> silent]</span> )</div><div class='description'><div class='short'>禁用. ...</div><div class='long'><p>禁用.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>silent</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>通过设置 true 将解除 'disable' 事件的触发.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-doApplyRenderTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-doApplyRenderTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-doApplyRenderTpl' class='name expandable'>doApplyRenderTpl</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> out, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> values</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Called from the selected frame generation template to insert this Component's inner structure inside the framing stru...</div><div class='long'><p>Called from the selected frame generation template to insert this Component's inner structure inside the framing structure.</p>\n\n<p>When framing is used, a selected frame generation template is used as the primary template of the #getElConfig instead\nof the configured renderTpl. The renderTpl is invoked by this method which is injected into the framing template.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>out</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>values</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-doAutoRender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-doAutoRender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-doAutoRender' class='name expandable'>doAutoRender</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>处理自动渲染。 ...</div><div class='long'><p>处理自动渲染。\n漂浮的组件可能有ownerCt。如果要限制它们，将它们限制在\nownerCt内，并在本地管理z-index。漂浮的组件总是渲染到document.body。</p>\n</div></div></div><div id='method-doComponentLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-doComponentLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-doComponentLayout' class='name expandable'>doComponentLayout</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></div><div class='description'><div class='short'>当你改变这个组件一些东西, 需要重新计算组件的布局, 需要调用此方法. ...</div><div class='long'><p>当你改变这个组件一些东西, 需要重新计算组件的布局, 需要调用此方法.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-doConstrain' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-doConstrain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-doConstrain' class='name expandable'>doConstrain</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> constrainTo]</span> )</div><div class='description'><div class='short'>将此浮动组件移入到一个限制区域. ...</div><div class='long'><p>将此浮动组件移入到一个限制区域.</p>\n\n<p>默认情况下,此组件被限制在其父容器中, 或在其被渲染的元素中.</p>\n\n<p>有两个可选的约束范围的参数:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>constrainTo</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> (optional)<div class='sub-desc'><p>某元素(Element)\n或者此组件将被限制在其中的 <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>.\n默认是此浮动组件将被渲染到其中的元素.</p>\n</div></li></ul></div></div></div><div id='method-enable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-enable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-enable' class='name expandable'>enable</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> silent]</span> )</div><div class='description'><div class='short'>启用组件 ...</div><div class='long'><p>启用组件</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>silent</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>通过设置 true 将解除 'enable' 事件的触发.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-enableBubble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-enableBubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-enableBubble' class='name expandable'>enableBubble</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] eventNames</span> )</div><div class='description'><div class='short'>通过调用this.getBubbleTarget()（如果存在）允许本Observable对象触发的事件沿着继承体系起泡\n在Observable基类中没有实现类。 ...</div><div class='long'><p>通过调用<code>this.getBubbleTarget()</code>（如果存在）允许本Observable对象触发的事件沿着继承体系起泡\n在Observable基类中没有实现类。</p>\n\n<p>这通常被Ext.Components用来将事件起泡到它的容器。\n见<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>。Ext.Component中的默认实现\n返回Component的直接容器。但是如果需要一个明显的target, 它可以被重写\n以更快地访问需要的target。</p>\n\n<p>使用范例:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-override\" rel=\"Ext-method-override\" class=\"docClass\">Ext.override</a>(<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>, {\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent : <a href=\"#!/api/Ext.Function-method-createSequence\" rel=\"Ext.Function-method-createSequence\" class=\"docClass\">Ext.Function.createSequence</a>(Ext.form.field.Base.prototype.initComponent, function() {\n        this.enableBubble('change');\n    }),\n\n    //  We know that we want Field's events to bubble directly to the FormPanel.\n    getBubbleTarget : function() {\n        if (!this.formPanel) {\n            this.formPanel = this.findParentByType('form');\n        }\n        return this.formPanel;\n    }\n});\n\nvar myForm = new Ext.formPanel({\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventNames</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>待起泡的事件名，或者事件名数组。</p>\n</div></li></ul></div></div></div><div id='method-ensureAttachedToBody' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-ensureAttachedToBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-ensureAttachedToBody' class='name expandable'>ensureAttachedToBody</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> runLayout]</span> )</div><div class='description'><div class='short'>确保组件添加到document.body。如果组件\n渲染到了Ext.getDetachedBody, 组件然后被附加到document.body。 ...</div><div class='long'><p>确保组件添加到<code>document.body</code>。如果组件\n渲染到了Ext.getDetachedBody, 组件然后被附加到<code>document.body</code>。\n重建所有配置的位置。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>runLayout</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true运行组件的布局。</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-extend' class='name expandable'>extend</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>拓展 ...</div><div class='long'><p>拓展</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul></div></div></div><div id='method-extractFileInput' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-extractFileInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-extractFileInput' class='name expandable'>extractFileInput</a>( <span class='pre'></span> ) : HTMLElement</div><div class='description'><div class='short'>仅当实例的isFileUpload方法返回true才有用。返回file input DOM元素的引用。这个input将会附加到表单的提交表单上\n并且不返回任何值，因此这个方法是创建一个file input 的别名。 ...</div><div class='long'><p>仅当实例的<a href=\"#!/api/Ext.form.field.Field-method-isFileUpload\" rel=\"Ext.form.field.Field-method-isFileUpload\" class=\"docClass\">isFileUpload</a>方法返回true才有用。返回file input DOM元素的引用。这个input将会附加到表单的提交表单上\n并且不返回任何值，因此这个方法是创建一个file input 的别名。\nOnly relevant if the instance's <a href=\"#!/api/Ext.form.field.Field-method-isFileUpload\" rel=\"Ext.form.field.Field-method-isFileUpload\" class=\"docClass\">isFileUpload</a> method returns true. Returns a reference to the file input\nDOM element holding the user's selected file. The input will be appended into the submission form and will not be\nreturned, so this method should also create a replacement.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-findParentBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-findParentBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-findParentBy' class='name expandable'>findParentBy</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn</span> ) : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></div><div class='description'><div class='short'>找一个容器上面这个组件在任何级别的自定义函数。 ...</div><div class='long'><p>找一个容器上面这个组件在任何级别的自定义函数。\n如果传递的函数返回true，容器将被退回。</p>\n\n<p>请参见<a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a>方法</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>自定义函数调用的参数(container, this component).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></span><div class='sub-desc'><p>第一个容器的自定义函数返回true</p>\n</div></li></ul></div></div></div><div id='method-findParentByType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-findParentByType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-findParentByType' class='name expandable'>findParentByType</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> xtype</span> ) : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></div><div class='description'><div class='short'>找一个容器上面这个组件在任何级别的xtype或类\n\n请参阅up该方法 ...</div><div class='long'><p>找一个容器上面这个组件在任何级别的xtype或类</p>\n\n<p>请参阅<a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a>该方法</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><div class='sub-desc'><p>一个组件的xtype的xtype串直接的组件或类</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></span><div class='sub-desc'><p>匹配给定的xtype类的第一个容器</p>\n</div></li></ul></div></div></div><div id='method-finishRender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-finishRender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-finishRender' class='name expandable'>finishRender</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> containerIdx</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>This method visits the rendered component tree in a \"top-down\" order. ...</div><div class='long'><p>This method visits the rendered component tree in a \"top-down\" order. That is, this\ncode runs on a parent component before running on a child. This method calls the\n<a href=\"#!/api/Ext.util.Renderable-method-onRender\" rel=\"Ext.util.Renderable-method-onRender\" class=\"docClass\">onRender</a> method of each component.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>containerIdx</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The index into the Container items of this Component.</p>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>... args</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>使用传递过来的参数(去掉事件名，加上传递给addListener的options对象\n)触发指定的事件。 ...</div><div class='long'><p>使用传递过来的参数(去掉事件名，加上传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的<code>options</code>对象\n)触发指定的事件。</p>\n\n<p>通过调用<a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>，一个事件\n能被设置为沿着Observable的继承体系(见<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>)向上起泡。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>待触发的事件名。</p>\n</div></li><li><span class='pre'>args</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...<div class='sub-desc'><p>传递给事件处理函数的可变数量的参数</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果任何一个事件处理函数返回false，就返回false，否则返回true。</p>\n</div></li></ul></div></div></div><div id='method-focus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-focus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-focus' class='name expandable'>focus</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> selectText], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> delay]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>聚焦此组件。 ...</div><div class='long'><p>聚焦此组件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selectText</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果适用，true也可以选择这个组件中的文本</p>\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>延迟焦点的毫秒数（true:10毫秒）。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>聚焦的Component。通常的 <code>this</code>的组件。\n一些容器可能委托焦点到的(<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>可以做到这一点通过他们\n的<a href=\"#!/api/Ext.window.Window-cfg-defaultFocus\" rel=\"Ext.window.Window-cfg-defaultFocus\" class=\"docClass\">defaultFocus</a> 的配置选项。</p>\n</div></li></ul></div></div></div><div id='method-forceComponentLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-forceComponentLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-forceComponentLayout' class='name expandable'>forceComponentLayout</a>( <span class='pre'></span> )<strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>Forces this component to redo its componentLayout. ...</div><div class='long'><p>Forces this component to redo its componentLayout.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>Use <a href=\"#!/api/Ext.AbstractComponent-method-updateLayout\" rel=\"Ext.AbstractComponent-method-updateLayout\" class=\"docClass\">updateLayout</a> instead.</p>\n\n        </div>\n</div></div></div><div id='method-getActiveAnimation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-getActiveAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-getActiveAnimation' class='name expandable'>getActiveAnimation</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>返回此元素当前是否有正在进行或在队列中的动画效果, 没有则返回 false. ...</div><div class='long'><p>返回此元素当前是否有正在进行或在队列中的动画效果, 没有则返回 false.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果元素有正在进行的动画效果则返回 true, 否则返回 false</p>\n\n</div></li></ul></div></div></div><div id='method-getActiveError' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getActiveError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getActiveError' class='name expandable'>getActiveError</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>获取此组件的主动错误信息，如果有的话。 ...</div><div class='long'><p>获取此组件的主动错误信息，如果有的话。\n这不会触发其拥有的验证，它只返回组件可能已经持有的任何消息。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>组件的主动错误消息；如果没有错误，返回空字符串。</p>\n</div></li></ul></div></div></div><div id='method-getActiveErrors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getActiveErrors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getActiveErrors' class='name expandable'>getActiveErrors</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</div><div class='description'><div class='short'>取得任何应用到域的当前主动错误消息的数组。这不触发其拥有的验证，它只返回组件可能已经持有的任何消息。 ...</div><div class='long'><p>取得任何应用到域的当前主动错误消息的数组。这不触发其拥有的验证，它只返回组件可能已经持有的任何消息。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><div class='sub-desc'><p>组件上的错误消息，如果没有错误，返回一个空数组。</p>\n</div></li></ul></div></div></div><div id='method-getAutoId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getAutoId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getAutoId' class='name expandable'>getAutoId</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getBodyColspan' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getBodyColspan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getBodyColspan' class='name expandable'>getBodyColspan</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>计算对body单元格合并的值 - 单元格包含输入字段。 ...</div><div class='long'><p>计算对body单元格合并的值 - 单元格包含输入字段。</p>\n\n<p>该字段的表结构包含4列：</p>\n</div></div></div><div id='method-getBox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-getBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-getBox' class='name expandable'>getBox</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> local]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>获取当前框测量相关元件的组件。 ...</div><div class='long'><p>获取当前框测量相关元件的组件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>local</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果真正的元素的左侧和顶部，而不是页面的XY返回。</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>对象的格式{X，Y，宽度，高度}</p>\n</div></li></ul></div></div></div><div id='method-getBubbleParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-getBubbleParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-getBubbleParent' class='name expandable'>getBubbleParent</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Gets the bubbling parent for an Observable ...</div><div class='long'><p>Gets the bubbling parent for an Observable</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a></span><div class='sub-desc'><p>The bubble parent. null is returned if no bubble target exists</p>\n</div></li></ul></div></div></div><div id='method-getBubbleTarget' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getBubbleTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getBubbleTarget' class='name expandable'>getBubbleTarget</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></div><div class='description'><div class='short'>为Observable的fireEvent方法提供链接, 它沿着继承结构进行冒泡操作. ...</div><div class='long'><p>为Observable的fireEvent方法提供链接, 它沿着继承结构进行冒泡操作.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></span><div class='sub-desc'><p>拥有当前组件的容器.</p>\n</div></li></ul></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>得到配置项 ...</div><div class='long'><p>得到配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li></ul></div></div></div><div id='method-getConstrainVector' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-getConstrainVector' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-getConstrainVector' class='name expandable'>getConstrainVector</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> constrainTo]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]<strong class='private signature'>private</strong></div><div class='description'><div class='short'>私有方法,获取此浮动组件能移动的范围(x/y 偏移) ...</div><div class='long'><p>私有方法,获取此浮动组件能移动的范围(x/y 偏移)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>constrainTo</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> (optional)<div class='sub-desc'><p>元素或者 此组件将被限制的<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]</span><div class='sub-desc'><p>限制的 x/y 范围</p>\n</div></li></ul></div></div></div><div id='method-getEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getEl' class='name expandable'>getEl</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></div><div class='description'><div class='short'>提取代表这个组件的顶层元素. ...</div><div class='long'><p>提取代表这个组件的顶层元素.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getErrors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-getErrors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-getErrors' class='name expandable'>getErrors</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</div><div class='description'><div class='short'>根据表单项的校验规则对值进行校验，并且为所有校验失败的情况返回 一个出错数组。校验规则以如下顺序进行处理:\n\n\n为表单项指定的校验器\n\n校验器提供了一个定制和复用校验规则的方法。 ...</div><div class='long'><p>根据表单项的校验规则对值进行校验，并且为所有校验失败的情况返回 一个出错数组。校验规则以如下顺序进行处理:</p>\n\n<ol>\n<li><p><em>为表单项指定的校验器</em></p>\n\n<p>校验器提供了一个定制和复用校验规则的方法。\n 如果表单项配置了<code><a href=\"#!/api/Ext.form.field.Text-cfg-validator\" rel=\"Ext.form.field.Text-cfg-validator\" class=\"docClass\">validator</a></code>函数，它将会传递当前表单项值。<code><a href=\"#!/api/Ext.form.field.Text-cfg-validator\" rel=\"Ext.form.field.Text-cfg-validator\" class=\"docClass\">validator</a></code>函数\n 期望返回如下值：</p>\n\n<ul>\n<li>Boolean <code>true</code> 如果值是有效的(校验继续执行)</li>\n<li>如果无效返回返回一个代表无效信息的字符串(校验终止)</li>\n</ul>\n</li>\n<li><strong>基本校验</strong></li>\n</ol>\n\n\n<p>如果<code><a href=\"#!/api/Ext.form.field.Text-cfg-validator\" rel=\"Ext.form.field.Text-cfg-validator\" class=\"docClass\">validator</a></code> 没有停止，基本校验过程如下：\n- <code><a href=\"#!/api/Ext.form.field.Text-cfg-allowBlank\" rel=\"Ext.form.field.Text-cfg-allowBlank\" class=\"docClass\">allowBlank</a></code> : (无效消息 = <code><a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a></code>)</p>\n\n<pre><code>    依赖于 `<a href=\"#!/api/Ext.form.field.Text-cfg-allowBlank\" rel=\"Ext.form.field.Text-cfg-allowBlank\" class=\"docClass\">allowBlank</a>` 的配置，一个空的表单项将会导致校验操作在这一步结束，然后按照情况返回一个布尔型的 true或者false。\n</code></pre>\n\n<ul>\n<li><code><a href=\"#!/api/Ext.form.field.Text-cfg-minLength\" rel=\"Ext.form.field.Text-cfg-minLength\" class=\"docClass\">minLength</a></code> : (无效消息 = <code><a href=\"#!/api/Ext.form.field.Text-cfg-minLengthText\" rel=\"Ext.form.field.Text-cfg-minLengthText\" class=\"docClass\">minLengthText</a></code>)\n  如果传入的值不符合 <code><a href=\"#!/api/Ext.form.field.Text-cfg-minLength\" rel=\"Ext.form.field.Text-cfg-minLength\" class=\"docClass\">minLength</a></code> 指定的长度，校验停止。</li>\n<li><code><a href=\"#!/api/Ext.form.field.Text-cfg-maxLength\" rel=\"Ext.form.field.Text-cfg-maxLength\" class=\"docClass\">maxLength</a></code> : (无效消息 = <code><a href=\"#!/api/Ext.form.field.Text-cfg-maxLengthText\" rel=\"Ext.form.field.Text-cfg-maxLengthText\" class=\"docClass\">maxLengthText</a></code>)\n  如果传入的值不符合 <code><a href=\"#!/api/Ext.form.field.Text-cfg-maxLength\" rel=\"Ext.form.field.Text-cfg-maxLength\" class=\"docClass\">maxLength</a></code> 指定的长度，校验停止。</li>\n<li><p><strong>预先配置的校验类型(VTypes)</strong></p>\n\n<p>如果以上校验步骤都没有终止，一个配置了 <code><a href=\"#!/api/Ext.form.field.Text-cfg-vtype\" rel=\"Ext.form.field.Text-cfg-vtype\" class=\"docClass\">vtype</a></code> 的表单项将会执行对应的VTypes 校验函数。\n如果无效，要么表单项的 <code><a href=\"#!/api/Ext.form.field.Text-cfg-vtypeText\" rel=\"Ext.form.field.Text-cfg-vtypeText\" class=\"docClass\">vtypeText</a></code>，要么VTypes的vtype Text属性将会被用作非法消息。\n按键将会根据VTypes 的vtype Mask属性被过滤。</p></li>\n<li><p><strong>表单项指定的正则测试</strong></p>\n\n<p>如果以上校验步骤都没有终止，为表单项配置的 <code><a href=\"#!/api/Ext.form.field.Text-cfg-regex\" rel=\"Ext.form.field.Text-cfg-regex\" class=\"docClass\">regex</a></code> 测试将会执行。 此测试的无效状态消息用 <code><a href=\"#!/api/Ext.form.field.Text-cfg-regexText\" rel=\"Ext.form.field.Text-cfg-regexText\" class=\"docClass\">regexText</a></code> 配置。</p></li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要校验的值。 如果没有传递任何东西，将会使用处理过的原始值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><div class='sub-desc'><p>所有校验错误的数组</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-getErrors' rel='Ext.form.field.Field-method-getErrors' class='docClass'>Ext.form.field.Field.getErrors</a></p></div></div></div><div id='method-getFieldLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getFieldLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getFieldLabel' class='name expandable'>getFieldLabel</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>返回域的标签。默认简单地返回fieldLabel配置。可被复写。 ...</div><div class='long'><p>返回域的标签。默认简单地返回<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>配置。可被复写。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>已配的域标签，如果没定义返回空字符串。</p>\n</div></li></ul></div></div></div><div id='method-getFocusEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getFocusEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getFocusEl' class='name expandable'>getFocusEl</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Returns the focus holder element associated with this Component. ...</div><div class='long'><p>Returns the focus holder element associated with this Component. At the Component base class level, this function returns <code>undefined</code>.</p>\n\n\n<p>Subclasses which use embedded focusable elements (such as Window, Field and Button) should override this for use by the <a href=\"#!/api/Ext.AbstractComponent-event-focus\" rel=\"Ext.AbstractComponent-event-focus\" class=\"docClass\">focus</a> method.</p>\n\n\n<p>Containers which need to participate in the <a href=\"#!/api/Ext.FocusManager\" rel=\"Ext.FocusManager\" class=\"docClass\">FocusManager</a>'s navigation and Container focusing scheme also\nneed to return a focusEl, although focus is only listened for in this case if the <a href=\"#!/api/Ext.FocusManager\" rel=\"Ext.FocusManager\" class=\"docClass\">FocusManager</a> is <a href=\"#!/api/Ext.FocusManager-method-enable\" rel=\"Ext.FocusManager-method-enable\" class=\"docClass\">enable</a>d.</p>\n\n</div></div></div><div id='method-getFrameInfo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-getFrameInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-getFrameInfo' class='name expandable'>getFrameInfo</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>On render, reads an encoded style attribute, \"background-position\" from the style of this Component's element. ...</div><div class='long'><p>On render, reads an encoded style attribute, \"background-position\" from the style of this Component's element.\nThis information is memoized based upon the CSS class name of this Component's element.\nBecause child Components are rendered as textual HTML as part of the topmost Container, a dummy div is inserted\ninto the document to receive the document element's CSS class name, and therefore style attributes.</p>\n</div></div></div><div id='method-getFrameTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-getFrameTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-getFrameTpl' class='name expandable'>getFrameTpl</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> table</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>table</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>获取组件的基本元素当前高度. ...</div><div class='long'><p>获取组件的基本元素当前高度.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>获取此组件的 ID. ...</div><div class='long'><p>获取此组件的 ID. 如果尚未设置则自动生成一个 ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>得到初始化配置项 ...</div><div class='long'><p>得到初始化配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li></ul></div></div></div><div id='method-getInputId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-getInputId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-getInputId' class='name expandable'>getInputId</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>返回输入的ID给表单，如果inputId函数输入为空值，则自动生成一个ID号。 ...</div><div class='long'><p>返回输入的ID给表单，如果<a href=\"#!/api/Ext.form.field.Base-cfg-inputId\" rel=\"Ext.form.field.Base-cfg-inputId\" class=\"docClass\">inputId</a>函数输入为空值，则自动生成一个ID号。</p>\n<p>Overrides: <a href='#!/api/Ext.form.Labelable-method-getInputId' rel='Ext.form.Labelable-method-getInputId' class='docClass'>Ext.form.Labelable.getInputId</a></p></div></div></div><div id='method-getInsertPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-getInsertPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-getInsertPosition' class='name expandable'>getInsertPosition</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement position</span> ) : HTMLElement</div><div class='description'><div class='short'>本函数使用传递给onRender的位置参数并返回一个\nDOM元素，你能在insertBefore中使用它。 ...</div><div class='long'><p>本函数使用传递给onRender的位置参数并返回一个\nDOM元素，你能在insertBefore中使用它。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>position</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement<div class='sub-desc'><p>索引, 元素id或者\n你想把这个组件放在它前面的元素</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>在insertBefore中使用的DOM元素</p>\n</div></li></ul></div></div></div><div id='method-getLabelStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getLabelStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getLabelStyle' class='name expandable'>getLabelStyle</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>得到labelEl的任何标签样式 ...</div><div class='long'><p>得到labelEl的任何标签样式</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>标签样式</p>\n</div></li></ul></div></div></div><div id='method-getLabelableRenderData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-getLabelableRenderData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-getLabelableRenderData' class='name expandable'>getLabelableRenderData</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>生成域装饰渲染模板的参数。 ...</div><div class='long'><p>生成域装饰<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">渲染模板</a>的参数。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>模板参数</p>\n</div></li></ul></div></div></div><div id='method-getLoader' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getLoader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getLoader' class='name expandable'>getLoader</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a></div><div class='description'><div class='short'>获取这个组件的 Ext.ComponentLoader . ...</div><div class='long'><p>获取这个组件的 <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a> .</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a></span><div class='sub-desc'><p>加载器实例, 如果不存在则返回 null.</p>\n</div></li></ul></div></div></div><div id='method-getModelData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-getModelData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-getModelData' class='name expandable'>getModelData</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>当Ext.form.Basic.updateRecord调用时,返回表单项保存到Ext.data.Model实例的值.一般来说这个对象为一\n个简单的名值对，名字为表单项的name，值为当前数据值。更多高级的表单项实现返回多个名值对。 ...</div><div class='long'><p>当<a href=\"#!/api/Ext.form.Basic-method-updateRecord\" rel=\"Ext.form.Basic-method-updateRecord\" class=\"docClass\">Ext.form.Basic.updateRecord</a>调用时,返回表单项保存到<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>实例的值.一般来说这个对象为一\n个简单的名值对，名字为表单项的<a href=\"#!/api/Ext.form.field.Field-method-getName\" rel=\"Ext.form.field.Field-method-getName\" class=\"docClass\">name</a>，值为当前数据值。更多高级的表单项实现返回多个名值对。\n返回的值将会保存到Model中相应的表单项名称里。</p>\n\n<p>注意这个方法返回的值不能确保成功校验了<a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validated</a>.\nNote that the values returned from this method are not guaranteed to have been successfully <a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validated</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>提交参数名字与值的映射。每一个值都应为一个字符串或者如果这个参数名含有多个值应当是一个字符串数组。\n如果提交没有参数也可以返回null</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>返回表单项的name属性。当在form submit()中包含\n表单项的值时用作参数名称。 ...</div><div class='long'><p>返回表单项的<a href=\"#!/api/Ext.form.field.Field-cfg-name\" rel=\"Ext.form.field.Field-cfg-name\" class=\"docClass\">name</a>属性。当在<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">form submit()</a>中包含\n表单项的值时用作参数名称。</p>\n</div></div></div><div id='method-getOverflowStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getOverflowStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getOverflowStyle' class='name expandable'>getOverflowStyle</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Returns the CSS style object which will set the Component's scroll styles. ...</div><div class='long'><p>Returns the CSS style object which will set the Component's scroll styles. This must be applied\nto the <a href=\"#!/api/Ext.AbstractComponent\" rel=\"Ext.AbstractComponent\" class=\"docClass\">target element</a>.</p>\n</div></div></div><div id='method-getPlugin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getPlugin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getPlugin' class='name expandable'>getPlugin</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> pluginId</span> ) : <a href=\"#!/api/Ext.AbstractPlugin\" rel=\"Ext.AbstractPlugin\" class=\"docClass\">Ext.AbstractPlugin</a></div><div class='description'><div class='short'>获取指定的 pluginId 的已绑定到组件的插件. ...</div><div class='long'><p>获取指定的 pluginId 的已绑定到组件的插件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pluginId</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.AbstractPlugin\" rel=\"Ext.AbstractPlugin\" class=\"docClass\">Ext.AbstractPlugin</a></span><div class='sub-desc'><p>插件实例.</p>\n</div></li></ul></div></div></div><div id='method-getPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-getPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-getPosition' class='name expandable'>getPosition</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> local]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]</div><div class='description'><div class='short'>获取组件相关元素当前的xy坐标 ...</div><div class='long'><p>获取组件相关元素当前的xy坐标</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>local</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果为true就返回元素的左侧和顶部位置,而不会返回页面的xy坐标</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]</span><div class='sub-desc'><p>元素的xy坐标(例如:[100,200])</p>\n</div></li></ul></div></div></div><div id='method-getRawValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-getRawValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-getRawValue' class='name expandable'>getRawValue</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>返回表单项的原始字符串值，没有执行任何转换和验证。如果这个表单项已经渲染了，获得输入元素的当前值，\n如果值为emptyText则忽略这个值。为了获得一个合法和转换后的值参见getValue。 ...</div><div class='long'><p>返回表单项的原始字符串值，没有执行任何转换和验证。如果这个表单项已经渲染了，获得输入元素的当前值，\n如果值为<a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a>则忽略这个值。为了获得一个合法和转换后的值参见<a href=\"#!/api/Ext.form.field.Text-method-getValue\" rel=\"Ext.form.field.Text-method-getValue\" class=\"docClass\">getValue</a>。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>当前表单项原始字符串值</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Base-method-getRawValue' rel='Ext.form.field.Base-method-getRawValue' class='docClass'>Ext.form.field.Base.getRawValue</a></p></div></div></div><div id='method-getSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getSize' class='name expandable'>getSize</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>获取这个组件的底层元素的当前大小. ...</div><div class='long'><p>获取这个组件的底层元素的当前大小.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>一个包含元素的大小对象 {width: (元素宽度), height: (元素高度)}</p>\n</div></li></ul></div></div></div><div id='method-getSizeModel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getSizeModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getSizeModel' class='name expandable'>getSizeModel</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> ownerCtSizeModel</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>返回一个对象, 描述如何管理这个组件的宽度和高度. ...</div><div class='long'><p>返回一个对象, 描述如何管理这个组件的宽度和高度.\n这些对象是共享的, 不应该被修改.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ownerCtSizeModel</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>，此组件的 size model.</p>\n<ul><li><span class='pre'>width</span> : <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a><div class='sub-desc'><p>The <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">size model</a> for the width.</p>\n</div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a><div class='sub-desc'><p>The <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">size model</a> for the height.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-getState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>为AbstractComponent类提供的默认状态收集方法. ...</div><div class='long'><p>为AbstractComponent类提供的默认状态收集方法.</p>\n\n<p>此方法返回尺寸设置如 <code>flex</code>, <code>anchor</code>, <code>width</code> 和 <code>height</code> 随着 <code>collapsed</code>\n状态.</p>\n\n<p>子类实现更复杂的状态应该调用父类的实现,\n如果基础的状态需要保存, 要将他们的状态应用到结果.</p>\n\n<p>如果组件有一个 <a href=\"#!/api/Ext.AbstractComponent-cfg-stateId\" rel=\"Ext.AbstractComponent-cfg-stateId\" class=\"docClass\">stateId</a> 和 他们作为 StateProvider\n文档配置, 需要注意的是组件状态只会被保存.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.state.Stateful-method-getState' rel='Ext.state.Stateful-method-getState' class='docClass'>Ext.state.Stateful.getState</a></p></div></div></div><div id='method-getStateId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-getStateId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-getStateId' class='name expandable'>getStateId</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>获取this对象的state id ...</div><div class='long'><p>获取this对象的state id</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>返回“stateId”或隐式id来说明组件配置。</p>\n</div></li></ul></div></div></div><div id='method-getStyleProxy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-getStyleProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-getStyleProxy' class='name expandable'>getStyleProxy</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> cls</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Returns an offscreen div with the same class name as the element this is being rendered. ...</div><div class='long'><p>Returns an offscreen div with the same class name as the element this is being rendered.\nThis is because child item rendering takes place in a detached div which, being not part of the document, has no styling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getSubTplData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-getSubTplData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-getSubTplData' class='name expandable'>getSubTplData</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='template signature'>template</strong></div><div class='description'><div class='short'>当渲染fieldSubTpl时，创建和返回一个可用的数据对象。 ...</div><div class='long'><p>当渲染<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">fieldSubTpl</a>时，创建和返回一个可用的数据对象。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>模版数据</p>\n</div></li></ul></div></div></div><div id='method-getSubTplMarkup' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-getSubTplMarkup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-getSubTplMarkup' class='name expandable'>getSubTplMarkup</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>获取被用来插入到外模版bodyEl的标记。对于表单项而言是实际上的输入元素。 ...</div><div class='long'><p>获取被用来插入到外模版bodyEl的标记。对于表单项而言是实际上的输入元素。</p>\n<p>Overrides: <a href='#!/api/Ext.form.Labelable-method-getSubTplMarkup' rel='Ext.form.Labelable-method-getSubTplMarkup' class='docClass'>Ext.form.Labelable.getSubTplMarkup</a></p></div></div></div><div id='method-getSubmitData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-getSubmitData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-getSubmitData' class='name expandable'>getSubmitData</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>返回包括在标准表单提交中的参数。一般来说将是一个简单的名值对对象，名称为这个表单项的name，\n值为当前字符化的值。更多高级表单项的实现会返回多个名值对\n\n注意从这个方法返回的值不能确保是成功通过校验了的validated. ...</div><div class='long'><p>返回包括在标准表单提交中的参数。一般来说将是一个简单的名值对对象，名称为这个表单项的<a href=\"#!/api/Ext.form.field.Field-method-getName\" rel=\"Ext.form.field.Field-method-getName\" class=\"docClass\">name</a>，\n值为当前字符化的值。更多高级表单项的实现会返回多个名值对</p>\n\n<p>注意从这个方法返回的值不能确保是成功通过校验了的<a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validated</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>提交参数名字与值的映射。每一个值都应为一个字符串或者如果这个参数名含有多个值应当是一个字符串数组。\n如果提交没有参数也可以返回null</p>\n</div></li></ul></div></div></div><div id='method-getSubmitValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-getSubmitValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-getSubmitValue' class='name expandable'>getSubmitValue</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>返回该表单项在表单中的值，该值是结合了表单项名，是以submitted parameters变量name=value形式返回。如果返回是空字符串，则以“name=”的形式提交，如果返回的是空值，则提交空值。 ...</div><div class='long'><p>返回该表单项在表单中的值，该值是结合了表单项名，是以<a href=\"#!/api/Ext.form.field.Base-method-getSubmitData\" rel=\"Ext.form.field.Base-method-getSubmitData\" class=\"docClass\">submitted parameters</a>变量name=value形式返回。如果返回是空字符串，则以“name=”的形式提交，如果返回的是空值，则提交空值。</p>\n\n<p>注意返回值将会通过<a href=\"#!/api/Ext.form.field.Base-method-processRawValue\" rel=\"Ext.form.field.Base-method-processRawValue\" class=\"docClass\">processed</a>处理，但是<a href=\"#!/api/Ext.form.field.Base-method-validate\" rel=\"Ext.form.field.Base-method-validate\" class=\"docClass\">validated</a>验证是否成功不能确定。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>提交的值，或者为空。</p>\n</div></li></ul></div></div></div><div id='method-getTargetEl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getTargetEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getTargetEl' class='name expandable'>getTargetEl</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>This is used to determine where to insert the 'html', 'contentEl' and 'items' in this component. ...</div><div class='long'><p>This is used to determine where to insert the 'html', 'contentEl' and 'items' in this component.</p>\n</div></div></div><div id='method-getTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getTpl' class='name expandable'>getTpl</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getTriggerMarkup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-method-getTriggerMarkup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-method-getTriggerMarkup' class='name expandable'>getTriggerMarkup</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Gets the markup to be inserted into the subTplMarkup. ...</div><div class='long'><p>Gets the markup to be inserted into the subTplMarkup.</p>\n</div></div></div><div id='method-getTriggerStateFlags' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-getTriggerStateFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-getTriggerStateFlags' class='name expandable'>getTriggerStateFlags</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Returns a set of flags that describe the trigger state. ...</div><div class='long'><p>Returns a set of flags that describe the trigger state. These are just used to easily\ndetermine if the DOM is out-of-sync with the component's properties.</p>\n</div></div></div><div id='method-getTriggerWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-getTriggerWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-getTriggerWidth' class='name expandable'>getTriggerWidth</a>( <span class='pre'></span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>获得trigger按钮的宽度，不包括文本框。 ...</div><div class='long'><p>获得trigger按钮的宽度，不包括文本框。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'><p>trigger按钮的宽度</p>\n</div></li></ul></div></div></div><div id='method-getValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-getValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-getValue' class='name expandable'>getValue</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>返回表单项当前的数据值。返回值的类型对于不同的表单项是不同的。 ...</div><div class='long'><p>返回表单项当前的数据值。返回值的类型对于不同的表单项是不同的。\n例如，对于<a href=\"#!/api/Ext.form.field.Date\" rel=\"Ext.form.field.Date\" class=\"docClass\">Ext.form.field.Date</a>)一个数据对象，\n在调用<a href=\"#!/api/Ext.form.field.Base-method-rawToValue\" rel=\"Ext.form.field.Base-method-rawToValue\" class=\"docClass\">rawToValue</a>时，会反回一个表单项<a href=\"#!/api/Ext.form.field.Base-method-processRawValue\" rel=\"Ext.form.field.Base-method-processRawValue\" class=\"docClass\">processed</a>函数处理的字符串值。返回未处理的字符串值，请参见<a href=\"#!/api/Ext.form.field.Base-method-getRawValue\" rel=\"Ext.form.field.Base-method-getRawValue\" class=\"docClass\">getRawValue</a>。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>value 表单项值</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-getValue' rel='Ext.form.field.Field-method-getValue' class='docClass'>Ext.form.field.Field.getValue</a></p></div></div></div><div id='method-getWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> ) : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></div><div class='description'><div class='short'>获取组件的基本元素当前宽度. ...</div><div class='long'><p>获取组件的基本元素当前宽度.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getXType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-getXType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-getXType' class='name expandable'>getXType</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>获取此组件的xtype注册Ext.ComponentManager。 ...</div><div class='long'><p>获取此组件的xtype注册<a href=\"#!/api/Ext.ComponentManager\" rel=\"Ext.ComponentManager\" class=\"docClass\">Ext.ComponentManager</a>。\n对于列表所有可用xtypes，请看到<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 头。用法示例：</p>\n\n<pre><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nalert(t.getXType());  // alerts 'textfield'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The xtype</p>\n</div></li></ul></div></div></div><div id='method-getXTypes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-getXTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-getXTypes' class='name expandable'>getXTypes</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>返回这个组件的 xtype 层次字符串, 用斜杠分隔. ...</div><div class='long'><p>返回这个组件的 xtype 层次字符串, 用斜杠分隔. 所有可用的xtype列表,\n参见 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 类头部.</p>\n\n<p><strong>如果使用你自己的子类, 请注意, 组件必须注册它自己的 xtype 值以便区别于继承的xtype.</strong></p>\n\n<p>示例用法:</p>\n\n<pre><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nalert(t.getXTypes());  // alerts 'component/field/textfield'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>xtype层次字符串</p>\n</div></li></ul></div></div></div><div id='method-hasActiveError' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-hasActiveError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-hasActiveError' class='name expandable'>hasActiveError</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>通知当前域是否有主动错误消息。 ...</div><div class='long'><p>通知当前域是否有主动错误消息。\n这不会触发其拥有的验证，它只查找组件可能已经持有的任何消息。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasActiveFx' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-hasActiveFx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-hasActiveFx' class='name expandable'>hasActiveFx</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>返回此元素当前是否有正在进行或在队列中的动画效果, 没有则返回 false. ...</div><div class='long'><p>返回此元素当前是否有正在进行或在队列中的动画效果, 没有则返回 false.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>废弃的方法; 4.0以后使用 <a href=\"#!/api/Ext.util.Animate-method-getActiveAnimation\" rel=\"Ext.util.Animate-method-getActiveAnimation\" class=\"docClass\">getActiveAnimation</a> 替代</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果元素有正在进行的动画效果则返回 true, 否则返回 false</p>\n\n</div></li></ul></div></div></div><div id='method-hasCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-hasCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-hasCls' class='name expandable'>hasCls</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> className</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>检查该元素的 DOM 节点上的指定 CSS 类是否存在. ...</div><div class='long'><p>检查该元素的 DOM 节点上的指定 CSS 类是否存在.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要检查的 CSS 类</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果类存在返回 true, 否则返回 false.</p>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>根据名称判断配置项是否存在 ...</div><div class='long'><p>根据名称判断配置项是否存在</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置项</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>检查本对象是否有特定事件的监听器, 或者检查事件是否起泡。 ...</div><div class='long'><p>检查本对象是否有特定事件的监听器, 或者检查事件是否起泡。\n检查的结果表明事件是否需要出发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>待检查的事件名</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果事件被监听或者起泡，返回<code>true</code>, 否则返回<code>false</code></p>\n</div></li></ul></div></div></div><div id='method-hasUICls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-hasUICls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-hasUICls' class='name expandable'>hasUICls</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> cls</span> )</div><div class='description'><div class='short'>检查是否有当前指定的 uiCls ...</div><div class='long'><p>检查是否有当前指定的 uiCls</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要检查的 cls</p>\n</div></li></ul></div></div></div><div id='method-hasVisibleLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-hasVisibleLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-hasVisibleLabel' class='name expandable'>hasVisibleLabel</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>煎炒域是否有可见的标签 ...</div><div class='long'><p>煎炒域是否有可见的标签</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果有可见的标签，返回true</p>\n</div></li></ul></div></div></div><div id='method-hide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-hide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-hide' class='name expandable'>hide</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> animateTarget], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>隐藏这个组件，将其设置为不可见使用配置的hideMode. ...</div><div class='long'><p>隐藏这个组件，将其设置为不可见使用配置的<a href=\"#!/api/Ext.Component-cfg-hideMode\" rel=\"Ext.Component-cfg-hideMode\" class=\"docClass\">hideMode</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animateTarget</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> (optional)<div class='sub-desc'><p>只适用于<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动组件，\n如<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s或<a href=\"#!/api/Ext.tip.ToolTip\" rel=\"Ext.tip.ToolTip\" class=\"docClass\">ToolTip</a>s,提示，\n或定期组件已配置浮动：<code>floating: true</code>。**。目标组件应动画，而隐藏。</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>回调函数调用后的组件是隐藏的。</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>范围（<code>本</code>参考），其中执行回调。默认这个组件。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-implement' class='name expandable'>implement</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-initComponent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-initComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-initComponent' class='name expandable'>initComponent</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>在初始化组件模板方法是一个重要的组件的初始化步骤。它的目的\n是要实现Ext.Component提供任何所需的构造逻辑函数每个子类的。 ...</div><div class='long'><p>在初始化组件模板方法是一个重要的组件的初始化步骤。它的目的\n是要实现Ext.Component提供任何所需的构造逻辑函数每个子类的。\n在初始化组件模板被创建的类的方法，</p>\n\n<p>首先会调用层次结构向上Ext.Component被称为此后与每个在InitComponent的方法。\n这使得它很容易实现，如果需要的话，重载的构造函数逻辑的组件层次结构中的任何步骤。</p>\n\n<p>在InitComponent方法必须包含一个调用callParent以确保父类的在InitComponent方法是传递给构造函数的called.\nAll的配置选项<code>`被称为前在InitComponent，所以你可以简单地访问他们的this.someOption</code>。</p>\n\n<p>下面的例子演示了如何使用一个动态的一个按钮的文本字符串的类的实例的时候。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('DynamicButtonText', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n\n    initComponent: function() {\n        this.text = new Date();\n        this.renderTo = <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>();\n        this.callParent();\n    }\n});\n\n<a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function() {\n    <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('DynamicButtonText');\n});\n</code></pre>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>这个类的初始化配置。典型例子:\n\nExt.define('My.awesome.Class', {\n    // 这是默认配置\n    config: {\n        name: 'Awesome',\n        isAwes...</div><div class='long'><p>这个类的初始化配置。典型例子:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // 这是默认配置\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome' 超级棒\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>配置</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>mixins 混入原型 键-值对</p>\n</div></li></ul></div></div></div><div id='method-initField' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-initField' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-initField' class='name expandable'>initField</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>初始化这个Field mixin的当前实例。使用这个mixin的组件在他们自己初始化的过程中将会调用这个方法 ...</div><div class='long'><p>初始化这个Field mixin的当前实例。使用这个mixin的组件在他们自己初始化的过程中将会调用这个方法</p>\n</div></div></div><div id='method-initFrame' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-initFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-initFrame' class='name expandable'>initFrame</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-initLabelable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-initLabelable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-initLabelable' class='name expandable'>initLabelable</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>执行这个混合类的初始化。 ...</div><div class='long'><p>执行这个混合类的初始化。\n组件类使用这个混合类在他们自己的初始化期间应调用这个方法。</p>\n</div></div></div><div id='method-initRenderData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-initRenderData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-initRenderData' class='name expandable'>initRenderData</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Initialized the renderData to be used when rendering the renderTpl. ...</div><div class='long'><p>Initialized the renderData to be used when rendering the renderTpl.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Object with keys and values that are going to be applied to the renderTpl</p>\n</div></li></ul></div></div></div><div id='method-initRenderTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-initRenderTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-initRenderTpl' class='name expandable'>initRenderTpl</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Initializes the renderTpl. ...</div><div class='long'><p>Initializes the renderTpl.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a></span><div class='sub-desc'><p>The renderTpl XTemplate instance.</p>\n</div></li></ul></div></div></div><div id='method-initState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-initState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-initState' class='name expandable'>initState</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>根据结构初始化state对象 ...</div><div class='long'><p>根据结构初始化state对象</p>\n</div></div></div><div id='method-initStyles' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-initStyles' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-initStyles' class='name expandable'>initStyles</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> targetEl</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Converts style definitions to String. ...</div><div class='long'><p>Converts style definitions to String.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetEl</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>A CSS style string with style, padding, margin and border.</p>\n</div></li></ul></div></div></div><div id='method-initValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-initValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-initValue' class='name expandable'>initValue</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>基于初始化配置初始化这个表单项的值 ...</div><div class='long'><p>基于初始化配置初始化这个表单项的值</p>\n</div></div></div><div id='method-is' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-is' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-is' class='name expandable'>is</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>检验此组件是否匹配选择器字符串. ...</div><div class='long'><p>检验此组件是否匹配选择器字符串.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>针对检验的选择器字符串.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>组件匹配选择器返回 true.</p>\n</div></li></ul></div></div></div><div id='method-isDescendantOf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isDescendantOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isDescendantOf' class='name expandable'>isDescendantOf</a>( <span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a> container</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>确定此组件是否为指定容器的后裔. ...</div><div class='long'><p>确定此组件是否为指定容器的后裔.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>container</span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果是返回 true.</p>\n</div></li></ul></div></div></div><div id='method-isDirty' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-isDirty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-isDirty' class='name expandable'>isDirty</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果表单项的值不同于originalValue返回true。 ...</div><div class='long'><p>如果表单项的值不同于<a href=\"#!/api/Ext.form.field.Field-property-originalValue\" rel=\"Ext.form.field.Field-property-originalValue\" class=\"docClass\">originalValue</a>返回true。\n如果表单项禁用了则返回false。</p>\n\n<p>注意 如果其表单<a href=\"#!/api/Ext.form.Basic\" rel=\"Ext.form.Basic\" class=\"docClass\">form</a> 配置了<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a>\n则当值通过<a href=\"#!/api/Ext.form.Basic\" rel=\"Ext.form.Basic\" class=\"docClass\">Ext.form.Basic</a>.<a href=\"#!/api/Ext.form.Basic-method-setValues\" rel=\"Ext.form.Basic-method-setValues\" class=\"docClass\">setValues</a>载入的时候，</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>True 如果表单项的值不同于<a href=\"#!/api/Ext.form.field.Field-property-originalValue\" rel=\"Ext.form.field.Field-property-originalValue\" class=\"docClass\">originalValue</a>（并且没有被禁用）\nfalse otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isDisabled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isDisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isDisabled' class='name expandable'>isDisabled</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>确定该组件当前被禁用. ...</div><div class='long'><p>确定该组件当前被禁用.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>返回该组件的禁用状态.</p>\n</div></li></ul></div></div></div><div id='method-isDraggable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isDraggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isDraggable' class='name expandable'>isDraggable</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>方法用来确定组件是否能拖动. ...</div><div class='long'><p>方法用来确定组件是否能拖动.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>此组件能否拖动的状态.</p>\n</div></li></ul></div></div></div><div id='method-isDroppable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isDroppable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isDroppable' class='name expandable'>isDroppable</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>方法用来确定组件是否能成为拖动的目标. ...</div><div class='long'><p>方法用来确定组件是否能成为拖动的目标.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>此组件能否成为拖动目标的状态.</p>\n</div></li></ul></div></div></div><div id='method-isEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-isEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-isEqual' class='name expandable'>isEqual</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value1, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value2</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>重写。将undefined和null值作为同于空的字符串值。 ...</div><div class='long'><p>重写。将undefined和null值作为同于空的字符串值。\nOverride. Treat undefined and null values as equal to an empty string value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>value2</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-isEqual' rel='Ext.form.field.Field-method-isEqual' class='docClass'>Ext.form.field.Field.isEqual</a></p></div></div></div><div id='method-isEqualAsString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-isEqualAsString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-isEqualAsString' class='name expandable'>isEqualAsString</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value1, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value2</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>返回2个值是否逻辑相等。 ...</div><div class='long'><p>返回2个值是否逻辑相等。\n与<a href=\"#!/api/Ext.form.field.Field-method-isEqual\" rel=\"Ext.form.field.Field-method-isEqual\" class=\"docClass\">isEqual</a>类似，然而null和undefined值将会视为空字符串。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value1</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>第1个比较的值</p>\n</div></li><li><span class='pre'>value2</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>第2个比较的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>True如果值相等，false如果不等</p>\n</div></li></ul></div></div></div><div id='method-isFileUpload' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-isFileUpload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-isFileUpload' class='name expandable'>isFileUpload</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>返回这个表单项是否为file upload表单项。如果返回true，表单对于通过AJAX提交表单时\n会使用特殊的技术。详情参见Ext.form.Basic.hasUpload。如果返回true，extractFileInput实现会用...</div><div class='long'><p>返回这个表单项是否为file upload表单项。如果返回true，表单对于通过AJAX<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">提交表单</a>时\n会使用特殊的技术。详情参见<a href=\"#!/api/Ext.form.Basic-method-hasUpload\" rel=\"Ext.form.Basic-method-hasUpload\" class=\"docClass\">Ext.form.Basic.hasUpload</a>。如果返回true，<a href=\"#!/api/Ext.form.field.Field-method-extractFileInput\" rel=\"Ext.form.field.Field-method-extractFileInput\" class=\"docClass\">extractFileInput</a>实现会用于\n提取相应的file 输入元素。\nReturns whether this Field is a file upload field; if it returns true, forms will use special techniques for\n<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitting the form</a> via AJAX. See <a href=\"#!/api/Ext.form.Basic-method-hasUpload\" rel=\"Ext.form.Basic-method-hasUpload\" class=\"docClass\">Ext.form.Basic.hasUpload</a> for details. If\nthis returns true, the <a href=\"#!/api/Ext.form.field.Field-method-extractFileInput\" rel=\"Ext.form.field.Field-method-extractFileInput\" class=\"docClass\">extractFileInput</a> method must also be implemented to return the corresponding file\ninput element.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isFloating' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isFloating' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isFloating' class='name expandable'>isFloating</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>方法用来确定此组件是否是浮动的. ...</div><div class='long'><p>方法用来确定此组件是否是浮动的.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>此组件的浮动状态.</p>\n</div></li></ul></div></div></div><div id='method-isHidden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isHidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isHidden' class='name expandable'>isHidden</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>确定该组件当前被隐藏. ...</div><div class='long'><p>确定该组件当前被隐藏.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>返回该组件的隐藏状态.</p>\n</div></li></ul></div></div></div><div id='method-isLayoutRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isLayoutRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isLayoutRoot' class='name expandable'>isLayoutRoot</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Determines whether this Component is the root of a layout. ...</div><div class='long'><p>Determines whether this Component is the root of a layout. This returns <code>true</code> if\nthis component can run its layout without assistance from or impact on its owner.\nIf this component cannot run its layout given these restrictions, <code>false</code> is returned\nand its owner will be considered as the next candidate for the layout root.</p>\n\n<p>Setting the <a href=\"#!/api/Ext.AbstractComponent-property-_isLayoutRoot\" rel=\"Ext.AbstractComponent-property-_isLayoutRoot\" class=\"docClass\">_isLayoutRoot</a> property to <code>true</code> causes this method to always\nreturn <code>true</code>. This may be useful when updating a layout of a Container which shrink\nwraps content, and you know that it will not change size, and so can safely be the\ntopmost participant in the layout run.</p>\n</div></div></div><div id='method-isLayoutSuspended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isLayoutSuspended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isLayoutSuspended' class='name expandable'>isLayoutSuspended</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果此组件的布局是挂起的, 返回 true. ...</div><div class='long'><p>如果此组件的布局是挂起的, 返回 true. This can come from direct\n这可能是由这个组件的布局活动直接挂起引起的 (suspendLayouts)\n或者此组件容器之一的布局是挂起的.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>此组件的布局被挂起返回 true.</p>\n</div></li></ul></div></div></div><div id='method-isValid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-isValid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-isValid' class='name expandable'>isValid</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>通过表单项的validating the processed raw value值，返回该表单项的值当前是否可用。 ...</div><div class='long'><p>通过表单项的<a href=\"#!/api/Ext.form.field.Base-method-getErrors\" rel=\"Ext.form.field.Base-method-getErrors\" class=\"docClass\">validating</a> the <a href=\"#!/api/Ext.form.field.Base-method-processRawValue\" rel=\"Ext.form.field.Base-method-processRawValue\" class=\"docClass\">processed raw value</a>值，返回该表单项的值当前是否可用。\n<strong>注意</strong>：<a href=\"#!/api/Ext.form.field.Base-cfg-disabled\" rel=\"Ext.form.field.Base-cfg-disabled\" class=\"docClass\">disabled</a> 表单项是一直被当作可用的。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果值是可用的则返回True，返之反回false。</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-isValid' rel='Ext.form.field.Field-method-isValid' class='docClass'>Ext.form.field.Field.isValid</a></p></div></div></div><div id='method-isVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> deep]</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>如果当前组件可见, 返回true. ...</div><div class='long'><p>如果当前组件可见, 返回true.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deep</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>通过设置 'true' 来查询所有的父容器的可见性状态,\n以确定该组件是否是真正对用户可见.</p>\n\n<p>通常, 确定组件是否隐藏, 无需参数.\n例如, 在显示他们之前在隐藏容器创建动态布局页面.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果当前组件可见, 返回true, 其它返回false.</p>\n</div></li></ul></div></div></div><div id='method-isXType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-isXType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-isXType' class='name expandable'>isXType</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> xtype, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> shallow]</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>检验此组件是否是指定的xtype. ...</div><div class='long'><p>检验此组件是否是指定的xtype. 此方法既可以检验是否是指定的 xtype 的某个子类 (default)\n或者它是否直接是指定的xtype类 (shallow = true).</p>\n\n<p><strong>如果使用你自己的子类, 请注意, 组件必须注册它自己的 xtype 值以便区别于继承的xtype.</strong></p>\n\n<p>所有可用的xtype列表, 参见 <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> 类头部.</p>\n\n<p>示例用法:</p>\n\n<pre><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nvar isText = t.isXType('textfield');        // true\nvar isBoxSubclass = t.isXType('field');       // true, descended from <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>\nvar isBoxInstance = t.isXType('field', true); // false, not a direct <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> instance\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>需要为当前组件进行检测的xtype</p>\n</div></li><li><span class='pre'>shallow</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果为 true, 只检测组件是否是指定的xtype类型, false to\n如果为false，检测组件是否是xtype继承树中的某个子类.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果当前组件是指定xtype的子类, 返回 true, 其他返回 false.</p>\n</div></li></ul></div></div></div><div id='method-markInvalid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-markInvalid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-markInvalid' class='name expandable'>markInvalid</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] errors</span> )</div><div class='description'><div class='short'>显示一个或多个与该表单项相关的错误信息，利用msgTarget函数决定如何展示该信息，\n在表单项的用户接口元素上应用invalidCls。 ...</div><div class='long'><p>显示一个或多个与该表单项相关的错误信息，利用<a href=\"#!/api/Ext.form.field.Base-cfg-msgTarget\" rel=\"Ext.form.field.Base-cfg-msgTarget\" class=\"docClass\">msgTarget</a>函数决定如何展示该信息，\n在表单项的用户接口元素上应用<a href=\"#!/api/Ext.form.field.Base-cfg-invalidCls\" rel=\"Ext.form.field.Base-cfg-invalidCls\" class=\"docClass\">invalidCls</a>。\n<strong>注意</strong>：如果值确实<em>通过</em>校验了，该方法不能引起表单项<a href=\"#!/api/Ext.form.field.Base-method-validate\" rel=\"Ext.form.field.Base-method-validate\" class=\"docClass\">validate</a>或<a href=\"#!/api/Ext.form.field.Base-method-validate\" rel=\"Ext.form.field.Base-method-validate\" class=\"docClass\">validate</a>方法返回'false'，\n简单的标记表单项为无效不会阻止通过<a href=\"#!/api/Ext.form.action.Submit-cfg-clientValidation\" rel=\"Ext.form.action.Submit-cfg-clientValidation\" class=\"docClass\">Ext.form.action.Submit.clientValidation</a>的提交。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>errors</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>展示校验信息。</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-markInvalid' rel='Ext.form.field.Field-method-markInvalid' class='docClass'>Ext.form.field.Field.markInvalid</a></p></div></div></div><div id='method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-mixin' class='name expandable'>mixin</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> mixinClass</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>内部使用混入预处理器（mixins pre-processor） ...</div><div class='long'><p>内部使用混入预处理器（mixins pre-processor）</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-mon' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-mon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-mon' class='name expandable'>mon</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> opt</span> )</div><div class='description'><div class='short'>addManagedListener的简写方法\n\n向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>的简写方法</p>\n\n<p>向任何Observable对象（或者Ext.Element）添加监听器，\n当组件被销毁时，监听器自动被移除</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>添加监听器的目标项。</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li><li><span class='pre'>opt</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的)如果<code>ename</code>参数是事件名,\n这就是<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的选项。</p>\n\n</div></li></ul></div></div></div><div id='method-mun' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-mun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-mun' class='name expandable'>mun</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>removeManagedListener的简写方法\n\n移除通过mon方法添加的监听器。 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>的简写方法</p>\n\n<p>移除通过<a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a>方法添加的监听器。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>待移除监听器的项</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li></ul></div></div></div><div id='method-nextNode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-nextNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-nextNode' class='name expandable'>nextNode</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>返回在树的遍历顺序的下一个节点的组件. ...</div><div class='long'><p>返回在树的遍历顺序的下一个节点的组件.</p>\n\n<p>注意 这并不限定于同级, 如果在同级找不到匹配节点, 会遍历树\n尝试找到一个匹配节点. 对比 <a href=\"#!/api/Ext.AbstractComponent-method-nextSibling\" rel=\"Ext.AbstractComponent-method-nextSibling\" class=\"docClass\">nextSibling</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>一个 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器过滤过滤下面的节点.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>下一个节点 (或者下一个匹配选择器的节点).\n如果没有没有匹配的节点返回 null.</p>\n</div></li></ul></div></div></div><div id='method-nextSibling' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-nextSibling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-nextSibling' class='name expandable'>nextSibling</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>返回此组件的下一个同级组件. ...</div><div class='long'><p>返回此组件的下一个同级组件.</p>\n\n<p>随意选择下一个匹配 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器的同级组件.</p>\n\n<p>也可参考 <strong><code>next()</code></strong></p>\n\n<p>注意 这仅限于同级, 并且如果没有同级组件匹配, 返回 <code>null</code> . 对比\n<a href=\"#!/api/Ext.AbstractComponent-method-nextNode\" rel=\"Ext.AbstractComponent-method-nextNode\" class=\"docClass\">nextNode</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>一个 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器过滤下面的组件.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>下一个同级组件 (或者下一个匹配选择器的同级组件).\n如果没有没有匹配的同级组件返回 null.</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-on' class='name expandable'>on</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eventName, [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options]</span> )</div><div class='description'><div class='short'>addListener的简写方法\n\n向本对象添加一个事件处理函数，例如:\n\nmyGridPanel.on(\"mouseover\", this.onMouseOver, this);\n\n\n这个方法也允许传递单个参数，参数为一个\n包含指定...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>的简写方法</p>\n\n<p>向本对象添加一个事件处理函数，例如:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>这个方法也允许传递单个参数，参数为一个\n包含指定多个事件的属性的配置对象。例如:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>你也能为每个事件处理函数单独指定选项：</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p>也能使用在特定作用域的方法<em>名</em>。注意\n必须指定<code>scope</code>:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>被监听的事件名。\n也可以是属性名字是事件名字的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>事件调用的方法, 或者<em>如果指定了<code>scope</code>，在指定<code>scope</code>的方法</em>名*。\n会被调用，\n参数为<a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a>的参数加上下述<code>options</code>参数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>包含事件处理函数配置的对象。</p>\n\n\n\n\n<p><strong>注意:</strong> 不像ExtJS 3.x, options对象也会作为最后一个参数\n传递给每一个事件处理函数。</p>\n\n\n\n\n<p>这个对象可能包含以下任何一个属性:</p>\n\n<ul><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>事件处理函数执行的作用域(<code>this</code>应用的上下文)\n<strong>如果省略, 默认为触发事件的对象。</strong></p>\n\n</div></li><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>事件触发后，调用事件处理函数延时毫秒数。</p>\n\n</div></li><li><span class='pre'>single</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为true添加一个事件处理函数，只处理下一次触发的事件, 然后移除这个函数。</p>\n\n</div></li><li><span class='pre'>buffer</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>使事件处理函数在<a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a>中调度运行，\n  延时指定的毫秒数。如果事件在这段事件再次触发，\n  原先的事件处理函数<em>不</em>再调用, 新的事件处理函数接替。</p>\n\n</div></li><li><span class='pre'>target</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a><div class='sub-desc'><p>只有当事件在目标Observable上触发时调用事件处理函数,\n  如果事件是从Observable的子类起泡的，<em>不会</em>调用事件处理函数</p>\n\n</div></li><li><span class='pre'>element</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p><strong>这个选项只对绑定在<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>上的监听器有效。</strong>\n  Component的一个属性名，这个属性引用一个待添加监听器的元素</p>\n\n\n\n\n<p>  这个选项在Component构造过程中向<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>的元素添加DOM事件监听器有用。\n  这些元素只有在Component渲染之后才会存在。\n  例如, 向Panel的body中添加click监听器:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p><strong>组合选项</strong></p>\n\n\n\n\n<p>使用options参数, 可以组合不同类型的监听器：</p>\n\n\n\n\n<p>一个延时的一次性监听器：</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n</div></li></ul></div></li></ul></div></div></div><div id='method-onAdded' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onAdded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onAdded' class='name expandable'>onAdded</a>( <span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> container, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> pos</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Method to manage awareness of when components are added to their\nrespective Container, firing an added event. ...</div><div class='long'><p>Method to manage awareness of when components are added to their\nrespective Container, firing an <a href=\"#!/api/Ext.AbstractComponent-event-added\" rel=\"Ext.AbstractComponent-event-added\" class=\"docClass\">added</a> event. References are\nestablished at add time rather than at render time.</p>\n\n<p>Allows addition of behavior when a Component is added to a\nContainer. At this stage, the Component is in the parent\nContainer's collection of child items. After calling the\nsuperclass's onAdded, the ownerCt reference will be present,\nand if configured with a ref, the refOwner will be set.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>container</span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a><div class='sub-desc'><p>Container which holds the component</p>\n</div></li><li><span class='pre'>pos</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>Position at which the component was added</p>\n</div></li></ul></div></div></div><div id='method-onBlur' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-onBlur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-onBlur' class='name expandable'>onBlur</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>The default blur handling must not occur for a TriggerField, implementing this template method as emptyFn disables that. ...</div><div class='long'><p>The default blur handling must not occur for a TriggerField, implementing this template method as emptyFn disables that.\nInstead the tab key is monitored, and the superclass's onBlur is called when tab is detected</p>\n</div></div></div><div id='method-onChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-onChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-onChange' class='name expandable'>onChange</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>如果grow=true,当表单项值改变时调用autoSize方法 ...</div><div class='long'><p>如果grow=true,当表单项值改变时调用autoSize方法</p>\n<p>Overrides: <a href='#!/api/Ext.form.field.Field-method-onChange' rel='Ext.form.field.Field-method-onChange' class='docClass'>Ext.form.field.Field.onChange</a></p></div></div></div><div id='method-onConfigUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> names, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> callback, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>更新配置项 ...</div><div class='long'><p>更新配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>名称</p>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>回调</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>范围</p>\n</div></li></ul></div></div></div><div id='method-onDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>允许销毁操作的行为。 ...</div><div class='long'><p>允许销毁操作的行为。\n调用父类的OnDestroy后，组件将被销毁。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-onDirtyChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-onDirtyChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-onDirtyChange' class='name expandable'>onDirtyChange</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> isDirty</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>当表单项的脏状态变化时调用。添加/移除主要元素的dirtyCls。 ...</div><div class='long'><p>当表单项的脏状态变化时调用。添加/移除主要元素的<a href=\"#!/api/Ext.form.field.Base-cfg-dirtyCls\" rel=\"Ext.form.field.Base-cfg-dirtyCls\" class=\"docClass\">dirtyCls</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isDirty</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-method-onDirtyChange' rel='Ext.form.field.Field-method-onDirtyChange' class='docClass'>Ext.form.field.Field.onDirtyChange</a></p></div></div></div><div id='method-onDisable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onDisable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onDisable' class='name expandable'>onDisable</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Allows addition of behavior to the disable operation. ...</div><div class='long'><p>Allows addition of behavior to the disable operation.\nAfter calling the superclass’s onDisable, the Component will be disabled.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-onEnable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onEnable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onEnable' class='name expandable'>onEnable</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Allows addition of behavior to the enable operation. ...</div><div class='long'><p>Allows addition of behavior to the enable operation.\nAfter calling the superclass’s onEnable, the Component will be enabled.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>扩展事件 ...</div><div class='long'><p>扩展事件</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onFileChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-method-onFileChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-method-onFileChange' class='name expandable'>onFileChange</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Event handler fired when the user selects a file. ...</div><div class='long'><p>Event handler fired when the user selects a file.</p>\n</div></div></div><div id='method-onHide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-onHide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-onHide' class='name expandable'>onHide</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> animateTarget], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>动画可能下降到目标元素。 ...</div><div class='long'><p>动画可能下降到目标元素。</p>\n\n<p>允许行为的隐藏操作。后调用父类onHide的，\n组件将被隐藏。</p>\n\n<p>相同的参数被传递＃隐藏。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animateTarget</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onPosition' class='name expandable'>onPosition</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> x, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> y</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Called after the component is moved, this method is empty by default but can be implemented by any\nsubclass that need...</div><div class='long'><p>Called after the component is moved, this method is empty by default but can be implemented by any\nsubclass that needs to perform custom logic after a move occurs.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new x position</p>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new y position</p>\n</div></li></ul></div></div></div><div id='method-onRemoved' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onRemoved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onRemoved' class='name expandable'>onRemoved</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> destroying</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Method to manage awareness of when components are removed from their\nrespective Container, firing a removed event. ...</div><div class='long'><p>Method to manage awareness of when components are removed from their\nrespective Container, firing a <a href=\"#!/api/Ext.AbstractComponent-event-removed\" rel=\"Ext.AbstractComponent-event-removed\" class=\"docClass\">removed</a> event. References are properly\ncleaned up after removing a component from its owning container.</p>\n\n<p>Allows addition of behavior when a Component is removed from\nits parent Container. At this stage, the Component has been\nremoved from its parent Container's collection of child items,\nbut has not been destroyed (It will be destroyed if the parent\nContainer's autoDestroy is true, or if the remove call was\npassed a truthy second parameter). After calling the\nsuperclass's onRemoved, the ownerCt and the refOwner will not\nbe present.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>destroying</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>Will be passed as true if the Container performing the remove operation will delete this\nComponent upon remove.</p>\n</div></li></ul></div></div></div><div id='method-onRender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-onRender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-onRender' class='name expandable'>onRender</a>( <span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.core.Element</a> parentNode, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> containerIdx</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>这个组件的DOM结构创建之后调用的模板方法。 ...</div><div class='long'><p>这个组件的DOM结构创建之后调用的模板方法。</p>\n\n<p>此时, 这个组件(及其所有子组件)的DOM<em>存在</em>，\n但是它还没有布局(摆放和调整大小)。</p>\n\n<p>重写这个方法的子类能在渲染时访问DOM结构。\n它应该在访问组件的任何子元素之前调用父类的方法。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentNode</span> : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.core.Element</a><div class='sub-desc'><p>包含封装本组件的元素的父元素。</p>\n</div></li><li><span class='pre'>containerIdx</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>本组件的父容器的子元素集合中的索引。</p>\n</div></li></ul></div></div></div><div id='method-onResize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-onResize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-onResize' class='name expandable'>onResize</a>( <span class='pre'></span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>Allows addition of behavior to the resize operation. ...</div><div class='long'><p>Allows addition of behavior to the resize operation.</p>\n\n<p>Called when Ext.resizer.Resizer#drag event is fired.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n</div></div></div><div id='method-onShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-onShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-onShow' class='name expandable'>onShow</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> animateTarget], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>允许显示操作的行为。 ...</div><div class='long'><p>允许显示操作的行为。\n父类的onShow事件后，组件将是可见的。</p>\n\n<p>覆盖在子类中需要更复杂的行为。</p>\n\n<p>相同的参数被传递\nGets passed the same parameters as <a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a>.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animateTarget</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onShowComplete' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-onShowComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-onShowComplete' class='name expandable'>onShowComplete</a>( <span class='pre'>[<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> )<strong class='protected signature'>protected</strong><strong class='template signature'>template</strong></div><div class='description'><div class='short'>方法afterShow 完成后调用。 ...</div><div class='long'><p>方法<a href=\"#!/api/Ext.Component-method-afterShow\" rel=\"Ext.Component-method-afterShow\" class=\"docClass\">afterShow</a> 完成后调用。</p>\n\n<p>获取通过相同的回调<code>和</code>范围，收到的#afterShow参数。</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onStateChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-onStateChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-onStateChange' class='name expandable'>onStateChange</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>任何stateEvents事件被触发将调用这个方法。 ...</div><div class='long'><p>任何<a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a>事件被触发将调用这个方法。</p>\n</div></div></div><div id='method-onTriggerClick' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-onTriggerClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-onTriggerClick' class='name expandable'>onTriggerClick</a>( <span class='pre'><a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> e</span> )<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>这个函数用来处理trigger按钮被点击事件。这个方法默认什么都不做，直到有个可执行的方法覆盖此方法。 ...</div><div class='long'><p>这个函数用来处理trigger按钮被点击事件。这个方法默认什么都不做，直到有个可执行的方法覆盖此方法。\n此方法的示例实现参见Ext.form.field.ComboBox 和 <a href=\"#!/api/Ext.form.field.Date\" rel=\"Ext.form.field.Date\" class=\"docClass\">Ext.form.field.Date</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-prepareClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-prepareClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-prepareClass' class='name expandable'>prepareClass</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> T</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>让给定的类成为可观察的实例。 ...</div><div class='long'><p>让给定的类成为可观察的实例。\n这个方法在有类从本类派生或者使用本类作为一个mixin时调用。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>T</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>类构造函数</p>\n</div></li></ul></div></div></div><div id='method-previousNode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-previousNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-previousNode' class='name expandable'>previousNode</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>返回在树的遍历顺序的前一个节点的组件. ...</div><div class='long'><p>返回在树的遍历顺序的前一个节点的组件.</p>\n\n<p>注意 这并不限定于同级, 如果在同级找不到匹配节点, 会遍历树\n以相反的方向来尝试找到一个匹配节点. 对比 <a href=\"#!/api/Ext.AbstractComponent-method-previousSibling\" rel=\"Ext.AbstractComponent-method-previousSibling\" class=\"docClass\">previousSibling</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>一个 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器过滤过滤前面的节点.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>前一个节点 (或者前一个匹配选择器的节点).\n如果没有没有匹配的节点返回 null.</p>\n</div></li></ul></div></div></div><div id='method-previousSibling' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-previousSibling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-previousSibling' class='name expandable'>previousSibling</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>返回此组件的前一个同级组件. ...</div><div class='long'><p>返回此组件的前一个同级组件.</p>\n\n<p>随意选择前一个匹配 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器的同级组件.</p>\n\n<p>也可参考 <strong><code>prev()</code></strong></p>\n\n<p>注意 这仅限于同级, 并且如果没有同级组件匹配, 返回 <code>null</code> . 对比\n<a href=\"#!/api/Ext.AbstractComponent-method-previousNode\" rel=\"Ext.AbstractComponent-method-previousNode\" class=\"docClass\">previousNode</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>一个 <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> 选择器过滤前面的组件.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>前一个同级组件 (或者前一个匹配选择器的同级组件).\n如果没有没有匹配的同级组件返回 null.</p>\n</div></li></ul></div></div></div><div id='method-processRawValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-processRawValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-processRawValue' class='name expandable'>processRawValue</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>对于原始字符串值进行必要的管理，为了转换和/或者validation。 ...</div><div class='long'><p>对于原始字符串值进行必要的管理，为了转换和/或者<a href=\"#!/api/Ext.form.field.Text-method-validate\" rel=\"Ext.form.field.Text-method-validate\" class=\"docClass\">validation</a>。\n对于文本表单项应用 <a href=\"#!/api/Ext.form.field.Text-cfg-stripCharsRe\" rel=\"Ext.form.field.Text-cfg-stripCharsRe\" class=\"docClass\">stripCharsRe</a>到原始值上。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>未处理的字符串值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>处理后字符串值</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Base-method-processRawValue' rel='Ext.form.field.Base-method-processRawValue' class='docClass'>Ext.form.field.Base.processRawValue</a></p></div></div></div><div id='method-rawToValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-rawToValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-rawToValue' class='name expandable'>rawToValue</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> rawValue</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>将表单项的原始值转换成复合类型，以适合于特殊的单表类型。允许控制标准化和用户输入值向单项类型适用值的转换。 ...</div><div class='long'><p>将表单项的原始值转换成复合类型，以适合于特殊的单表类型。允许控制标准化和用户输入值向单项类型适用值的转换。\n例如，对于<a href=\"#!/api/Ext.form.field.Date\" rel=\"Ext.form.field.Date\" class=\"docClass\">Ext.form.field.Date</a>Date型对象，是被<a href=\"#!/api/Ext.form.field.Base-method-getValue\" rel=\"Ext.form.field.Base-method-getValue\" class=\"docClass\">getValue</a>调用。</p>\n\n<p>由用户实现决定对于不能成功转换成目标类型的原始值的处理。</p>\n\n<p>对于相反的转换，请参见<a href=\"#!/api/Ext.form.field.Base-method-valueToRaw\" rel=\"Ext.form.field.Base-method-valueToRaw\" class=\"docClass\">valueToRaw</a>。</p>\n\n<p>此类没有实现转换，返回一个未处理的原始值。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rawValue</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>转换值。</p>\n</div></li></ul></div></div></div><div id='method-registerFloatingItem' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-registerFloatingItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-registerFloatingItem' class='name expandable'>registerFloatingItem</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> cmp</span> )</div><div class='description'><div class='short'>Called by Component#doAutoRender\n\n注册一个容器配置 floating: true 同这个组件的 ZIndexManager. ...</div><div class='long'><p>Called by Component#doAutoRender</p>\n\n<p>注册一个容器配置 <code>floating: true</code> 同这个组件的 <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a>.</p>\n\n<p>组件通过这种方式添加将不参与任何的布局, 但是首次显示时以 <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a> 这种方法来渲染.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cmp</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-relayEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> origin, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] events, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> prefix]</span> )</div><div class='description'><div class='short'>从指定的Observable接替选定的事件就好像事件是this触发的。 ...</div><div class='long'><p>从指定的Observable接替选定的事件就好像事件是<code>this</code>触发的。</p>\n\n<p>例如，如果你想要扩展Grid, 你可能决定转发store的一些事件。\n所以你能在你的initComponent中实现这个:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>grid实例将会有一个observable的'load'事件，\n这个事件的参数是store的load事件的参数。任何grid的load事件触发的函数\n可以使用<code>this</code>访问grid。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>origin</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>本对象要接替事件的Observable对象</p>\n</div></li><li><span class='pre'>events</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>被接替的事件名数组</p>\n</div></li><li><span class='pre'>prefix</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>附加到事件名的公共前缀。例如：</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>这样grid将会以'storeload'和'storeclear'转发store的'load'和'clear'事件。</p>\n</div></li></ul></div></div></div><div id='method-removeChildEls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.ElementContainer' rel='Ext.util.ElementContainer' class='defined-in docClass'>Ext.util.ElementContainer</a><br/><a href='source/ElementContainer.html#Ext-util-ElementContainer-method-removeChildEls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.ElementContainer-method-removeChildEls' class='name expandable'>removeChildEls</a>( <span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> testFn</span> )</div><div class='description'><div class='short'>Removes items in the childEls array based on the return value of a supplied test\nfunction. ...</div><div class='long'><p>Removes items in the childEls array based on the return value of a supplied test\nfunction. The function is called with a entry in childEls and if the test function\nreturn true, that entry is removed. If false, that entry is kept.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>testFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The test function.</p>\n</div></li></ul></div></div></div><div id='method-removeCls' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-removeCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-removeCls' class='name expandable'>removeCls</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] cls</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>从代表此组件的顶层元素移除 CSS 类. ...</div><div class='long'><p>从代表此组件的顶层元素移除 CSS 类.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>移除的 CSS 类名</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>返回此组件让方法可以链接.</p>\n</div></li></ul></div></div></div><div id='method-removeClsWithUI' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-removeClsWithUI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-removeClsWithUI' class='name expandable'>removeClsWithUI</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] cls</span> )</div><div class='description'><div class='short'>从 uiCls 数组中移除一个 cls, 这也将调用 removeUIClsFromElement 并从该组件所有元素中移除它. ...</div><div class='long'><p>从 uiCls 数组中移除一个 cls, 这也将调用 <a href=\"#!/api/Ext.AbstractComponent-method-removeUIClsFromElement\" rel=\"Ext.AbstractComponent-method-removeUIClsFromElement\" class=\"docClass\">removeUIClsFromElement</a> 并从该组件所有元素中移除它.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>从 uiCls 中移除一个字符串或者一个字符串数组</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>移除事件处理函数。 ...</div><div class='long'><p>移除事件处理函数。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件处理函数关联的事件类型</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>待移除的事件处理函数。 <strong>必须是对传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n的函数的引用。</strong></p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 原先为事件处理函数指定的作用域。\n它必须是和原先调用<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>时指定的作用域参数是一样的，否者监听器将会被移除。</p>\n\n</div></li></ul></div></div></div><div id='method-removeManagedListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeManagedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeManagedListener' class='name expandable'>removeManagedListener</a>( <span class='pre'><a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> item, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ename, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>移除通过mon方法添加的监听器。 ...</div><div class='long'><p>移除通过<a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a>方法添加的监听器。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><div class='sub-desc'><p>待移除监听器的项</p>\n\n</div></li><li><span class='pre'>ename</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件名或者包含的事件名属性的对象。</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是一个事件处理函数。</p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 如果<code>ename</code>参数是事件名, 这就是(<code>this</code>引用的上下文)\n事件处理函数执行的作用域。</p>\n\n</div></li></ul></div></div></div><div id='method-removeManagedListenerItem' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-removeManagedListenerItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeManagedListenerItem' class='name expandable'>removeManagedListenerItem</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> isClear, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> managedListener</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Remove a single managed listener item ...</div><div class='long'><p>Remove a single managed listener item</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isClear</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>True if this is being called during a clear</p>\n</div></li><li><span class='pre'>managedListener</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The managed listener item\nSee removeManagedListener for other args</p>\n</div></li></ul></div></div></div><div id='method-removeUIClsFromElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-removeUIClsFromElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-removeUIClsFromElement' class='name expandable'>removeUIClsFromElement</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ui</span> )</div><div class='description'><div class='short'>方法, 移除一个特定的 UI + uiCls 到组件元素. ...</div><div class='long'><p>方法, 移除一个特定的 UI + uiCls 到组件元素. 这是将添加到该元素的 cls :\n<code>this.baseCls + '-' + ui</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ui</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>从元素中添加的 UI</p>\n</div></li></ul></div></div></div><div id='method-removeUIFromElement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-removeUIFromElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-removeUIFromElement' class='name expandable'>removeUIFromElement</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Method which removes a specified UI from the components element. ...</div><div class='long'><p>Method which removes a specified UI from the components element.</p>\n</div></div></div><div id='method-renderActiveError' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-renderActiveError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-renderActiveError' class='name expandable'>renderActiveError</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Overrides the method from the Ext.form.Labelable mixin to also add the invalidCls to the inputEl,\nas that is required...</div><div class='long'><p>Overrides the method from the <a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a> mixin to also add the invalidCls to the inputEl,\nas that is required for proper styling in IE with nested fields (due to lack of child selector)</p>\n<p>Overrides: <a href='#!/api/Ext.form.Labelable-method-renderActiveError' rel='Ext.form.Labelable-method-renderActiveError' class='docClass'>Ext.form.Labelable.renderActiveError</a></p></div></div></div><div id='method-reset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>重新设置当前表单项的值为开始载入的值并且清除验证信息。 ...</div><div class='long'><p>重新设置当前表单项的值为开始载入的值并且清除验证信息。\n如果原始值为空也会添加<strong><a href=\"#!/api/Ext.form.field.Text-cfg-emptyText\" rel=\"Ext.form.field.Text-cfg-emptyText\" class=\"docClass\">emptyText</a></strong> and <strong><a href=\"#!/api/Ext.form.field.Text-cfg-emptyCls\" rel=\"Ext.form.field.Text-cfg-emptyCls\" class=\"docClass\">emptyCls</a></strong></p>\n<p>Overrides: <a href='#!/api/Ext.form.field.Field-method-reset' rel='Ext.form.field.Field-method-reset' class='docClass'>Ext.form.field.Field.reset</a></p></div></div></div><div id='method-resetOriginalValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-resetOriginalValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-resetOriginalValue' class='name expandable'>resetOriginalValue</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>重置表单项的originalValue属性以匹配当前的value。如果表单的\ntrackResetOnLoad 设置为true，将由\nExt.form.Basic.setValues调用 ...</div><div class='long'><p>重置表单项的<a href=\"#!/api/Ext.form.field.Field-property-originalValue\" rel=\"Ext.form.field.Field-property-originalValue\" class=\"docClass\">originalValue</a>属性以匹配当前的<a href=\"#!/api/Ext.form.field.Field-method-getValue\" rel=\"Ext.form.field.Field-method-getValue\" class=\"docClass\">value</a>。如果表单的\n<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a> 设置为true，将由\n<a href=\"#!/api/Ext.form.Basic\" rel=\"Ext.form.Basic\" class=\"docClass\">Ext.form.Basic</a>.<a href=\"#!/api/Ext.form.Basic-method-setValues\" rel=\"Ext.form.Basic-method-setValues\" class=\"docClass\">setValues</a>调用</p>\n</div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>继续事件的触发(见suspendEvents)。 ...</div><div class='long'><p>继续事件的触发(见<a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)。</p>\n\n<p>如果事件被使用<code>queueSuspended</code>参数挂起, 那么所有\n在事件挂起期间触发的事件将会被发送到任意监听器。</p>\n</div></div></div><div id='method-savePropToState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-savePropToState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-savePropToState' class='name expandable'>savePropToState</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> propName, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> stateName</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>有条件的保存单独的属性从this对象到给定的state对象。 ...</div><div class='long'><p>有条件的保存单独的属性从this对象到给定的state对象。\n这个想法只保存初始状态改变后的状态，\n使得当前的软件设置不覆盖未来软件设置。\n仅用户改变状态的这些值应该被保存。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>propName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>要保存的属性名。</p>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>保存属性值的状态对象。</p>\n</div></li><li><span class='pre'>stateName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>(可选择的)state对象中用到的属性名</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>True 属性值保存成功返回true，否则返回false。</p>\n</div></li></ul></div></div></div><div id='method-savePropsToState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-savePropsToState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-savePropsToState' class='name expandable'>savePropsToState</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] propNames, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>收集实例附加命名的属性并且把它们当前值传递给状态对象。 ...</div><div class='long'><p>收集实例附加命名的属性并且把它们当前值传递给状态对象。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>propNames</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>要保存的属性名(或者一组属性名)。</p>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>保存属性值的状态对象</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>state</p>\n</div></li></ul></div></div></div><div id='method-saveState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-method-saveState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-method-saveState' class='name expandable'>saveState</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>保存对象的状态到持久存储。 ...</div><div class='long'><p>保存对象的状态到持久存储。</p>\n</div></div></div><div id='method-scrollBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-scrollBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-scrollBy' class='name expandable'>scrollBy</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> deltaX, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> deltaY, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> animate</span> )</div><div class='description'><div class='short'>滚动组件target element 的元素由传入三角点，选择动画。 ...</div><div class='long'><p>滚动组件<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">target element</a> 的元素由传入三角点，选择动画。</p>\n\n<p>以下是等价的:</p>\n\n<pre><code> comp.scrollBy(10, 10, true);\n comp.scrollBy([10, 10], true);\n comp.scrollBy({ x: 10, y: 10 }, true);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deltaX</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>要么x三角点,一个数组指定x和y增量或一个对象\n以“x”和“y”属性。</p>\n</div></li><li><span class='pre'>deltaY</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>无论在y三角点，或一个的动画标志或配置对象。</p>\n</div></li><li><span class='pre'>animate</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>动画标志/配置对象的动画，如果增量值分别传递。</p>\n</div></li></ul></div></div></div><div id='method-selectText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-method-selectText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-method-selectText' class='name expandable'>selectText</a>( <span class='pre'>[<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> start], [<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> end]</span> )</div><div class='description'><div class='short'>选择表单项中的文本 ...</div><div class='long'><p>选择表单项中的文本</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>(可选)选中的起点索引(默认为0)</p>\n<p>Defaults to: <code>0</code></p></div></li><li><span class='pre'>end</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>(可选)选中的结束索引(默认为文本长度)</p>\n</div></li></ul></div></div></div><div id='method-sequenceFx' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-sequenceFx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-sequenceFx' class='name expandable'>sequenceFx</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>确保此对象 在syncFx之后队列中的所有动画特效串行地执行. ...</div><div class='long'><p>确保此对象 在syncFx之后队列中的所有动画特效串行地执行.\n这是与 <a href=\"#!/api/Ext.util.Animate-method-syncFx\" rel=\"Ext.util.Animate-method-syncFx\" class=\"docClass\">syncFx</a> 相反的方法.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setActive' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-setActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-setActive' class='name expandable'>setActive</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> active], [<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> newActive]</span> )</div><div class='description'><div class='short'>此方法仅供 Ext.ZIndexManager 内部调用, 用来标记一个浮动组件(floating Component)或者被移动到其 zIndex 栈的顶部,\n或者从其zIndex 栈的顶部被推入(pushed from the t...</div><div class='long'><p>此方法仅供 <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">Ext.ZIndexManager</a> 内部调用, 用来标记一个浮动组件(floating Component)或者被移动到其 zIndex 栈的顶部,\n或者从其zIndex 栈的顶部被推入(pushed from the top of its zIndex stack).</p>\n\n<p>如果一个 <em>Window</em> 被另一个 Window 所取代, 则将其停用,并隐藏它的阴影.</p>\n\n<p>此方法也将触发 <a href=\"#!/api/Ext.Component-event-activate\" rel=\"Ext.Component-event-activate\" class=\"docClass\">activate</a> 或者\n<a href=\"#!/api/Ext.Component-event-deactivate\" rel=\"Ext.Component-event-deactivate\" class=\"docClass\">deactivate</a> 事件,取决于具体所发生的事情.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>active</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置为true来激活组件,设 为 false 则停用.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>newActive</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> (optional)<div class='sub-desc'><p>新的 将霸占顶端的 zIndex 位置 的活动(active)组件.</p>\n</div></li></ul></div></div></div><div id='method-setActiveError' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-setActiveError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-setActiveError' class='name expandable'>setActiveError</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> msg</span> )</div><div class='description'><div class='short'>设置主动错误消息到给定字符串。这个函数用给定的字符串替换全部错误消息内容。 ...</div><div class='long'><p>设置主动错误消息到给定字符串。这个函数用给定的字符串替换全部错误消息内容。\n参考<a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a>，接受消息数组并依据<a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>格式化它们。\n注意，这只修改错误消息元素的文本和属性，你得调用doComponentLayout来真正修改匹配的域布局。\n如果域扩展了<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>，应调用<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a>代替。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>msg</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>错误消息</p>\n</div></li></ul></div></div></div><div id='method-setActiveErrors' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-setActiveErrors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-setActiveErrors' class='name expandable'>setActiveErrors</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] errors</span> )</div><div class='description'><div class='short'>设置主动错误消息到错误消息的数组。消息已经使用activeErrorsTpl被格式化到一个单独的消息字符串。 ...</div><div class='long'><p>设置主动错误消息到错误消息的数组。消息已经使用<a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>被格式化到一个单独的消息字符串。\n参考<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a>，它允许用一个单独的字符串设置整个错误内容。\n注意，这只修改错误消息元素的文本和属性，你得调用doComponentLayout来真正修改域匹配的布局。\n如果域扩展了<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>，应调用<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a>替代。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>errors</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>错误消息</p>\n</div></li></ul></div></div></div><div id='method-setAutoScroll' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-setAutoScroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-setAutoScroll' class='name expandable'>setAutoScroll</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> scroll</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置溢出的内容元素的组件。 ...</div><div class='long'><p>设置溢出的内容元素的组件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>scroll</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>滚动为真让组件自动滚动。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setBorder' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setBorder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setBorder' class='name expandable'>setBorder</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> border</span> )</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>border</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>边框, 参见 <a href=\"#!/api/Ext.AbstractComponent-cfg-border\" rel=\"Ext.AbstractComponent-cfg-border\" class=\"docClass\">border</a>. 如果一个 falsey 值(包含 0 null '' NaN undefined false)传递过去了,\n边框将被移除.</p>\n</div></li></ul></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> applyIfNotSet</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>设置配置项 ...</div><div class='long'><p>设置配置项</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setDisabled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setDisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setDisabled' class='name expandable'>setDisabled</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> disabled</span> )</div><div class='description'><div class='short'>启用或者禁用当前组件. ...</div><div class='long'><p>启用或者禁用当前组件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>disabled</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>true 是禁用组件.</p>\n</div></li></ul></div></div></div><div id='method-setDocked' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setDocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setDocked' class='name expandable'>setDocked</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> dock, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> layoutParent]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置此组件在其父面板的停靠位置. ...</div><div class='long'><p>设置此组件在其父面板的停靠位置. 注意,\n如果此组件是含有 DockLayout 的父面板的集合的一部分, 此设置才有效果.(注意, 任何面板上默认有一个 DockLayout)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dock</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>停靠位置.</p>\n</div></li><li><span class='pre'>layoutParent</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>设置 true 重新布局组件的父容器.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setEditable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-setEditable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-setEditable' class='name expandable'>setEditable</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> editable</span> )</div><div class='description'><div class='short'>设置表单项的是否可编辑的属性。这个方法在运行时使用，相当于在配置时使用'editable'属性。 ...</div><div class='long'><p>设置表单项的是否可编辑的属性。这个方法在运行时使用，相当于在配置时使用'editable'属性。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>editable</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为True允许用户直接在表单项的文本框输入。如果设置为false， the user\n用户只能通过trigger按钮来修改表单项的值。此时可以通过一个文本框的点击事件来调用trigger事件。</p>\n</div></li></ul></div></div></div><div id='method-setFieldDefaults' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-setFieldDefaults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-setFieldDefaults' class='name expandable'>setFieldDefaults</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> defaults</span> )</div><div class='description'><div class='short'>应用一组默认配置的值到此Labelable实例。 ...</div><div class='long'><p>应用一组默认配置的值到此Labelable实例。\n对于每一个给定的对象，检查是否该组件配置了hasOwnProperty，\n如果没有，那么他继承了其原型的默认值，我们应使用默认值。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>defaults</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>应用到对象的默认值。</p>\n</div></li></ul></div></div></div><div id='method-setFieldLabel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-setFieldLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-setFieldLabel' class='name expandable'>setFieldLabel</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> label</span> )</div><div class='description'><div class='short'>设置这个域的标签。 ...</div><div class='long'><p>设置这个域的标签。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>新标签。<a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>会被自动附加到标签字符串。</p>\n</div></li></ul></div></div></div><div id='method-setFieldStyle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-setFieldStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-setFieldStyle' class='name expandable'>setFieldStyle</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> style</span> )</div><div class='description'><div class='short'>设置field input element中的CSS style。 ...</div><div class='long'><p>设置<a href=\"#!/api/Ext.form.field.Base-property-inputEl\" rel=\"Ext.form.field.Base-property-inputEl\" class=\"docClass\">field input element</a>中的<a href=\"#!/api/Ext.form.field.Base-cfg-fieldStyle\" rel=\"Ext.form.field.Base-cfg-fieldStyle\" class=\"docClass\">CSS style</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>style</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>即指被应用的类型，必须是可用的{@linkExt.Element#applyStyles}类型。</p>\n</div></li></ul></div></div></div><div id='method-setHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setHeight' class='name expandable'>setHeight</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> height</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置组件的高度. ...</div><div class='long'><p>设置组件的高度. 这个方法会触发 <a href=\"#!/api/Ext.AbstractComponent-event-resize\" rel=\"Ext.AbstractComponent-event-resize\" class=\"docClass\">resize</a> 事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>设置的新的高度. 这可能是一种:</p>\n\n<ul>\n<li>一个 Number 类型指定 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> 新的高度 <a href=\"#!/api/Ext.dom.Element-property-defaultUnit\" rel=\"Ext.dom.Element-property-defaultUnit\" class=\"docClass\">Ext.Element.defaultUnit</a> (默认为像素).</li>\n<li>一个 String 类型用于设置高度的 CSS 样式.</li>\n<li><em>undefined</em> 保留原来的宽度不变.</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setLoading' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-setLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-setLoading' class='name expandable'>setLoading</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> load, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> targetEl]</span> ) : <a href=\"#!/api/Ext.LoadMask\" rel=\"Ext.LoadMask\" class=\"docClass\">Ext.LoadMask</a></div><div class='description'><div class='short'>此方法允许你显示或隐藏LoadMask这个组件上。 ...</div><div class='long'><p>此方法允许你显示或隐藏LoadMask这个组件上。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>load</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>加载LoadMask显示默认为true LoadMask构造函数将被传递给一个配置对象，\n或显示一个消息字符串。隐藏当前LoadMask为false。</p>\n</div></li><li><span class='pre'>targetEl</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>如果为true掩盖的targetEl此组件，而不是的<code>this.el</code>。\n例如，设置面板上true会导致容器被屏蔽。</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.LoadMask\" rel=\"Ext.LoadMask\" class=\"docClass\">Ext.LoadMask</a></span><div class='sub-desc'><p>LoadMask 实例</p>\n</div></li></ul></div></div></div><div id='method-setOverflowXY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-setOverflowXY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-setOverflowXY' class='name expandable'>setOverflowXY</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> overflowX, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> overflowY</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置溢出x / y的内容元素的组件.x / y的溢出值可以是任何有效的CSS溢出\n（例如，“自动”或“滚动”）.默认情况下，被'隐藏'。 ...</div><div class='long'><p>设置溢出x / y的内容元素的组件.x / y的溢出值可以是任何有效的CSS溢出\n（例如，“自动”或“滚动”）.默认情况下，被'隐藏'。\n传递null值将清除内联样式。传递未定义将保持当前值。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>overflowX</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The overflow-x value.\noverflowX溢出x的值</p>\n</div></li><li><span class='pre'>overflowY</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The overflow-y value.\noverflowY溢出y的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setPagePosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-setPagePosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-setPagePosition' class='name expandable'>setPagePosition</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> x, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> y, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> animate]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置页面的XY位置的组件。左侧和顶部，而不是要设置，使用setPosition方法. ...</div><div class='long'><p>设置页面的XY位置的组件。左侧和顶部，而不是要设置，使用<a href=\"#!/api/Ext.Component-method-setPosition\" rel=\"Ext.Component-method-setPosition\" class=\"docClass\">setPosition</a>方法.\n该方法触发<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>新的X位置</p>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>新的y位置</p>\n</div></li><li><span class='pre'>animate</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>动画]true到新的位置，以动画的组件。您也可以通过\n动画配置。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setPosition' class='name expandable'>setPosition</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> left, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> top, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> animate]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置组件的 left 和 top 值. ...</div><div class='long'><p>设置组件的 left 和 top 值. 设置组件的页面XY值, 使用 setPagePosition 方法.\n该方法触发 <a href=\"#!/api/Ext.AbstractComponent-event-move\" rel=\"Ext.AbstractComponent-event-move\" class=\"docClass\">move</a> 事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new left</p>\n</div></li><li><span class='pre'>top</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new top</p>\n</div></li><li><span class='pre'>animate</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>如果设置 true, 组件是带着动画效果到新的位置.\n你也可以通过一个动画配置.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setRawValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-setRawValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-setRawValue' class='name expandable'>setRawValue</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>直接设置表单项原始值，不通过 value conversion转换、变化检测和验证。要利用另外的检测进行值设定，请参见 setValue。 ...</div><div class='long'><p>直接设置表单项原始值，不通过 <a href=\"#!/api/Ext.form.field.Base-method-valueToRaw\" rel=\"Ext.form.field.Base-method-valueToRaw\" class=\"docClass\">value conversion</a>转换、变化检测和验证。要利用另外的检测进行值设定，请参见 <a href=\"#!/api/Ext.form.field.Base-method-setValue\" rel=\"Ext.form.field.Base-method-setValue\" class=\"docClass\">setValue</a>。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>需要设置的值</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>value 表单项已有值</p>\n</div></li></ul></div></div></div><div id='method-setReadOnly' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Trigger' rel='Ext.form.field.Trigger' class='defined-in docClass'>Ext.form.field.Trigger</a><br/><a href='source/Trigger.html#Ext-form-field-Trigger-method-setReadOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Trigger-method-setReadOnly' class='name expandable'>setReadOnly</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> readOnly</span> )</div><div class='description'><div class='short'>设置表单项的只读属性。这个方法在运行时使用，相当于在配置时使用'readOnly'属性。 ...</div><div class='long'><p>设置表单项的只读属性。这个方法在运行时使用，相当于在配置时使用'readOnly'属性。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readOnly</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>设置为True阻止用户修改表单项的值并隐藏trigger按钮。\n如果此值为true，先于editable和hideTrigger选项使用。如果此值为false，后于editable和hideTrigger选项使用。</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Base-method-setReadOnly' rel='Ext.form.field.Base-method-setReadOnly' class='docClass'>Ext.form.field.Base.setReadOnly</a></p></div></div></div><div id='method-setSize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setSize' class='name expandable'>setSize</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> width, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> height</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置组件的宽度和高度. ...</div><div class='long'><p>设置组件的宽度和高度. 此方法触发 <a href=\"#!/api/Ext.AbstractComponent-event-resize\" rel=\"Ext.AbstractComponent-event-resize\" class=\"docClass\">resize</a> 事件. 此方法可以接收单独的 width 或者 height 值作为参数,\n或者你可以传递像这样的一个 size 对象: <code>{width:10, height:20}</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>设置新的宽度值. 这可以是:</p>\n\n<ul>\n<li>一个 Number 类型指定 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> 新的宽度 <a href=\"#!/api/Ext.dom.Element-property-defaultUnit\" rel=\"Ext.dom.Element-property-defaultUnit\" class=\"docClass\">Ext.Element.defaultUnit</a> (默认为像素).</li>\n<li>一个 String 类型用于设置宽度的 CSS 样式.</li>\n<li>一个 size 对象格式为 <code>{width: widthValue, height: heightValue}</code>.</li>\n<li><code>undefined</code> 保留原来的宽度不变.</li>\n</ul>\n\n</div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>设置新的高度值 (如果第一个参数传递了一个size对象, 此参数没有必要传递).\n这可以是:</p>\n\n<ul>\n<li>一个 Number 类型指定 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> 新的高度 <a href=\"#!/api/Ext.dom.Element-property-defaultUnit\" rel=\"Ext.dom.Element-property-defaultUnit\" class=\"docClass\">Ext.Element.defaultUnit</a> (默认为像素).</li>\n<li>一个 String 类型用于设置高度的 CSS 样式. 也有可能不会被使用到.</li>\n<li><code>undefined</code> 保留原来的高度不变.</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setUI' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setUI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setUI' class='name expandable'>setUI</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> ui</span> )</div><div class='description'><div class='short'>设置组件的 UI. ...</div><div class='long'><p>设置组件的 UI. 这将删除任何现有的 UI 组件. 它将遍历组件中的所有的 uiCls 并重命名它们,\n使它们包含新的 UI.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ui</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>该组件的新的用户界面</p>\n</div></li></ul></div></div></div><div id='method-setValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-method-setValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-method-setValue' class='name expandable'>setValue</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>用空函数重写 ...</div><div class='long'><p>用空函数重写</p>\n<p>Overrides: <a href='#!/api/Ext.form.field.Text-method-setValue' rel='Ext.form.field.Text-method-setValue' class='docClass'>Ext.form.field.Text.setValue</a></p></div></div></div><div id='method-setVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setVisible' class='name expandable'>setVisible</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> visible</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>工具方法, 通过使用布尔值隐藏或者显示当前组件. ...</div><div class='long'><p>工具方法, 通过使用布尔值隐藏或者显示当前组件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>true 是显示, false 是隐藏</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-setWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-setWidth' class='name expandable'>setWidth</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> width</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置组件的宽度. ...</div><div class='long'><p>设置组件的宽度. 此方法触发 <a href=\"#!/api/Ext.AbstractComponent-event-resize\" rel=\"Ext.AbstractComponent-event-resize\" class=\"docClass\">resize</a> 事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>设置新的宽度值. 这可以是:</p>\n\n<ul>\n<li>一个 Number 类型指定 <a href=\"#!/api/Ext.AbstractComponent-method-getEl\" rel=\"Ext.AbstractComponent-method-getEl\" class=\"docClass\">Element</a> 新的宽度 <a href=\"#!/api/Ext.dom.Element-property-defaultUnit\" rel=\"Ext.dom.Element-property-defaultUnit\" class=\"docClass\">Ext.Element.defaultUnit</a> (默认为像素).</li>\n<li>一个 String 类型用于设置宽度的 CSS 样式.</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setupFramingTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='defined-in docClass'>Ext.util.Renderable</a><br/><a href='source/Renderable.html#Ext-util-Renderable-method-setupFramingTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Renderable-method-setupFramingTpl' class='name expandable'>setupFramingTpl</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> frameTpl</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Inject a reference to the function which applies the render template into the framing template. ...</div><div class='long'><p>Inject a reference to the function which applies the render template into the framing template. The framing template\nwraps the content.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameTpl</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-show' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-show' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-show' class='name expandable'>show</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> animateTarget], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>显示此组件，使其自动解析autoRender或floating浮动，如果是'真'。 ...</div><div class='long'><p>显示此组件，使其自动解析<a href=\"#!/api/Ext.Component-cfg-autoRender\" rel=\"Ext.Component-cfg-autoRender\" class=\"docClass\">autoRender</a>或<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动，如果是'真'。</p>\n\n<p>在显示之后，一个<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>浮动的组分（如一个<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>），\n被激活，并且其<a href=\"#!/api/Ext.Component-property-zIndexManager\" rel=\"Ext.Component-property-zIndexManager\" class=\"docClass\">z-index stack</a>的前面。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animateTarget</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> (optional)<div class='sub-desc'><p>仅适用于<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>组件如\n<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>或 <a href=\"#!/api/Ext.tip.ToolTip\" rel=\"Ext.tip.ToolTip\" class=\"docClass\">ToolTip</a>s，或固定组件已配置浮动：true`。\n组件动画从开通时的目标。</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>显示后的组件调用的回调函数。\n只有必要的，如果指定的动画。</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>作用域 (<code>this</code> reference)，\n其中执行回调。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-showAt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-showAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-showAt' class='name expandable'>showAt</a>( <span class='pre'><a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> x, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> y, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> animate]</span> )</div><div class='description'><div class='short'>显示组件在特定XY位置。 ...</div><div class='long'><p>显示组件在特定XY位置。\n一个浮动的组件（如菜单）被定位相对如有\n有用的弹出上下文菜单：\nUseful for popping up a context menu:</p>\n\n<pre><code>listeners: {\n    itemcontextmenu: function(view, record, item, index, event, options) {\n        <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.menu.Menu\" rel=\"Ext.menu.Menu\" class=\"docClass\">Ext.menu.Menu</a>', {\n            width: 100,\n            height: 100,\n            margin: '0 0 10 0',\n            items: [{\n                text: 'regular item 1'\n            },{\n                text: 'regular item 2'\n            },{\n                text: 'regular item 3'\n            }]\n        }).showAt(event.getXY());\n    }\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new x position</p>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The new y position</p>\n</div></li><li><span class='pre'>animate</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>如果为真就到新的位置以动画的组件\n您也可以通过动画配置。</p>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>获取从该对象被实例化的类的引用。 ...</div><div class='long'><p>获取从该对象被实例化的类的引用。 请注意不同于 <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code>是独立的作用域，无论<code>this</code>是否运行，总是返回其中的调用类。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // 总是等于'Cat'，无论'this'是什么，\n                                        // 相当于：My.Cat.speciesName\n\n        alert(this.self.speciesName);   // 依赖 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // 依赖 'this'\n\n        cloned.groupName = this.statics().speciesName;   // 相当于: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', 然后提示 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', 然后提示 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-stopAnimation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-stopAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-stopAnimation' class='name expandable'>stopAnimation</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></div><div class='description'><div class='short'>停止所有正在运行的特效,并清空此对象内部特效队列,如果此队列包含有尚未开始执行的那些特效. ...</div><div class='long'><p>停止所有正在运行的特效,并清空此对象内部特效队列,如果此队列包含有尚未开始执行的那些特效.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span><div class='sub-desc'><p>元素自身</p>\n</div></li></ul></div></div></div><div id='method-stopFx' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-stopFx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-stopFx' class='name expandable'>stopFx</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a><strong class='deprecated signature'>deprecated</strong></div><div class='description'><div class='short'>停止所有正在运行的特效,并清空此对象内部特效队列,如果此队列包含有尚未开始执行的那些特效. ...</div><div class='long'><p>停止所有正在运行的特效,并清空此对象内部特效队列,如果此队列包含有尚未开始执行的那些特效.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>从 4.0 开始被 <a href=\"#!/api/Ext.util.Animate-method-stopAnimation\" rel=\"Ext.util.Animate-method-stopAnimation\" class=\"docClass\">stopAnimation</a> 替代</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a></span><div class='sub-desc'><p>The Element</p>\n</div></li></ul></div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> queueSuspended</span> )</div><div class='description'><div class='short'>挂起所有事件的触发。(见resumeEvents) ...</div><div class='long'><p>挂起所有事件的触发。(见<a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>传true，让挂起的事件排队而不是丢弃所有挂起的事件，\n这些事件将会在调用<a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>之后触发。</p>\n</div></li></ul></div></div></div><div id='method-syncFx' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='defined-in docClass'>Ext.util.Animate</a><br/><a href='source/Animate.html#Ext-util-Animate-method-syncFx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Animate-method-syncFx' class='name expandable'>syncFx</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>确保此对象 在syncFx之后队列中的所有动画特效并行地执行. ...</div><div class='long'><p>确保此对象 在syncFx之后队列中的所有动画特效并行地执行.\n这是与 <a href=\"#!/api/Ext.util.Animate-method-sequenceFx\" rel=\"Ext.util.Animate-method-sequenceFx\" class=\"docClass\">sequenceFx</a> 相反的方法.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-toBack' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-toBack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-toBack' class='name expandable'>toBack</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>将此组件置于其他(所有)可见窗口的背后 (设置更小的 z-index 值) ...</div><div class='long'><p>将此组件置于其他(所有)可见窗口的背后 (设置更小的 z-index 值)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-toFront' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='defined-in docClass'>Ext.util.Floating</a><br/><a href='source/Floating.html#Ext-util-Floating-method-toFront' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Floating-method-toFront' class='name expandable'>toFront</a>( <span class='pre'>[<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> preventFocus]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>将此浮动组件置于同一 ZIndexManager 管理器所管理的所有可见元素的顶层. ...</div><div class='long'><p>将此浮动组件置于同一 <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a> 管理器所管理的所有可见元素的顶层.</p>\n\n<p>如果此组件式模态(modal)的, 以比此组件只小一点的 z-index值 插入模态遮罩层.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>preventFocus</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>指定为 <code>true</code> 来阻止此组件获得焦点.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>配置扩展 ...</div><div class='long'><p>配置扩展</p>\n</div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-un' class='name expandable'>un</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> fn, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )</div><div class='description'><div class='short'>removeListener的简写方法\n\n移除事件处理函数。 ...</div><div class='long'><p><a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>的简写方法</p>\n\n<p>移除事件处理函数。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>事件处理函数关联的事件类型</p>\n\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>待移除的事件处理函数。 <strong>必须是对传递给<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n的函数的引用。</strong></p>\n\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>(可选的) 原先为事件处理函数指定的作用域。\n它必须是和原先调用<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>时指定的作用域参数是一样的，否者监听器将会被移除。</p>\n\n</div></li></ul></div></div></div><div id='method-unsetActiveError' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-method-unsetActiveError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-method-unsetActiveError' class='name expandable'>unsetActiveError</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>清除主动错误消息。注意，这只清除错误消息元素的文本和属性，你得调用doComponentLayout来真正修改域匹配的布局。 ...</div><div class='long'><p>清除主动错误消息。注意，这只清除错误消息元素的文本和属性，你得调用doComponentLayout来真正修改域匹配的布局。\n如果域扩展了<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>，应调用<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a>替代。</p>\n</div></div></div><div id='method-up' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-up' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-up' class='name expandable'>up</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> selector]</span> ) : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></div><div class='description'><div class='short'>沿着 ownerCt 查找匹配简单选择器的祖先容器. ...</div><div class='long'><p>沿着 <code>ownerCt</code> 查找匹配简单选择器的祖先容器.</p>\n\n<p>例如:</p>\n\n<pre><code>var owningTabPanel = grid.up('tabpanel');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selector</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>用来检验的简单选择器.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></span><div class='sub-desc'><p>匹配的祖先容器 (或者 <code>undefined</code> 如果未找到匹配).</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-update' class='name expandable'>update</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> htmlOrData, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> loadScripts], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback]</span> )</div><div class='description'><div class='short'>刷新组件的内部区域. ...</div><div class='long'><p>刷新组件的内部区域.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>htmlOrData</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>如果已经通过tpl为当前组件配置了一个模板,\n那么将会使用此参数来装配模板. 如果没有为当前组件配置模板,\n组件的内容区域将会通过 <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> 进行刷新.</p>\n</div></li><li><span class='pre'>loadScripts</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>只有在使用 html 配置时此参数才合法.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>只有在使用 html 配置时此参数才合法. 当脚本加载完成时回调函数才被执行.</p>\n</div></li></ul></div></div></div><div id='method-updateAria' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-updateAria' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-updateAria' class='name expandable'>updateAria</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Injected as an override by Ext.Aria.initialize ...</div><div class='long'><p>Injected as an override by Ext.Aria.initialize</p>\n</div></div></div><div id='method-updateBox' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Component' rel='Ext.Component' class='defined-in docClass'>Ext.Component</a><br/><a href='source/Component.html#Ext-Component-method-updateBox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Component-method-updateBox' class='name expandable'>updateBox</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> box</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></div><div class='description'><div class='short'>设置当前框组件的基本元素测量。 ...</div><div class='long'><p>设置当前框组件的基本元素测量。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>box</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>对象的格式{X，Y，宽度，高度}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-updateLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-method-updateLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-method-updateLayout' class='name expandable'>updateLayout</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> options</span> )</div><div class='description'><div class='short'>更改此组件的布局. ...</div><div class='long'><p>更改此组件的布局. 如果此更新影响此组件 <a href=\"#!/api/Ext.AbstractComponent-property-ownerCt\" rel=\"Ext.AbstractComponent-property-ownerCt\" class=\"docClass\">ownerCt</a>,\n该组件的 <code>updateLayout</code> 方法将被调用执行而不是布局.\n否则, 仅仅这个组件 (及其子项) 将被布局.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>一个布局配置对象.</p>\n<ul><li><span class='pre'>defer</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>如果这个布局需要延迟设置 true.</p>\n</div></li><li><span class='pre'>isRoot</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>如果这个布局需要从顶层布局.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-validate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-method-validate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-method-validate' class='name expandable'>validate</a>( <span class='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>通过validating表单项的当前值，返回当前表单项是否有效\n自从上次验证后如果这个有效性有变化触发validitychange事件\nNote:disabled表单项总是视为有效的。 ...</div><div class='long'><p>通过<a href=\"#!/api/Ext.form.field.Field-method-getErrors\" rel=\"Ext.form.field.Field-method-getErrors\" class=\"docClass\">validating</a>表单项的当前值，返回当前表单项是否有效\n自从上次验证后如果这个有效性有变化触发<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>事件\n<strong>Note</strong>:<a href=\"#!/api/Ext.form.field.Field-cfg-disabled\" rel=\"Ext.form.field.Field-cfg-disabled\" class=\"docClass\">disabled</a>表单项总是视为有效的。</p>\n\n<p>子类实现允许这个方法有其他的副作用，如触发信息错误显示\n想要验证实现没有副作用，使用<a href=\"#!/api/Ext.form.field.Field-method-isValid\" rel=\"Ext.form.field.Field-method-isValid\" class=\"docClass\">isValid</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>rue 如果值有效, 否则 false</p>\n</div></li></ul></div></div></div><div id='method-validateValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-validateValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-validateValue' class='name expandable'>validateValue</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>利用getErrors得到一组校验错误数组。 ...</div><div class='long'><p>利用<a href=\"#!/api/Ext.form.field.Base-method-getErrors\" rel=\"Ext.form.field.Base-method-getErrors\" class=\"docClass\">getErrors</a>得到一组校验错误数组。\n当发生任一错误时，它们会被传入到<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a>中，并且返回false，否则返回true.\n在之前的版本中，通过创建子类以提供处理校验的函数实现，从3.2版本起，利用重载<a href=\"#!/api/Ext.form.field.Base-method-getErrors\" rel=\"Ext.form.field.Base-method-getErrors\" class=\"docClass\">getErrors</a> 代替。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>校验值。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p>如果校验通过则返回true，如果一个或多个校验失败，则返回false。</p>\n</div></li></ul></div></div></div><div id='method-valueToRaw' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-method-valueToRaw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-method-valueToRaw' class='name expandable'>valueToRaw</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> value</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>将复合类型的值转换成适合于在表单中显示的原始值。此项控制了被传入setValue的值向用户展示的方式，包括本地化。 ...</div><div class='long'><p>将复合类型的值转换成适合于在表单中显示的原始值。此项控制了被传入<a href=\"#!/api/Ext.form.field.Base-method-setValue\" rel=\"Ext.form.field.Base-method-setValue\" class=\"docClass\">setValue</a>的值向用户展示的方式，包括本地化。\n例如，对于<a href=\"#!/api/Ext.form.field.Date\" rel=\"Ext.form.field.Date\" class=\"docClass\">Ext.form.field.Date</a>类型，它决定了一个Date对象传入到 <a href=\"#!/api/Ext.form.field.Base-method-setValue\" rel=\"Ext.form.field.Base-method-setValue\" class=\"docClass\">setValue</a>将被转化成一个字符串符以供在表单中展示。</p>\n\n<p>对于相反的转换，请参见<a href=\"#!/api/Ext.form.field.Base-method-rawToValue\" rel=\"Ext.form.field.Base-method-rawToValue\" class=\"docClass\">rawToValue</a>。</p>\n\n<p>基类仅仅实现了标准的字符串转换，将<a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">empty values</a>转换成一个空的字符串。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>将要转化成原始值的复合类型值。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>value 转换后的值。</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addMembers' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>方法/属性添加到这个类的原型。 ...</div><div class='long'><p>方法/属性添加到这个类的原型。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>添加/重写这个类的静态属性。 ...</div><div class='long'><p>添加/重写这个类的静态属性。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>成员</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a> fromClass, <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='private signature'>private</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>这个类的原型借用另一个类的成员\n\nExt.define('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n...</div><div class='long'><p>这个类的原型借用另一个类的成员</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>借用成员的类</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>借用成员的名称</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this 借用成员</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>创建这个类的新实例。 ...</div><div class='long'><p>创建这个类的新实例。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>所有参数传递至类的构造。</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>创建的实例。</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> , <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> origin</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>创建现有的原型方法的别名。例如：\n\nExt.define('My.cool.Class', {\n    method1: function() { ... ...</div><div class='long'><p>创建现有的原型方法的别名。例如：</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>别名新方法的名称，或对象设置多个别名。\n参见<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>原来的方法名</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>以字符串格式，获取当前类的名称。 ...</div><div class='long'><p>以字符串格式，获取当前类的名称。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>className 类名</p>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='deprecated signature'>deprecated</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>重写这个类的成员。通过callParent重写的方法可以调用。 ...</div><div class='long'><p>重写这个类的成员。通过<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>重写的方法可以调用。</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!我要成为一只猫！\"\n                          // alerts \"I'm a cat!我是一只猫！\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>在4.1版本, 直接利用这种方法已经过时了。 使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\n代替:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>以上完成了相同的结果，但可以由<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>重写，\n其目标类和生成过程中，可以决定是否需要根据目标类所需的状态覆盖管理(My.Cat)。</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>使用 <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> 代替</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>添加到这个类的属性。\n这应当被指定为一个对象包含一个或多个属性的文字。</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class 当前类</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-activate' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-activate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-activate' class='name expandable'>activate</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件激活后触发. ...</div><div class='long'><p>组件激活后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-added' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-added' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-added' class='name expandable'>added</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> container, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> pos, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件被添加到一个容器后触发. ...</div><div class='long'><p>组件被添加到一个容器后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>container</span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a><div class='sub-desc'><p>父容器</p>\n</div></li><li><span class='pre'>pos</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>组件的位置索引</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-afterrender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-afterrender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-afterrender' class='name expandable'>afterrender</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在组件渲染完成之后触发. ...</div><div class='long'><p>在组件渲染完成之后触发.</p>\n\n<p>afterrender 事件在当前组件被 <a href=\"#!/api/Ext.AbstractComponent-property-rendered\" rel=\"Ext.AbstractComponent-property-rendered\" class=\"docClass\">rendered</a> 之后,\n在为组件定义的所有afterRender方法执行之后 触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-autosize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-event-autosize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-event-autosize' class='name expandable'>autosize</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a> this, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> width, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当这个函数调用时事件被触发并且表单项大小根据grow/growMin/growMax配置重新调整。 ...</div><div class='long'><p>当这个函数调用时事件被触发并且表单项大小根据<a href=\"#!/api/Ext.form.field.Text-cfg-grow\" rel=\"Ext.form.field.Text-cfg-grow\" class=\"docClass\">grow</a>/<a href=\"#!/api/Ext.form.field.Text-cfg-growMin\" rel=\"Ext.form.field.Text-cfg-growMin\" class=\"docClass\">growMin</a>/<a href=\"#!/api/Ext.form.field.Text-cfg-growMax\" rel=\"Ext.form.field.Text-cfg-growMax\" class=\"docClass\">growMax</a>配置重新调整。\n这个事件为开发者提供了一个钩子，在需要的时候可以使得在运行时应用额外的逻辑去调整表单项的大小。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a><div class='sub-desc'><p>当前文本表单项</p>\n</div></li><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>当前表单项调整后的新宽度</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeactivate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforeactivate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforeactivate' class='name expandable'>beforeactivate</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件激活前触发. ...</div><div class='long'><p>组件激活前触发.\n事件监听返回 false 能阻止激活的发生.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforedeactivate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforedeactivate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforedeactivate' class='name expandable'>beforedeactivate</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件失去激活前触发. ...</div><div class='long'><p>组件失去激活前触发.\n事件监听返回 false 能阻止失去激活的发生.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforedestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforedestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforedestroy' class='name expandable'>beforedestroy</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件被 destroy前触发. ...</div><div class='long'><p>组件被 <a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">destroy</a>前触发.\n在事件监听中返回 false 可以停止<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">destroy</a>操作.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforehide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforehide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforehide' class='name expandable'>beforehide</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当调用 hide 方法组件隐藏前触发. ...</div><div class='long'><p>当调用 <a href=\"#!/api/Ext.AbstractComponent-event-hide\" rel=\"Ext.AbstractComponent-event-hide\" class=\"docClass\">hide</a> 方法组件隐藏前触发.\n从事件处理返回 false 将停止隐藏.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforerender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforerender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforerender' class='name expandable'>beforerender</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在组件渲染 rendered之前触发. ...</div><div class='long'><p>在组件渲染 <a href=\"#!/api/Ext.AbstractComponent-property-rendered\" rel=\"Ext.AbstractComponent-property-rendered\" class=\"docClass\">rendered</a>之前触发.\n在事件监听器中返回 false 可以停止<a href=\"#!/api/Ext.AbstractComponent-event-render\" rel=\"Ext.AbstractComponent-event-render\" class=\"docClass\">render</a>操作.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeshow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-beforeshow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-beforeshow' class='name expandable'>beforeshow</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当调用 show 方法组件显示前触发. ...</div><div class='long'><p>当调用 <a href=\"#!/api/Ext.AbstractComponent-event-show\" rel=\"Ext.AbstractComponent-event-show\" class=\"docClass\">show</a> 方法组件显示前触发.\n从事件处理返回 false 将停止显示.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforestaterestore' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-event-beforestaterestore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-event-beforestaterestore' class='name expandable'>beforestaterestore</a>( <span class='pre'><a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在state对象被恢复之前触发。从一个事件处理程序返回false来阻止恢复。 ...</div><div class='long'><p>在state对象被恢复之前触发。从一个事件处理程序返回false来阻止恢复。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a><div class='sub-desc'>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>散列值StateProvider返回的状态。\n如果这个事件没有被禁止，然而state对象被传递到<b><tt>applyState</tt></b>。\n默认情况下，这只是拷贝到这个对象的属性值。\n重载的方法也许来提供自定义的状态恢复。</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforestatesave' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-event-beforestatesave' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-event-beforestatesave' class='name expandable'>beforestatesave</a>( <span class='pre'><a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在state对象保存到配置state的提供者之前触发。返回false来阻止保存。 ...</div><div class='long'><p>在state对象保存到配置state的提供者之前触发。返回false来阻止保存。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a><div class='sub-desc'>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>state的散列值。这是通过调用<b><tt>getState()</tt></b>确定的对象。</p>\n\n<p>这个方法必须由开发人员提供返回什么来代表state是必须的，\n默认情况下，Ext.state.Stateful有一个null实现。</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-blur' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-blur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-blur' class='name expandable'>blur</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> The, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件失去焦点时触发. ...</div><div class='long'><p>组件失去焦点时触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>The</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'><p>blur event.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-boxready' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-boxready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-boxready' class='name expandable'>boxready</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> width, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> height, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>触发 一次 - 组件首次布局初始化大小后触发. ...</div><div class='long'><p>触发 <em>一次</em> - 组件首次布局初始化大小后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The initial width</p>\n</div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The initial height</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-change' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.form.field.File'>Ext.form.field.File</span><br/><a href='source/File.html#Ext-form-field-File-event-change' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.File-event-change' class='name expandable'>change</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.File\" rel=\"Ext.form.field.File\" class=\"docClass\">Ext.ux.form.FileUploadField</a> this, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> , <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当用户从系统文件选择窗口选择了一个新文件，并改变了原来File表单项的值时触发。 ...</div><div class='long'><p>当用户从系统文件选择窗口选择了一个新文件，并改变了原来File表单项的值时触发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.File\" rel=\"Ext.form.field.File\" class=\"docClass\">Ext.ux.form.FileUploadField</a><div class='sub-desc'>\n</div></li><li><span class='pre'></span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>通过基础的File表单项返回的文件的值</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.form.field.Field-event-change' rel='Ext.form.field.Field-event-change' class='docClass'>Ext.form.field.Field.change</a></p></div></div></div><div id='event-deactivate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-deactivate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-deactivate' class='name expandable'>deactivate</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件失去激活后触发. ...</div><div class='long'><p>组件失去激活后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-destroy' class='name expandable'>destroy</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在组件被 destroy 之后触发. ...</div><div class='long'><p>在组件被 <a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">destroy</a> 之后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-dirtychange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-event-dirtychange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-event-dirtychange' class='name expandable'>dirtychange</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a> this, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> isDirty, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>Fires when a change in the field's isDirty state is detected. ...</div><div class='long'><p>Fires when a change in the field's <a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">isDirty</a> state is detected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a><div class='sub-desc'>\n</div></li><li><span class='pre'>isDirty</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>Whether or not the field is now dirty</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-disable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-disable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-disable' class='name expandable'>disable</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件被禁用后触发. ...</div><div class='long'><p>组件被禁用后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-enable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-enable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-enable' class='name expandable'>enable</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件被启用后触发. ...</div><div class='long'><p>组件被启用后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-errorchange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='defined-in docClass'>Ext.form.Labelable</a><br/><a href='source/Labelable.html#Ext-form-Labelable-event-errorchange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.Labelable-event-errorchange' class='name expandable'>errorchange</a>( <span class='pre'><a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a> this, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> error, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>经由setActiveError，当有效错误消息改变时触发。 ...</div><div class='long'><p>经由<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a>，当有效错误消息改变时触发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a><div class='sub-desc'>\n</div></li><li><span class='pre'>error</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>有效错误消息</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-focus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-focus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-focus' class='name expandable'>focus</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> The, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件获取焦点时触发. ...</div><div class='long'><p>组件获取焦点时触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>The</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'><p>focus event.</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-hide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-hide' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-hide' class='name expandable'>hide</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件被隐藏后触发, 当调用 hide 方法隐藏组件后触发. ...</div><div class='long'><p>组件被隐藏后触发, 当调用 <a href=\"#!/api/Ext.AbstractComponent-event-hide\" rel=\"Ext.AbstractComponent-event-hide\" class=\"docClass\">hide</a> 方法隐藏组件后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-keydown' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-event-keydown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-event-keydown' class='name expandable'>keydown</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> e, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>输入栏的keydown事件。 ...</div><div class='long'><p>输入栏的keydown事件。 只有在 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-enableKeyEvents\" rel=\"Ext.form.field.Text-cfg-enableKeyEvents\" class=\"docClass\">enableKeyEvents</a></strong> 被设置为true时才触发此事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a><div class='sub-desc'><p>当前文本表单项</p>\n</div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-keypress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-event-keypress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-event-keypress' class='name expandable'>keypress</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> e, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>输入栏的keypress事件。 ...</div><div class='long'><p>输入栏的keypress事件。 只有在 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-enableKeyEvents\" rel=\"Ext.form.field.Text-cfg-enableKeyEvents\" class=\"docClass\">enableKeyEvents</a></strong> 被设置为true时才触发此事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a><div class='sub-desc'><p>当前文本表单项</p>\n</div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-keyup' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Text' rel='Ext.form.field.Text' class='defined-in docClass'>Ext.form.field.Text</a><br/><a href='source/Text2.html#Ext-form-field-Text-event-keyup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Text-event-keyup' class='name expandable'>keyup</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> e, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>输入栏的keyup事件。 ...</div><div class='long'><p>输入栏的keyup事件。 只有在 <strong><a href=\"#!/api/Ext.form.field.Text-cfg-enableKeyEvents\" rel=\"Ext.form.field.Text-cfg-enableKeyEvents\" class=\"docClass\">enableKeyEvents</a></strong> 被设置为true时才触发此事件。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a><div class='sub-desc'><p>当前文本表单项</p>\n</div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-move' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-move' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-move' class='name expandable'>move</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> x, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> y, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>组件移动之后触发. ...</div><div class='long'><p>组件移动之后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>x</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>新的X坐标</p>\n</div></li><li><span class='pre'>y</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>新的Y坐标</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-removed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-removed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-removed' class='name expandable'>removed</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> ownerCt, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当组件从一个容器中移除时触发 ...</div><div class='long'><p>当组件从一个容器中移除时触发</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>ownerCt</span> : <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a><div class='sub-desc'><p>持有组件的容器</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-render' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-render' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-render' class='name expandable'>render</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在组件被 rendered 之后触发. ...</div><div class='long'><p>在组件被 <a href=\"#!/api/Ext.AbstractComponent-property-rendered\" rel=\"Ext.AbstractComponent-property-rendered\" class=\"docClass\">rendered</a> 之后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-resize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-resize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-resize' class='name expandable'>resize</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> width, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> height, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> oldWidth, <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> oldHeight, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在组件被调整大小之后触发. ...</div><div class='long'><p>在组件被调整大小之后触发. 注意在首次布局初始化大小时 <em>不</em> 触发.\n在生命周期里, 使用 <a href=\"#!/api/Ext.AbstractComponent-event-boxready\" rel=\"Ext.AbstractComponent-event-boxready\" class=\"docClass\">boxready</a> 事件.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>width</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>这是宽度调整后的值</p>\n</div></li><li><span class='pre'>height</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>这是高度调整后的值</p>\n</div></li><li><span class='pre'>oldWidth</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>这是原来的宽度</p>\n</div></li><li><span class='pre'>oldHeight</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>这是原来的高度</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-show' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='defined-in docClass'>Ext.AbstractComponent</a><br/><a href='source/AbstractComponent.html#Ext-AbstractComponent-event-show' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.AbstractComponent-event-show' class='name expandable'>show</a>( <span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当调用 show 方法组件显示后触发. ...</div><div class='long'><p>当调用 <a href=\"#!/api/Ext.AbstractComponent-event-show\" rel=\"Ext.AbstractComponent-event-show\" class=\"docClass\">show</a> 方法组件显示后触发.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><div class='sub-desc'>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-specialkey' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-event-specialkey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-event-specialkey' class='name expandable'>specialkey</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> this, <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> e, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>当与导航相关的键（如箭头、tab键、Enter键、ESC键等）按下时，该事件响应。通过 Ext.util.KeyMap可以参见其它键的用法。Ext.EventObject.getKey函数确定输入键的类型，例如：\n\nvar form ...</div><div class='long'><p>当与导航相关的键（如箭头、tab键、Enter键、ESC键等）按下时，该事件响应。通过 <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>可以参见其它键的用法。<a href=\"#!/api/Ext.EventObject-method-getKey\" rel=\"Ext.EventObject-method-getKey\" class=\"docClass\">Ext.EventObject.getKey</a>函数确定输入键的类型，例如：</p>\n\n<pre><code>var form = new <a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>({\n    ...\n    items: [{\n            fieldLabel: 'Field 1',\n            name: 'field1',\n            allowBlank: false\n        },{\n            fieldLabel: 'Field 2',\n            name: 'field2',\n            listeners: {\n                specialkey: function(field, e){\n                    // e.HOME, e.END, e.PAGE_UP, e.PAGE_DOWN,\n                    // e.TAB, e.ESC, arrow keys: e.LEFT, e.RIGHT, e.UP, e.DOWN\n                    if (e.<a href=\"#!/api/Ext.EventObject-method-getKey\" rel=\"Ext.EventObject-method-getKey\" class=\"docClass\">getKey()</a> == e.ENTER) {\n                        var form = field.up('form').getForm();\n                        form.submit();\n                    }\n                }\n            }\n        }\n    ],\n    ...\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a><div class='sub-desc'>\n</div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a><div class='sub-desc'><p>The event object</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-staterestore' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-event-staterestore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-event-staterestore' class='name expandable'>staterestore</a>( <span class='pre'><a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在state对象被恢复之后触发。 ...</div><div class='long'><p>在state对象被恢复之后触发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a><div class='sub-desc'>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>散列值StateProvider返回的状态。state对象被传递到<b><tt>applyState</tt></b>。\n默认情况下，这只是拷贝到这个对象的属性值。\n重载的方法也许来提供自定义的状态恢复。</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-statesave' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='defined-in docClass'>Ext.state.Stateful</a><br/><a href='source/Stateful.html#Ext-state-Stateful-event-statesave' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.state.Stateful-event-statesave' class='name expandable'>statesave</a>( <span class='pre'><a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> this, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> state, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>在state对象保存到配置state的提供者之后触发。 ...</div><div class='long'><p>在state对象保存到配置state的提供者之后触发。</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a><div class='sub-desc'>\n</div></li><li><span class='pre'>state</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>state的散列值。这是通过调用<b><tt>getState()</tt></b>确定的对象。</p>\n\n<p>这个方法必须由开发人员提供返回什么代表state是必须的，\n默认情况下，Ext.state.Stateful有一个null实现。</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-validitychange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='defined-in docClass'>Ext.form.field.Field</a><br/><a href='source/Field2.html#Ext-form-field-Field-event-validitychange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Field-event-validitychange' class='name expandable'>validitychange</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a> this, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> isValid, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>Fires when a change in the field's validity is detected. ...</div><div class='long'><p>Fires when a change in the field's validity is detected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a><div class='sub-desc'>\n</div></li><li><span class='pre'>isValid</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>Whether or not the field is now valid</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-writeablechange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.form.field.Base' rel='Ext.form.field.Base' class='defined-in docClass'>Ext.form.field.Base</a><br/><a href='source/Base3.html#Ext-form-field-Base-event-writeablechange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.form.field.Base-event-writeablechange' class='name expandable'>writeablechange</a>( <span class='pre'><a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> this, <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> Read, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> eOpts</span> )</div><div class='description'><div class='short'>Fires when this field changes its read-only status. ...</div><div class='long'><p>Fires when this field changes its read-only status.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a><div class='sub-desc'>\n</div></li><li><span class='pre'>Read</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>only flag</p>\n</div></li><li><span class='pre'>eOpts</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>"});